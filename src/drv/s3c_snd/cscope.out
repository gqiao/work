cscope 15 /work/prj/teclong/src/drv/s3c_snd               0000209932
	@codecs/tlv320aic23.c

1 
	#LOG_TAG
 "év320aic23.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

19 
	~<löux/moduÀ.h
>

20 
	~<löux/moduÀ∑øm.h
>

21 
	~<löux/öô.h
>

22 
	~<löux/dñay.h
>

23 
	~<löux/pm.h
>

24 
	~<löux/i2c.h
>

25 
	~<löux/∂©f‹m_devi˚.h
>

26 
	~<sound/drivî.h
>

27 
	~<sound/c‹e.h
>

28 
	~<sound/pcm.h
>

29 
	~<sound/pcm_∑øms.h
>

30 
	~<sound/soc.h
>

31 
	~<sound/soc-d≠m.h
>

32 
	~<sound/év.h
>

33 
	~<sound/öôvÆ.h
>

35 #ifde‡
CONFIG_HHBF_FAST_REBOOT


36 
	~<asm/ªboŸ.h
>

39 
	~"év320aic23_28.h
"

41 
	#AUDIO_NAME
 "TLV320AIC23"

	)

42 
	#TLV320AIC23_VERSION
 "v0.12"

	)

49 (*
hhbf_audio_swôch
)(
Êag
Ë
NULL
;

50 
	`EXPORT_SYMBOL
(
hhbf_audio_swôch
);

52 
	sév320aic23_§©e_ªg_öfo
 {

53 
u32
 
ßm∂e_øã
;

54 
u8
 
c⁄åﬁ
;

55 
u8
 
dividî
;

63 c⁄° 
u16
 
év320aic23_ªg
[] = {

75 
	}
};

80 
ölöe
 
	$év320aic23_ªad_ªg_ˇche
(
¢d_soc_codec
 *
codec
, 
ªg
)

82 
u16
 *
ˇche
 = 
codec
->
ªg_ˇche
;

84 
	`__D
("\n");

87 i‡(
ªg
 > 
	`ARRAY_SIZE
(
év320aic23_ªg
))

90  
ˇche
[
ªg
];

91 
	}
}

96 
ölöe
 
	$év320aic23_wrôe_ªg_ˇche
(
¢d_soc_codec
 *
codec
, 
ªg
, 
vÆue
)

98 
u16
 *
ˇche
 = 
codec
->
ªg_ˇche
;

100 
	`__D
("\n");

103 i‡(
ªg
 > 
	`ARRAY_SIZE
(
év320aic23_ªg
))

106 
ˇche
[
ªg
] = 
vÆue
;

107 
	}
}

109 
	$év320aic23_wrôe
(
¢d_soc_codec
 *
codec
, 
ªg
, 
vÆue
)

111 
u8
 
d©a
[2];

113 
	`__D
("\n");

120 i‡((
ªg
 < 0 ||Ñeg > 9) && (reg != 15)) {

121 
	`__E
("%†InvÆidÑegi°î R%d\n", 
__func__
, 
ªg
);

128 
d©a
[0] = (
ªg
 << 1Ë| ((
vÆue
 >> 8) & 0x0001);

129 
d©a
[1] = 
vÆue
 & 0x00ff;

131 #ifdef 
TLV320AIC23_DEBUG


132 i‡(
vÆue
 =
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
ªg
))

135 
	`__D
(
AUDIO_NAME
 ": 0x%02x%02x, R%02d <= 0x%03x\n",

136 
d©a
[0], d©a[1], 
ªg
, 
vÆue
);

139 
	`év320aic23_wrôe_ªg_ˇche
 (
codec
, 
ªg
, 
vÆue
);

141 i‡(
codec
->
	`hw_wrôe
(codec->
c⁄åﬁ_d©a
, 
d©a
, 2) == 2)

144 
	`__E
("%s cannot write %03xÅoÑegister R%d\n",

145 
__func__
, 
vÆue
, 
ªg
);

147  -
EIO
;

148 
	}
}

150 
	#év320aic23_ª£t
(
c
Ë
	`év320aic23_wrôe
(c, 
TLV320AIC23_RESET
, 0)

	)

153 c⁄° *
	gªc_§c_ãxt
[] = { "Line", "Mic" };

154 c⁄° *
	gdìmph_ãxt
[] = {"None", "32Khz", "44.1Khz", "48Khz"};

156 c⁄° 
soc_íum
 
	gªc_§c_íum
 =

157 
SOC_ENUM_SINGLE
(
TLV320AIC23_ANLG
, 2, 2, 
ªc_§c_ãxt
);

159 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gév320aic23_ªc_§c_mux_c⁄åﬁs
 =

160 
SOC_DAPM_ENUM
("I≈uàSñe˘", 
ªc_§c_íum
);

162 c⁄° 
soc_íum
 
	gév320aic23_ªc_§c
 =

163 
SOC_ENUM_SINGLE
(
TLV320AIC23_ANLG
, 2, 2, 
ªc_§c_ãxt
);

164 c⁄° 
soc_íum
 
	gév320aic23_dìmph
 =

165 
SOC_ENUM_SINGLE
(
TLV320AIC23_DIGT
, 1, 4, 
dìmph_ãxt
);

167 c⁄° 
DECLARE_TLV_DB_SCALE
(
out_gaö_év
, -12100, 100, 0);

168 c⁄° 
DECLARE_TLV_DB_SCALE
(
öput_gaö_év
, -1725, 75, 0);

169 c⁄° 
DECLARE_TLV_DB_SCALE
(
sidë⁄e_vﬁ_év
, -1800, 300, 0);

171 
	$¢d_soc_év320aic23_put_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

172 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

174 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

175 
u16
 
vÆ
, 
ªg
;

177 
	`__D
("\n");

179 
vÆ
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] & 0x07);

188 
vÆ
 = (val >= 4) ? 4 : (3 - val);

190 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_ANLG
) & (~0x1C0);

191 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ANLG
, 
ªg
 | (
vÆ
 << 6));

194 
	}
}

196 
	$¢d_soc_év320aic23_gë_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

197 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

199 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

200 
u16
 
vÆ
;

202 
	`__D
("\n");

204 
vÆ
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_ANLG
) & (0x1C0);

205 
vÆ
 = val >> 6;

206 
vÆ
 = (val >= 4) ? 4 : (3 - val);

207 
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] = 
vÆ
;

210 
	}
}

212 
	#SOC_TLV320AIC23_SINGLE_TLV
(
x«me
, 
ªg
, 
shi·
, 
max
, 
övît
, 
év_¨øy
) \

213 { .
iÁ˚
 = 
SNDRV_CTL_ELEM_IFACE_MIXER
, .
«me
 = 
x«me
, \

214 .
ac˚ss
 = 
SNDRV_CTL_ELEM_ACCESS_TLV_READ
 | \

215 
SNDRV_CTL_ELEM_ACCESS_READWRITE
, \

216 .
év
.
p
 = (
év_¨øy
), \

217 .
öfo
 = 
¢d_soc_öfo_vﬁsw
, .
gë
 = 
¢d_soc_év320aic23_gë_vﬁsw
, \

218 .
put
 = 
¢d_soc_év320aic23_put_vﬁsw
, \

219 .
¥iv©e_vÆue
 = 
	`SOC_SINGLE_VALUE
(
ªg
, 
shi·
, 
max
, 
övît
Ë}

	)

221 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gév320aic23_¢d_c⁄åﬁs
[] = {

222 
SOC_DOUBLE_R_TLV
("DigôÆ Pœyback Vﬁume", 
TLV320AIC23_LCHNVOL
,

223 
TLV320AIC23_RCHNVOL
, 0, 127, 0, 
out_gaö_év
),

224 
SOC_SINGLE
("DigôÆ Pœyback Swôch", 
TLV320AIC23_DIGT
, 3, 1, 1),

225 
SOC_DOUBLE_R
("LöêI≈uàSwôch", 
TLV320AIC23_LINVOL
,

226 
TLV320AIC23_RINVOL
, 7, 1, 0),

227 
SOC_DOUBLE_R_TLV
("LöêI≈uàVﬁume", 
TLV320AIC23_LINVOL
,

228 
TLV320AIC23_RINVOL
, 0, 31, 0, 
öput_gaö_év
),

229 
SOC_SINGLE
("Mi¯I≈uàSwôch", 
TLV320AIC23_ANLG
, 1, 1, 1),

230 
SOC_SINGLE
("Mi¯Boo°î Swôch", 
TLV320AIC23_ANLG
, 0, 1, 0),

231 
SOC_TLV320AIC23_SINGLE_TLV
("Sidë⁄êVﬁume", 
TLV320AIC23_ANLG
,

232 6, 4, 0, 
sidë⁄e_vﬁ_év
),

233 
SOC_ENUM
("Pœyback De-emphasis", 
év320aic23_dìmph
),

238 
	$év320aic23_add_c⁄åﬁs
(
¢d_soc_codec
 *
codec
)

240 
îr
, 
i
;

242 
	`__D
("\n");

244 
i
 = 0; i < 
	`ARRAY_SIZE
(
év320aic23_¢d_c⁄åﬁs
); i++) {

245 i‡((
îr
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
,

246 
	`¢d_soc_˙ew
(&
év320aic23_¢d_c⁄åﬁs
[
i
],
codec
, 
NULL
))) < 0)

247  
îr
;

250 
	}
}

253 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gév320aic23_ouçut_mixî_c⁄åﬁs
[] = {

254 
SOC_DAPM_SINGLE
("LöêBy∑s†Swôch", 
TLV320AIC23_ANLG
, 3, 1, 0),

255 
SOC_DAPM_SINGLE
("Mi¯Sidë⁄êSwôch", 
TLV320AIC23_ANLG
, 5, 1, 0),

256 
SOC_DAPM_SINGLE
("Pœyback Swôch", 
TLV320AIC23_ANLG
, 4, 1, 0),

259 c⁄° 
¢d_soc_d≠m_widgë
 
	gév320aic23_d≠m_widgës
[] = {

260 
SND_SOC_DAPM_DAC
("DAC", "Pœyback", 
TLV320AIC23_PWR
, 3, 1),

261 
SND_SOC_DAPM_ADC
("ADC", "C≠tuª", 
TLV320AIC23_PWR
, 2, 1),

262 
SND_SOC_DAPM_MUX
("C≠tuª Sour˚", 
SND_SOC_NOPM
, 0, 0,

263 &
év320aic23_ªc_§c_mux_c⁄åﬁs
),

264 
SND_SOC_DAPM_MIXER
("OuçuàMixî", 
TLV320AIC23_PWR
, 4, 1,

265 &
év320aic23_ouçut_mixî_c⁄åﬁs
[0],

266 
ARRAY_SIZE
(
év320aic23_ouçut_mixî_c⁄åﬁs
)),

267 
SND_SOC_DAPM_PGA
("LöêI≈ut", 
TLV320AIC23_PWR
, 0, 1, 
NULL
, 0),

268 
SND_SOC_DAPM_PGA
("Mi¯I≈ut", 
TLV320AIC23_PWR
, 1, 1, 
NULL
, 0),

270 
SND_SOC_DAPM_OUTPUT
("LHPOUT"),

271 
SND_SOC_DAPM_OUTPUT
("RHPOUT"),

272 
SND_SOC_DAPM_OUTPUT
("LOUT"),

273 
SND_SOC_DAPM_OUTPUT
("ROUT"),

275 
SND_SOC_DAPM_INPUT
("LLINEIN"),

276 
SND_SOC_DAPM_INPUT
("RLINEIN"),

278 
SND_SOC_DAPM_INPUT
("MICIN"),

281 c⁄° 
¢d_soc_d≠m_rouã
 
	göãrc⁄
[] = {

288 {"RHPOUT", 
NULL
, "Output Mixer"},

289 {"LHPOUT", 
NULL
, "Output Mixer"},

290 {"LOUT", 
NULL
, "Output Mixer"},

291 {"ROUT", 
NULL
, "Output Mixer"},

302 {"ADC", 
NULL
, "Capture Source"},

307 c⁄° 
év320aic23_§©e_ªg_öfo
 
	g§©e_ªg_öfo
[] = {

320 
	$év320aic23_add_widgës
(
¢d_soc_codec
 *
codec
)

322 
i
;

324 
	`__D
("\n");

326 
i
 = 0; i < 
	`ARRAY_SIZE
(
év320aic23_d≠m_widgës
); i++) {

327 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, &
év320aic23_d≠m_widgës
[
i
]);

331 
	`¢d_soc_d≠m_add_rouãs
(
codec
, 
öãrc⁄
, 
	`ARRAY_SIZE
(intercon));

333 
	`¢d_soc_d≠m_√w_widgës
(
codec
);

335 
	}
}

337 
	s_c€ff_div
 {

338 
u32
 
	mm˛k
;

339 
u32
 
	møã
;

340 
u16
 
	mfs
;

341 
u8
 
	m§
:5;

342 
u8
 
	musb
:1;

346 c⁄° 
_c€ff_div
 
	gc€ff_div
[] = {

410 
ölöe
 
	$gë_c€ff
(
m˛k
, 
øã
)

412 
i
;

414 
	`__D
("\n");

416 
i
 = 0; i < 
	`ARRAY_SIZE
(
c€ff_div
); i++) {

417 i‡(
c€ff_div
[
i
].
øã
 =øã && c€ff_div[i].
m˛k
 == mclk)

418  
i
;

421 
	`__E
("tlv320aic23: couldÇot get coeff for mclk %d @Ñate %d\n",

422 
m˛k
, 
øã
);

423  -
EINVAL
;

424 
	}
}

426 
	$év320aic23_£t_dai_˛kdiv
(
¢d_soc_codec_dai
 *
codec_dai
,

427 
div_id
, 
div
)

429 
¢d_soc_codec
 *
codec
 = 
codec_dai
->codec;

430 
u16
 
ªg
;

432 
	`__D
("\n");

434 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_SRATE
) & 0x003f;

435 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_SRATE
, 
ªg
 | 
div
);

438 
	}
}

440 
	$év320aic23_£t_dai_fmt
(
¢d_soc_codec_dai
 *
codec_dai
,

441 
fmt
)

443 
¢d_soc_codec
 *
codec
 = 
codec_dai
->codec;

444 
u16
 
iÁ˚_ªg
;

446 
	`__D
("\n");

448 
iÁ˚_ªg
 =

449 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_DIGT_FMT
) & (~0x03);

452 
fmt
 & 
SND_SOC_DAIFMT_MASTER_MASK
) {

453 
SND_SOC_DAIFMT_CBM_CFM
:

454 
iÁ˚_ªg
 |
TLV320AIC23_MS_MASTER
;

456 
SND_SOC_DAIFMT_CBS_CFS
:

459  -
EINVAL
;

464 
fmt
 & 
SND_SOC_DAIFMT_FORMAT_MASK
) {

465 
SND_SOC_DAIFMT_I2S
:

466 
iÁ˚_ªg
 |
TLV320AIC23_FOR_I2S
;

468 
SND_SOC_DAIFMT_DSP_A
:

469 
iÁ˚_ªg
 |
TLV320AIC23_FOR_DSP
;

471 
SND_SOC_DAIFMT_RIGHT_J
:

473 
SND_SOC_DAIFMT_LEFT_J
:

474 
iÁ˚_ªg
 |
TLV320AIC23_FOR_LJUST
;

477  -
EINVAL
;

481 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_DIGT_FMT
, 
iÁ˚_ªg
);

484 
	}
}

486 
	$év320aic23_£t_dai_sys˛k
(
¢d_soc_codec_dai
 *
codec_dai
,

487 
˛k_id
, 
‰eq
, 
dú
)

489 
	`__D
("\n");

491 
‰eq
) {

495  -
EINVAL
;

496 
	}
}

498 
	$év320aic23_pcm_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

499 
¢d_pcm_hw_∑øms
 *
∑øms
)

501 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

502 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

503 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

504 
u16
 
iÁ˚_ªg
, 
d©a
;

505 
u8
 
cou¡
 = 0;

507 
	`__D
("\n");

509 
iÁ˚_ªg
 =

510 
	`év320aic23_ªad_ªg_ˇche
(
codec
,

511 
TLV320AIC23_DIGT_FMT
) & ~(0x03 << 2);

516 (
§©e_ªg_öfo
[
cou¡
].
ßm∂e_øã
 !
	`∑øms_øã
(
∑øms
)) &&

517 (
cou¡
 < 
	`ARRAY_SIZE
(
§©e_ªg_öfo
))) {

518 
cou¡
++;

521 
d©a
 = (
§©e_ªg_öfo
[
cou¡
].
dividî
 << 
TLV320AIC23_CLKIN_SHIFT
) |

522 (
§©e_ªg_öfo
[
cou¡
]. 
c⁄åﬁ
 << 
TLV320AIC23_BOSR_SHIFT
) |

523 
TLV320AIC23_USB_CLK_ON
;

525 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_SRATE
, 
d©a
);

527 
	`∑øms_f‹m©
(
∑øms
)) {

528 
SNDRV_PCM_FORMAT_S16_LE
:

530 
SNDRV_PCM_FORMAT_S20_3LE
:

531 
iÁ˚_ªg
 |= (0x01 << 2);

533 
SNDRV_PCM_FORMAT_S24_LE
:

534 
iÁ˚_ªg
 |= (0x02 << 2);

536 
SNDRV_PCM_FORMAT_S32_LE
:

537 
iÁ˚_ªg
 |= (0x03 << 2);

540 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_DIGT_FMT
, 
iÁ˚_ªg
);

543 
	}
}

545 
	$év320aic23_pcm_¥ï¨e
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

547 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

548 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

549 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

551 
	`__D
("\n");

554 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ACTIVE
, 0x0001);

557 
	}
}

559 
	$év320aic23_shutdown
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

561 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

562 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

563 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

565 
	`__D
("\n");

568 i‡(!
codec
->
a˘ive
) {

569 
	`udñay
(50);

570 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ACTIVE
, 0x0);

572 
	}
}

574 
	$év320aic23_muã
(
¢d_soc_codec_dai
 *
dai
, 
muã
)

576 
¢d_soc_codec
 *
codec
 = 
dai
->codec;

577 
u16
 
ªg
;

579 
	`__D
("\n");

581 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_DIGT
);

582 i‡(
muã
)

583 
ªg
 |
TLV320AIC23_DACM_MUTE
;

586 
ªg
 &~
TLV320AIC23_DACM_MUTE
;

588 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_DIGT
, 
ªg
);

591 
	}
}

593 
	$év320aic23_d≠m_evít
(
¢d_soc_codec
 *
codec
, 
evít
)

595 
	`__D
("\n");

598 
	}
}

600 
	$év320aic23_£t_büs_Àvñ
(
¢d_soc_codec
 *
codec
,

601 
¢d_soc_büs_Àvñ
 
Àvñ
)

603 
u16
 
ªg
;

605 
	`__D
("\n");

607 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_PWR
) & 0xff7f;

609 
Àvñ
) {

610 
SND_SOC_BIAS_ON
:

612 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_PWR
, (
ªg
 & 0x0001));

614 
SND_SOC_BIAS_PREPARE
:

616 
SND_SOC_BIAS_STANDBY
:

618 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_PWR
, ((
ªg
 & 0x0001) | 0x00fc));

620 
SND_SOC_BIAS_OFF
:

622 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ACTIVE
, 0x0);

623 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_PWR
, 0xffff);

626 
codec
->
büs_Àvñ
 = 
Àvñ
;

628 
	}
}

630 
	#AIC23_RATES
 
SNDRV_PCM_RATE_8000_96000


	)

631 
	#AIC23_FORMATS
 (
SNDRV_PCM_FMTBIT_S16_LE
 | 
SNDRV_PCM_FMTBIT_S20_3LE
 | \

632 
SNDRV_PCM_FMTBIT_S24_3LE
 | 
SNDRV_PCM_FMTBIT_S32_LE
)

	)

634 
¢d_soc_codec_dai
 
	gév320aic23_dai
 = {

635 .
«me
 = "TLV320AIC23",

636 .
	g∂ayback
 = {

637 .
°ªam_«me
 = "Playback",

638 .
	gch™√ls_mö
 = 2,

639 .
	gch™√ls_max
 = 2,

640 .
	gøãs
 = 
AIC23_RATES
,

641 .
	gf‹m©s
 = 
AIC23_FORMATS
,},

642 .
	gˇ±uª
 = {

643 .
°ªam_«me
 = "Capture",

644 .
	gch™√ls_mö
 = 2,

645 .
	gch™√ls_max
 = 2,

646 .
	gøãs
 = 
AIC23_RATES
,

647 .
	gf‹m©s
 = 
AIC23_FORMATS
,},

648 .
	g›s
 = {

649 .
¥ï¨e
 = 
év320aic23_pcm_¥ï¨e
,

650 .
	ghw_∑øms
 = 
év320aic23_pcm_hw_∑øms
,

651 .
	gshutdown
 = 
év320aic23_shutdown
,

653 .
	gdai_›s
 = {

654 .
digôÆ_muã
 = 
év320aic23_muã
,

655 .
	g£t_fmt
 = 
év320aic23_£t_dai_fmt
,

656 .
	g£t_sys˛k
 = 
év320aic23_£t_dai_sys˛k
,

657 .
	g£t_˛kdiv
 = 
év320aic23_£t_dai_˛kdiv
,

660 
EXPORT_SYMBOL_GPL
(
év320aic23_dai
);

662 
	$év320aic23_w‹k
(
w‹k_°ru˘
 *
w‹k
)

664 
	`__D
("\n");

665 
	}
}

667 
	$év320aic23_su•íd
(
∂©f‹m_devi˚
 *
pdev
, 
pm_mesßge_t
 
°©e
)

669 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

670 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

672 
	`__D
("\n");

674 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ACTIVE
, 0x0);

675 
	`év320aic23_£t_büs_Àvñ
(
codec
, 
SND_SOC_BIAS_OFF
);

677 
	}
}

679 
	$év320aic23_ªsume
(
∂©f‹m_devi˚
 *
pdev
)

681 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

682 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

683 
i
;

684 
u16
 
ªg
;

686 
	`__D
("\n");

689 
ªg
 = 0;Ñeg < 
	`ARRAY_SIZE
(
év320aic23_ªg
); 
i
++) {

690 
u16
 
vÆ
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
ªg
);

691 
	`év320aic23_wrôe
(
codec
, 
ªg
, 
vÆ
);

694 
	`év320aic23_£t_büs_Àvñ
(
codec
, 
SND_SOC_BIAS_STANDBY
);

695 
	`év320aic23_£t_büs_Àvñ
(
codec
, codec->
su•íd_büs_Àvñ
);

698 
	}
}

704 
	$év320aic23_öô
(
¢d_soc_devi˚
 *
socdev
)

706 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

707 
ªg
, 
ªt
 = 0;

709 
	`__D
("\n");

711 
codec
->
«me
 = "TLV320AIC23";

712 
codec
->
ow√r
 = 
THIS_MODULE
;

713 
codec
->
ªad
 = 
év320aic23_ªad_ªg_ˇche
;

714 
codec
->
wrôe
 = 
év320aic23_wrôe
;

715 
codec
->
£t_büs_Àvñ
 = 
év320aic23_£t_büs_Àvñ
;

716 
codec
->
d≠m_evít
 = 
év320aic23_d≠m_evít
;

717 
codec
->
dai
 = &
év320aic23_dai
;

718 
codec
->
num_dai
 = 1;

720 
codec
->
ªg_ˇche
 = (*)
év320aic23_ªg
;

721 
codec
->
ªg_ˇche_size
 = 
	`ARRAY_SIZE
(
év320aic23_ªg
);

723 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_RESET
, 0);

726 i‡((
ªt
 = 
	`¢d_soc_√w_pcms
(
socdev
, 
SNDRV_DEFAULT_IDX1
, 
SNDRV_DEFAULT_STR1
)) < 0) {

727 
	`__E
("tlv320aic23: failedÅo createÖcms\n");

728 
pcm_îr
;

732 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_RESET
, 0);

735 
	`év320aic23_£t_büs_Àvñ
(
codec
, 
SND_SOC_BIAS_ON
);

740 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_LINVOL
);

741 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_LINVOL
,

742 (
ªg
 & (~
TLV320AIC23_LIM_MUTED
)Ë|(
TLV320AIC23_LRS_ENABLED
));

744 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_RINVOL
);

745 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_RINVOL
,

746 (
ªg
 & (~
TLV320AIC23_LIM_MUTED
)Ë| 
TLV320AIC23_LRS_ENABLED
);

751 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_LCHNVOL
,

752 (
TLV320AIC23_DEFAULT_OUT_VOL
 & 
TLV320AIC23_OUT_VOL_MASK
Ë|
TLV320AIC23_LRS_ENABLED
);

753 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_RCHNVOL
,

754 (
TLV320AIC23_DEFAULT_OUT_VOL
 & 
TLV320AIC23_OUT_VOL_MASK
Ë|
TLV320AIC23_LRS_ENABLED
);

756 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_ANLG
);

757 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ANLG
,

758 ((
ªg
Ë& (~
TLV320AIC23_BYPASS_ON
) &

759 (~
TLV320AIC23_MICM_MUTED
)Ë| 
TLV320AIC23_INSEL_MIC
);

762 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_DIGT
, 
TLV320AIC23_DEEMP_44K
);

765 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_DIGT_FMT
);

766 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_DIGT_FMT
, 
ªg
);

768 
ªg
 = 
	`év320aic23_ªad_ªg_ˇche
(
codec
, 
TLV320AIC23_SRATE
);

769 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_SRATE
, 
ªg
);

771 
	`év320aic23_wrôe
(
codec
, 
TLV320AIC23_ACTIVE
, 0x1);

773 
	`év320aic23_add_c⁄åﬁs
(
codec
);

774 
	`év320aic23_add_widgës
(
codec
);

776 i‡((
ªt
 = 
	`¢d_soc_ªgi°î_ˇrd
(
socdev
)) < 0) {

777 
	`__E
("tlv320aic23: failedÅoÑegister card\n");

778 
ˇrd_îr
;

781  
ªt
;

783 
ˇrd_îr
:

784 
	`¢d_soc_‰ì_pcms
(
socdev
);

785 
	`¢d_soc_d≠m_‰ì
(
socdev
);

786 
pcm_îr
:

787  
ªt
;

788 
	}
}

792 
¢d_soc_devi˚
 *
	gév320aic23_socdev
;

794 
	$hhbf_audio_˛o£
()

796 
	`__D
("\n");

798 i‡(!
év320aic23_socdev
) ;

799 
	`ˇn˚l_dñayed_w‹k
(&
év320aic23_socdev
->
dñayed_w‹k
);

800 
	`év320aic23_ª£t
(
év320aic23_socdev
->
codec
);

801 
	}
}

802 
EXPORT_SYMBOL
(
hhbf_audio_˛o£
);

804 #i‡
deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

806 
	~<asm/¨ch/gpio.h
>

807 
	~<löux/¥oc_fs.h
>

808 
¥oc_dú_íåy
 *
	gw1_¥oc_íåy
;

809 
¥oc_dú_íåy
 *
	gw2_¥oc_íåy
;

810 
¥oc_dú_íåy
 *
	g˘æ_¥oc_íåy
;

811 
¥oc_dú_íåy
 *
	gd©a_¥oc_íåy
;

812 
	gw1_Àd
 = '0';

813 
	gw2_Àd
 = '0';

814 
	g˘æ_Àd
 = '0';

815 
	gícodî_Àd
 = '0';

817 
ssize_t
 
	$w1_LED_wrôe
–
fûe
 *
fûp
, c⁄° 
__u£r
 *
buff
,

818 
Àn
, *
d©a
)

820 
	`__D
("\n");

822 i‡(
Àn
 > 2) {

823 
	`__E
("Àn(%dË> 2!\n", ()
Àn
);

824  -
ENOSPC
;

826 i‡(
	`c›y_‰om_u£r
–&
w1_Àd
, 
buff
, 
Àn
 )) {

827  -
EFAULT
;

830 if((
w1_Àd
 & 0xff) == '0'){

831 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 0);

832 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 0);

834 i‡((
w1_Àd
 & 0xff) == '1'){

835 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 0);

836 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 1);

838 i‡((
w1_Àd
 & 0xff) == '2'){

839 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 1);

840 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 0);

842  
Àn
;

843 
	}
}

844 
	$w1_LED_ªad
–*
∑ge
, **
°¨t
, 
off_t
 
off
,

845 
cou¡
, *
eof
, *
d©a
 )

847 
Àn
;

849 
	`__D
("\n");

851 i‡(
off
 > 0) {

852 *
eof
 = 1;

855 
Àn
 = 
	`•rötf
(
∑ge
, "%d\n", ((
w1_Àd
 & 0xff) == '0') ? 0 : (((w1_led & 0xff) == '1') ? 1 : 2));

857  
Àn
;

858 
	}
}

859 
ssize_t
 
	$w2_LED_wrôe
–
fûe
 *
fûp
, c⁄° 
__u£r
 *
buff
,

860 
Àn
, *
d©a
)

862 
	`__D
("\n");

864 i‡(
Àn
 > 2) {

865 
	`__E
("Àn(%dË> 2!\n", ()
Àn
);

866  -
ENOSPC
;

868 i‡(
	`c›y_‰om_u£r
–&
w2_Àd
, 
buff
, 
Àn
 )) {

869  -
EFAULT
;

872 if((
w2_Àd
 & 0xff) == '0'){

873 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 0);

874 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 0);

876 i‡((
w2_Àd
 & 0xff) == '1'){

877 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 0);

878 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 1);

880 i‡((
w2_Àd
 & 0xff) == '2'){

881 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 1);

882 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 0);

884  
Àn
;

885 
	}
}

886 
	$w2_LED_ªad
–*
∑ge
, **
°¨t
, 
off_t
 
off
,

887 
cou¡
, *
eof
, *
d©a
 )

889 
Àn
;

891 
	`__D
("\n");

893 i‡(
off
 > 0) {

894 *
eof
 = 1;

897 
Àn
 = 
	`•rötf
(
∑ge
, "%d\n", ((
w2_Àd
 & 0xff) == '0') ? 0 : (((w2_led & 0xff) == '1') ? 1 : 2));

898  
Àn
;

899 
	}
}

900 
	$˘æ_LED_wrôe
–
fûe
 *
fûp
, c⁄° 
__u£r
 *
buff
,

901 
Àn
, *
d©a
 )

903 
	`__D
("\n");

905 i‡(
Àn
 > 2) {

906 
	`__E
("˘æ_LED_wrôe:Üí(%dË> 2!\n", ()
Àn
);

907  -
ENOSPC
;

909 i‡(
	`c›y_‰om_u£r
–&
˘æ_Àd
, 
buff
, 
Àn
 )) {

910  -
EFAULT
;

913 if((
˘æ_Àd
 & 0xff) == '0'){

914 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 0);

915 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 0);

916 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 0);

917 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 0);

920 i‡((
w1_Àd
 & 0xff) == '1'){

921 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 0);

922 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 1);

924 i‡((
w1_Àd
 & 0xff) == '2'){

925 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 1);

926 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 0);

928 i‡((
w2_Àd
 & 0xff) == '1'){

929 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 0);

930 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 1);

932 i‡((
w2_Àd
 & 0xff) == '2'){

933 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 1);

934 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 0);

938  
Àn
;

939 
	}
}

940 
	$˘æ_LED_ªad
–*
∑ge
, **
°¨t
, 
off_t
 
off
,

941 
cou¡
, *
eof
, *
d©a
 )

943 
Àn
;

944 i‡(
off
 > 0) {

945 *
eof
 = 1;

948 
Àn
 = 
	`•rötf
(
∑ge
, "%d\n", ((
˘æ_Àd
 & 0xff) == '0') ? 0 : 1);

949  
Àn
;

950 
	}
}

952 
ssize_t
 
	$íc_LED_wrôe
–
fûe
 *
fûp
, c⁄° 
__u£r
 *
buff
,

953 
Àn
, *
d©a
)

955 
	`__D
("\n");

957 i‡(
Àn
 > 2) {

958 
	`__E
("w1_LED_wrôe:Üí(%dË> 2!\n", ()
Àn
);

959  -
ENOSPC
;

961 i‡(
	`c›y_‰om_u£r
–&
ícodî_Àd
, 
buff
, 
Àn
 )) {

962  -
EFAULT
;

966 if((
ícodî_Àd
 & 0xff) == '0'){

967 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP9
, 0);

968 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP8
, 0);

970 i‡((
ícodî_Àd
 & 0xff) == '1'){

971 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP9
, 0);

972 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP8
, 1);

974 i‡((
ícodî_Àd
 & 0xff) == '2'){

975 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP9
, 1);

976 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP8
, 0);

978  
Àn
;

979 
	}
}

980 
	$íc_LED_ªad
–*
∑ge
, **
°¨t
, 
off_t
 
off
,

981 
cou¡
, *
eof
, *
d©a
 )

983 
Àn
 = 0;

985 
	`__D
("\n");

987 i‡(
off
 > 0) {

988 *
eof
 = 1;

992 
Àn
 = 
	`•rötf
(
∑ge
, "%d\n", ((
ícodî_Àd
 & 0xff) == '0') ? 0 : (((encoder_led & 0xff) == '1') ? 1 : 2));

994  
Àn
;

995 
	}
}

997 
	$¸óã_¥oc_Àd
()

999 
ªt
;

1001 
	`__D
("\n");

1004 
w1_¥oc_íåy
 = 
	`¸óã_¥oc_íåy
–"wúñess1", 0644, 
NULL
 );

1005 i‡(
w1_¥oc_íåy
 =
NULL
) {

1006 
ªt
 = -
ENOMEM
;

1007 
	`__E
("wireless1Üed: Couldn't createÖrocÉntry\n");

1009 
w1_¥oc_íåy
->
ªad_¥oc
 = 
w1_LED_ªad
;

1010 
w1_¥oc_íåy
->
wrôe_¥oc
 = 
w1_LED_wrôe
;

1011 
w1_¥oc_íåy
->
ow√r
 = 
THIS_MODULE
;

1012 
	`__E
("wireless1Üed: ModuleÜoaded.\n");

1015 
w2_¥oc_íåy
 = 
	`¸óã_¥oc_íåy
–"wúñess2", 0644, 
NULL
 );

1016 i‡(
w1_¥oc_íåy
 =
NULL
) {

1017 
ªt
 = -
ENOMEM
;

1018 
	`__E
("wireless2Üed: Couldn't createÖrocÉntry\n");

1020 
w2_¥oc_íåy
->
ªad_¥oc
 = 
w2_LED_ªad
;

1021 
w2_¥oc_íåy
->
wrôe_¥oc
 = 
w2_LED_wrôe
;

1022 
w2_¥oc_íåy
->
ow√r
 = 
THIS_MODULE
;

1023 
	`__E
("wireless2Üed: ModuleÜoaded.\n");

1026 
˘æ_¥oc_íåy
 = 
	`¸óã_¥oc_íåy
–"å™s„r", 0644, 
NULL
 );

1027 i‡(
˘æ_¥oc_íåy
 =
NULL
) {

1028 
ªt
 = -
ENOMEM
;

1029 
	`__E
("transferÜed: Couldn't createÖrocÉntry\n");

1031 
˘æ_¥oc_íåy
->
ªad_¥oc
 = 
˘æ_LED_ªad
;

1032 
˘æ_¥oc_íåy
->
wrôe_¥oc
 = 
˘æ_LED_wrôe
;

1033 
˘æ_¥oc_íåy
->
ow√r
 = 
THIS_MODULE
;

1034 
	`__E
("transferÜed: ModuleÜoaded.\n");

1037 
d©a_¥oc_íåy
 = 
	`¸óã_¥oc_íåy
–"ícodî", 0644, 
NULL
 );

1038 i‡(
d©a_¥oc_íåy
 =
NULL
) {

1039 
ªt
 = -
ENOMEM
;

1040 
	`__E
("encoderÜed: Couldn't createÖrocÉntry\n");

1042 
d©a_¥oc_íåy
->
ªad_¥oc
 = 
íc_LED_ªad
;

1043 
d©a_¥oc_íåy
->
wrôe_¥oc
 = 
íc_LED_wrôe
;

1044 
d©a_¥oc_íåy
->
ow√r
 = 
THIS_MODULE
;

1045 
	`__E
("encoderÜed: ModuleÜoaded.\n");

1049 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP10
, 0);

1050 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP13
, 0);

1051 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP12
, 0);

1052 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP11
, 0);

1054 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP9
, 0);

1055 
	`gpio_dúe˘i⁄_ouçut
(
S3C_GPP8
, 0);

1056 
	}
}

1058 
	$ªÀa£_¥oc_Àd
()

1060 
	`__D
("\n");

1062 
	`ªmove_¥oc_íåy
("wúñess1", &
¥oc_roŸ
);

1063 
	`ªmove_¥oc_íåy
("wúñess2", &
¥oc_roŸ
);

1064 
	`ªmove_¥oc_íåy
("å™s„r", &
¥oc_roŸ
);

1065 
	`ªmove_¥oc_íåy
("ícodî", &
¥oc_roŸ
);

1066 
	}
}

1073 
	gn‹mÆ_i2c
[] = { 0, 
I2C_CLIENT_END
 };

1076 
	gI2C_CLIENT_INSMOD
;

1078 
i2c_drivî
 
	gév320aic23_i2c_drivî
;

1079 
i2c_˛õ¡
 
	g˛õ¡_ãm∂©e
;

1081 
	$év320aic23_codec_¥obe
(
i2c_ad≠ãr
 *
ad≠
, 
addr
, 
köd
)

1083 
¢d_soc_devi˚
 *
socdev
 = 
év320aic23_socdev
;

1084 
év320aic23_£tup_d©a
 *
£tup
 = 
socdev
->
codec_d©a
;

1085 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1086 
i2c_˛õ¡
 *
i2c
;

1087 
ªt
;

1089 
	`__D
("\n");

1092 
	`¸óã_¥oc_Àd
();

1093 i‡(
addr
 !
£tup
->
i2c_addªss
)

1094  -
ENODEV
;

1096 
˛õ¡_ãm∂©e
.
ad≠ãr
 = 
ad≠
;

1097 
˛õ¡_ãm∂©e
.
addr
 =áddr;

1099 
i2c
 = &
˛õ¡_ãm∂©e
;

1101 
	`i2c_£t_˛õ¡d©a
(
i2c
, 
codec
);

1102 
codec
->
c⁄åﬁ_d©a
 = 
i2c
;

1104 i‡((
ªt
 = 
	`i2c_©èch_˛õ¡
(
i2c
)) < 0) {

1105 
	`__E
("ÁûedÅÿ©èch code¯©ádd∏%x\n", 
addr
);

1106 
îr
;

1109 i‡((
ªt
 = 
	`év320aic23_öô
(
socdev
)) < 0) {

1110 
	`__E
("failedÅo initialise TLV320AIC23\n");

1111 
îr
;

1114  
ªt
;

1116 
îr
:

1117 
	`k‰ì
(
codec
);

1118  
ªt
;

1119 
	}
}

1121 
	$év320aic23_i2c_dëach
(
i2c_˛õ¡
 *
˛õ¡
)

1123 
	`__D
("\n");

1125 
	`i2c_dëach_˛õ¡
(
˛õ¡
);

1127 
	}
}

1129 
	$év320aic23_i2c_©èch
(
i2c_ad≠ãr
 *
ad≠
)

1131 
	`__D
("\n");

1133  
	`i2c_¥obe
(
ad≠
, &
addr_d©a
, 
év320aic23_codec_¥obe
);

1134 
	}
}

1137 
i2c_drivî
 
	gév320aic23_i2c_drivî
 = {

1138 .
drivî
 = {

1139 .
«me
 = "TLV320AIC23 I2C Codec",

1140 .
	gow√r
 = 
THIS_MODULE
,

1142 .
	gid
 = 
I2C_DRIVERID_WM8753
 + 6,

1143 .
	g©èch_ad≠ãr
 = 
év320aic23_i2c_©èch
,

1144 .
	gdëach_˛õ¡
 = 
év320aic23_i2c_dëach
,

1145 .
	gcomm™d
 = 
NULL
,

1148 
i2c_˛õ¡
 
	g˛õ¡_ãm∂©e
 = {

1149 .
«me
 = "TLV320AIC23",

1150 .
	gdrivî
 = &
év320aic23_i2c_drivî
,

1155 
	$év320aic23_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

1157 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1158 
év320aic23_£tup_d©a
 *
£tup
 = 
socdev
->
codec_d©a
;

1159 
¢d_soc_codec
 *
codec
;

1160 
ªt
 = 0;

1162 
	`__D
("\n");

1163 
	`__I
("AudiÿCode¯Drivî %s\n", 
TLV320AIC23_VERSION
);

1164 i‡((
codec
 = 
	`kzÆloc
((
¢d_soc_codec
), 
GFP_KERNEL
)Ë=
NULL
)

1165  -
ENOMEM
;

1167 
socdev
->
codec
 = codec;

1168 
	`muãx_öô
(&
codec
->
muãx
);

1169 
	`INIT_LIST_HEAD
(&
codec
->
d≠m_widgës
);

1170 
	`INIT_LIST_HEAD
(&
codec
->
d≠m_∑ths
);

1171 
év320aic23_socdev
 = 
socdev
;

1172 
	`INIT_DELAYED_WORK
(&
codec
->
dñayed_w‹k
, 
év320aic23_w‹k
);

1174 #i‡
	`deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

1175 i‡(
£tup
->
i2c_addªss
) {

1176 
n‹mÆ_i2c
[0] = 
£tup
->
i2c_addªss
;

1177 
codec
->
hw_wrôe
 = (
hw_wrôe_t
)
i2c_ma°î_£nd
;

1178 i‡((
ªt
 = 
	`i2c_add_drivî
(&
év320aic23_i2c_drivî
)) != 0)

1179 
	`__E
("can'tádd i2c driver");

1183  
ªt
;

1184 
	}
}

1189 
	$run_dñayed_w‹k
(
dñayed_w‹k
 *
dw‹k
)

1191 
ªt
 = 0;

1193 
	`__D
("\n");

1198 i‡((
ªt
 = 
	`ˇn˚l_dñayed_w‹k
(
dw‹k
)) != 0) {

1199 
	`scheduÀ_dñayed_w‹k
(
dw‹k
, 0);

1200 
	`Êush_scheduÀd_w‹k
();

1202  
ªt
;

1203 
	}
}

1206 
	$év320aic23_ªmove
(
∂©f‹m_devi˚
 *
pdev
)

1208 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1209 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1211 
	`__D
("\n");

1214 
	`ªÀa£_¥oc_Àd
();

1215 i‡(
codec
->
c⁄åﬁ_d©a
)

1216 
	`év320aic23_£t_büs_Àvñ
(
codec
, 
SND_SOC_BIAS_OFF
);

1217 
	`run_dñayed_w‹k
(&
codec
->
dñayed_w‹k
);

1218 
	`¢d_soc_‰ì_pcms
(
socdev
);

1219 
	`¢d_soc_d≠m_‰ì
(
socdev
);

1221 #i‡
	`deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

1222 
	`i2c_dñ_drivî
(&
év320aic23_i2c_drivî
);

1226 
	`k‰ì
(
codec
);

1228 
	}
}

1230 
¢d_soc_codec_devi˚
 
	gsoc_codec_dev_év320aic23
 = {

1231 .
¥obe
 = 
év320aic23_¥obe
,

1232 .
	gªmove
 = 
év320aic23_ªmove
,

1233 .
	gsu•íd
 = 
év320aic23_su•íd
,

1234 .
	gªsume
 = 
év320aic23_ªsume
,

1237 
EXPORT_SYMBOL_GPL
(
soc_codec_dev_év320aic23
);

1239 
MODULE_DESCRIPTION
("ASoC TLV320AIC23 driver");

1240 
MODULE_AUTHOR
("Liam Girdwood");

1241 
MODULE_LICENSE
("GPL");

	@codecs/tlv320aic23_28.h

12 #i‚de‡
_TLV320AIC23_28_H


13 
	#_TLV320AIC23_28_H


	)

15 
	#CONFIG_HHTECH_MINIPMP
 1

	)

17 
	#TLV320AIC23_SYSCLK
 0

	)

19 
	sév320aic23_£tup_d©a
 {

20 
	mi2c_addªss
;

24 
	#TLV320AIC23_LINVOL
 0x00

	)

25 
	#TLV320AIC23_RINVOL
 0x01

	)

26 
	#TLV320AIC23_LCHNVOL
 0x02

	)

27 
	#TLV320AIC23_RCHNVOL
 0x03

	)

28 
	#TLV320AIC23_ANLG
 0x04

	)

29 
	#TLV320AIC23_DIGT
 0x05

	)

30 
	#TLV320AIC23_PWR
 0x06

	)

31 
	#TLV320AIC23_DIGT_FMT
 0x07

	)

32 
	#TLV320AIC23_SRATE
 0x08

	)

33 
	#TLV320AIC23_ACTIVE
 0x09

	)

34 
	#TLV320AIC23_RESET
 0x0F

	)

37 
	#TLV320AIC23_LRS_ENABLED
 0x0100

	)

38 
	#TLV320AIC23_LIM_MUTED
 0x0080

	)

39 
	#TLV320AIC23_LIV_DEFAULT
 0x0017

	)

40 
	#TLV320AIC23_LIV_MAX
 0x001f

	)

41 
	#TLV320AIC23_LIV_MIN
 0x0000

	)

44 
	#TLV320AIC23_LZC_ON
 0x0080

	)

45 
	#TLV320AIC23_LHV_DEFAULT
 0x0079

	)

46 
	#TLV320AIC23_LHV_MAX
 0x007f

	)

47 
	#TLV320AIC23_LHV_MIN
 0x0000

	)

50 
	#TLV320AIC23_STA_REG
(
x
Ë((x)<<6)

	)

51 
	#TLV320AIC23_STE_ENABLED
 0x0020

	)

52 
	#TLV320AIC23_DAC_SELECTED
 0x0010

	)

53 
	#TLV320AIC23_BYPASS_ON
 0x0008

	)

54 
	#TLV320AIC23_INSEL_MIC
 0x0004

	)

55 
	#TLV320AIC23_MICM_MUTED
 0x0002

	)

56 
	#TLV320AIC23_MICB_20DB
 0x0001

	)

59 
	#TLV320AIC23_DACM_MUTE
 0x0008

	)

60 
	#TLV320AIC23_DEEMP_32K
 0x0002

	)

61 
	#TLV320AIC23_DEEMP_44K
 0x0004

	)

62 
	#TLV320AIC23_DEEMP_48K
 0x0006

	)

63 
	#TLV320AIC23_ADCHP_ON
 0x0001

	)

66 
	#TLV320AIC23_DEVICE_PWR_OFF
 0x0080

	)

67 
	#TLV320AIC23_CLK_OFF
 0x0040

	)

68 
	#TLV320AIC23_OSC_OFF
 0x0020

	)

69 
	#TLV320AIC23_OUT_OFF
 0x0010

	)

70 
	#TLV320AIC23_DAC_OFF
 0x0008

	)

71 
	#TLV320AIC23_ADC_OFF
 0x0004

	)

72 
	#TLV320AIC23_MIC_OFF
 0x0002

	)

73 
	#TLV320AIC23_LINE_OFF
 0x0001

	)

76 
	#TLV320AIC23_MS_MASTER
 0x0040

	)

77 
	#TLV320AIC23_LRSWAP_ON
 0x0020

	)

78 
	#TLV320AIC23_LRP_ON
 0x0010

	)

79 
	#TLV320AIC23_IWL_16
 0x0000

	)

80 
	#TLV320AIC23_IWL_20
 0x0004

	)

81 
	#TLV320AIC23_IWL_24
 0x0008

	)

82 
	#TLV320AIC23_IWL_32
 0x000C

	)

83 
	#TLV320AIC23_FOR_I2S
 0x0002

	)

84 
	#TLV320AIC23_FOR_DSP
 0x0003

	)

85 
	#TLV320AIC23_FOR_LJUST
 0x0001

	)

88 
	#TLV320AIC23_CLKOUT_HALF
 0x0080

	)

89 
	#TLV320AIC23_CLKIN_HALF
 0x0040

	)

90 
	#TLV320AIC23_BOSR_384fs
 0x0002

	)

91 
	#TLV320AIC23_USB_CLK_ON
 0x0001

	)

92 
	#TLV320AIC23_SR_MASK
 0xf

	)

93 
	#TLV320AIC23_CLKOUT_SHIFT
 7

	)

94 
	#TLV320AIC23_CLKIN_SHIFT
 6

	)

95 
	#TLV320AIC23_SR_SHIFT
 2

	)

96 
	#TLV320AIC23_BOSR_SHIFT
 1

	)

99 
	#TLV320AIC23_ACT_ON
 0x0001

	)

105 
	#TLV320AIC23_DEFAULT_OUT_VOL
 0x70

	)

106 
	#TLV320AIC23_DEFAULT_IN_VOLUME
 0x10

	)

108 
	#TLV320AIC23_OUT_VOL_MIN
 
TLV320AIC23_LHV_MIN


	)

109 
	#TLV320AIC23_OUT_VOL_MAX
 
TLV320AIC23_LHV_MAX


	)

110 
	#TLV320AIC23_OUT_VO_RANGE
 (
TLV320AIC23_OUT_VOL_MAX
 - \

111 
TLV320AIC23_OUT_VOL_MIN
)

	)

112 
	#TLV320AIC23_OUT_VOL_MASK
 
TLV320AIC23_OUT_VOL_MAX


	)

114 
	#TLV320AIC23_IN_VOL_MIN
 
TLV320AIC23_LIV_MIN


	)

115 
	#TLV320AIC23_IN_VOL_MAX
 
TLV320AIC23_LIV_MAX


	)

116 
	#TLV320AIC23_IN_VOL_RANGE
 (
TLV320AIC23_IN_VOL_MAX
 - \

117 
TLV320AIC23_IN_VOL_MIN
)

	)

118 
	#TLV320AIC23_IN_VOL_MASK
 
TLV320AIC23_IN_VOL_MAX


	)

120 
	#TLV320AIC23_SIDETONE_MASK
 0x1c0

	)

121 
	#TLV320AIC23_SIDETONE_0
 0x100

	)

122 
	#TLV320AIC23_SIDETONE_6
 0x000

	)

123 
	#TLV320AIC23_SIDETONE_9
 0x040

	)

124 
	#TLV320AIC23_SIDETONE_12
 0x080

	)

125 
	#TLV320AIC23_SIDETONE_18
 0x0c0

	)

127 
¢d_soc_codec_dai
 
év320aic23_dai
;

128 
¢d_soc_codec_devi˚
 
soc_codec_dev_év320aic23
;

131 
	#TLV320AIC23_PLL1
 0

	)

132 
	#TLV320AIC23_PLL2
 1

	)

135 
	#TLV320AIC23_MCLK
 0

	)

136 
	#TLV320AIC23_PCMCLK
 1

	)

139 
	#TLV320AIC23_PCMDIV
 0

	)

140 
	#TLV320AIC23_BCLKDIV
 1

	)

141 
	#TLV320AIC23_VXCLKDIV
 2

	)

144 
	#TLV320AIC23_PCM_DIV_1
 (0 << 6)

	)

145 
	#TLV320AIC23_PCM_DIV_3
 (2 << 6)

	)

146 
	#TLV320AIC23_PCM_DIV_5_5
 (3 << 6)

	)

147 
	#TLV320AIC23_PCM_DIV_2
 (4 << 6)

	)

148 
	#TLV320AIC23_PCM_DIV_4
 (5 << 6)

	)

149 
	#TLV320AIC23_PCM_DIV_6
 (6 << 6)

	)

150 
	#TLV320AIC23_PCM_DIV_8
 (7 << 6)

	)

153 
	#TLV320AIC23_BCLK_DIV_1
 (0 << 7)

	)

154 
	#TLV320AIC23_BCLK_DIV_2
 (1 << 7)

	)

155 
	#TLV320AIC23_BCLK_DIV_4
 (2 << 7)

	)

156 
	#TLV320AIC23_BCLK_DIV_8
 (3 << 7)

	)

159 
	#TLV320AIC23_VXCLK_DIV_1
 (0 << 6)

	)

160 
	#TLV320AIC23_VXCLK_DIV_2
 (1 << 6)

	)

161 
	#TLV320AIC23_VXCLK_DIV_4
 (2 << 6)

	)

162 
	#TLV320AIC23_VXCLK_DIV_8
 (3 << 6)

	)

163 
	#TLV320AIC23_VXCLK_DIV_16
 (4 << 6)

	)

165 
	#TLV320AIC23_DAI_HIFI
 0

	)

166 
	#TLV320AIC23_DAI_VOICE
 1

	)

	@codecs/wm8987.c

1 
	#LOG_TAG
 "wm8987.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

19 
	~<löux/moduÀ.h
>

20 
	~<löux/moduÀ∑øm.h
>

21 
	~<löux/öô.h
>

22 
	~<löux/dñay.h
>

23 
	~<löux/pm.h
>

24 
	~<löux/i2c.h
>

25 
	~<löux/∂©f‹m_devi˚.h
>

26 
	~<sound/drivî.h
>

27 
	~<sound/c‹e.h
>

28 
	~<sound/pcm.h
>

29 
	~<sound/pcm_∑øms.h
>

30 
	~<sound/soc.h
>

31 
	~<sound/soc-d≠m.h
>

32 
	~<sound/öôvÆ.h
>

34 #ifde‡
CONFIG_HHBF_FAST_REBOOT


35 
	~<asm/ªboŸ.h
>

38 
	~"wm8987.h
"

40 
	#AUDIO_NAME
 "WM8987"

	)

41 
	#WM8987_VERSION
 "v0.12"

	)

44 #i‚def 
CONFIG_HHTECH_MINIPMP


45 
	swm8987_¥iv
 {

46 
	msys˛k
;

49 
	gwm8987_sys˛k
;

51 (*
hhbf_audio_swôch
)(
Êag
Ë
NULL
;

52 
	`EXPORT_SYMBOL
(
hhbf_audio_swôch
);

53 
öô_ªboŸ
 = 0;

61 c⁄° 
u16
 
wm8987_ªg
[] = {

73 
	}
};

78 
ölöe
 
	$wm8987_ªad_ªg_ˇche
(
¢d_soc_codec
 *
codec
,

79 
ªg
)

81 
u16
 *
ˇche
 = 
codec
->
ªg_ˇche
;

83 
	`__D
("\n");

85 #i‚def 
CONFIG_HHTECH_MINIPMP


86 i‡(
ªg
 > 
WM8987_CACHE_REGNUM
)

88 i‡(
ªg
 > 
	`ARRAY_SIZE
(
wm8987_ªg
))

91  
ˇche
[
ªg
];

92 
	}
}

97 
ölöe
 
	$wm8987_wrôe_ªg_ˇche
(
¢d_soc_codec
 *
codec
,

98 
ªg
, 
vÆue
)

100 
u16
 *
ˇche
 = 
codec
->
ªg_ˇche
;

102 
	`__D
("\n");

104 #i‚def 
CONFIG_HHTECH_MINIPMP


105 i‡(
ªg
 > 
WM8987_CACHE_REGNUM
)

107 i‡(
ªg
 > 
	`ARRAY_SIZE
(
wm8987_ªg
))

110 
ˇche
[
ªg
] = 
vÆue
;

111 
	}
}

113 
	$wm8987_wrôe
(
¢d_soc_codec
 *
codec
, 
ªg
,

114 
vÆue
)

116 
u8
 
d©a
[2];

118 
	`__D
("\n");

124 
d©a
[0] = (
ªg
 << 1Ë| ((
vÆue
 >> 8) & 0x0001);

125 
d©a
[1] = 
vÆue
 & 0x00ff;

127 #ifdef 
WM8987_DEBUG


128 i‡(
vÆue
 =
	`wm8987_ªad_ªg_ˇche
(
codec
, 
ªg
))  0;

130 
	`__I
(
AUDIO_NAME
 ": 0x%02x%02x, R%02d <= 0x%03x\n",

131 
d©a
[0], d©a[1], 
ªg
, 
vÆue
);

134 
	`wm8987_wrôe_ªg_ˇche
 (
codec
, 
ªg
, 
vÆue
);

136 #ifdef 
CONFIG_HHTECH_MINIPMP


137 i‡(
öô_ªboŸ
)  0;

140 i‡(
codec
->
	`hw_wrôe
(codec->
c⁄åﬁ_d©a
, 
d©a
, 2) == 2)

143  -
EIO
;

144 
	}
}

146 
	#wm8987_ª£t
(
c
Ë
	`wm8987_wrôe
(c, 
WM8987_RESET
, 0)

	)

151 c⁄° *
	gwm8987_bass
[] = {"Linear Control", "Adaptive Boost"};

152 c⁄° *
	gwm8987_bass_fûãr
[] = { "130Hz @ 48kHz", "200Hz @ 48kHz" };

153 c⁄° *
	gwm8987_åebÀ
[] = {"8kHz", "4kHz"};

154 c⁄° *
	gwm8987_3d_lc
[] = {"200Hz", "500Hz"};

155 c⁄° *
	gwm8987_3d_uc
[] = {"2.2kHz", "1.5kHz"};

156 c⁄° *
	gwm8987_3d_func
[] = {"Capture", "Playback"};

157 c⁄° *
	gwm8987_Æc_func
[] = {"Off", "Right", "Left", "Stereo"};

158 c⁄° *
	gwm8987_ng_ty≥
[] = {"Constant PGA Gain",

160 c⁄° *
	gwm8987_löe_mux
[] = {"Line 1", "Line 2", "Line 3", "PGA",

162 c⁄° *
	gwm8987_pga_£l
[] = {"Line 1", "Line 2", "Line 3",

164 c⁄° *
	gwm8987_out3
[] = {"VREF", "ROUT1 + Vol", "MonoOut",

166 c⁄° *
	gwm8987_diff_£l
[] = {"Line 1", "Line 2"};

167 c⁄° *
	gwm8987_ad˝ﬁ
[] = {"Normal", "L Invert", "R Invert",

169 c⁄° *
	gwm8987_dìmph
[] = {"None", "32Khz", "44.1Khz", "48Khz"};

170 c⁄° *
	gwm8987_m⁄o_mux
[] = {"Stereo", "Mono (Left)",

173 c⁄° 
soc_íum
 
	gwm8987_íum
[] = {

174 
SOC_ENUM_SINGLE
(
WM8987_BASS
, 7, 2, 
wm8987_bass
),

175 
SOC_ENUM_SINGLE
(
WM8987_BASS
, 6, 2, 
wm8987_bass_fûãr
),

176 
SOC_ENUM_SINGLE
(
WM8987_TREBLE
, 6, 2, 
wm8987_åebÀ
),

177 
SOC_ENUM_SINGLE
(
WM8987_3D
, 5, 2, 
wm8987_3d_lc
),

178 
SOC_ENUM_SINGLE
(
WM8987_3D
, 6, 2, 
wm8987_3d_uc
),

179 
SOC_ENUM_SINGLE
(
WM8987_3D
, 7, 2, 
wm8987_3d_func
),

180 
SOC_ENUM_SINGLE
(
WM8987_ALC1
, 7, 4, 
wm8987_Æc_func
),

181 
SOC_ENUM_SINGLE
(
WM8987_NGATE
, 1, 2, 
wm8987_ng_ty≥
),

182 
SOC_ENUM_SINGLE
(
WM8987_LOUTM1
, 0, 5, 
wm8987_löe_mux
),

183 
SOC_ENUM_SINGLE
(
WM8987_ROUTM1
, 0, 5, 
wm8987_löe_mux
),

184 
SOC_ENUM_SINGLE
(
WM8987_LADCIN
, 6, 4, 
wm8987_pga_£l
),

185 
SOC_ENUM_SINGLE
(
WM8987_RADCIN
, 6, 4, 
wm8987_pga_£l
),

186 
SOC_ENUM_SINGLE
(
WM8987_ADCTL2
, 7, 4, 
wm8987_out3
),

187 
SOC_ENUM_SINGLE
(
WM8987_ADCIN
, 8, 2, 
wm8987_diff_£l
),

188 
SOC_ENUM_SINGLE
(
WM8987_ADCDAC
, 5, 4, 
wm8987_ad˝ﬁ
),

189 
SOC_ENUM_SINGLE
(
WM8987_ADCDAC
, 1, 4, 
wm8987_dìmph
),

190 
SOC_ENUM_SINGLE
(
WM8987_ADCIN
, 6, 4, 
wm8987_m⁄o_mux
),

194 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_¢d_c⁄åﬁs
[] = {

196 
SOC_DOUBLE_R
("C≠tuª Vﬁume", 
WM8987_LINVOL
, 
WM8987_RINVOL
, 0, 63, 0),

197 
SOC_DOUBLE_R
("C≠tuª ZC Swôch", 
WM8987_LINVOL
, 
WM8987_RINVOL
, 6, 1, 0),

198 
SOC_DOUBLE_R
("C≠tuª Swôch", 
WM8987_LINVOL
, 
WM8987_RINVOL
, 7, 1, 1),

200 #i‚def 
CONFIG_HHTECH_MINIPMP


201 
SOC_DOUBLE_R
("Hódph⁄êPœyback ZC Swôch", 
WM8987_LOUT1V
,

202 
WM8987_ROUT1V
, 7, 1, 0),

204 
SOC_DOUBLE_R
("S≥akî Pœyback ZC Swôch", 
WM8987_LOUT2V
,

205 
WM8987_ROUT2V
, 7, 1, 0),

207 
SOC_ENUM
("Pœyback De-emphasis", 
wm8987_íum
[15]),

209 
SOC_ENUM
("C≠tuª Pﬁ¨ôy", 
wm8987_íum
[14]),

210 
SOC_SINGLE
("Pœyback 6dB Aâíu©e", 
WM8987_ADCDAC
, 7, 1, 0),

211 
SOC_SINGLE
("C≠tuª 6dB Aâíu©e", 
WM8987_ADCDAC
, 8, 1, 0),

213 #i‚def 
CONFIG_HHTECH_MINIPMP


214 
SOC_DOUBLE_R
("PCM Vﬁume", 
WM8987_LDAC
, 
WM8987_RDAC
, 0, 255, 0),

216 
SOC_DOUBLE_R
("Ma°î Pœyback Vﬁume", 
WM8987_LDAC
, 
WM8987_RDAC
, 0, 255, 0),

219 
SOC_ENUM
("Bas†Boo°", 
wm8987_íum
[0]),

220 
SOC_ENUM
("Bas†Fûãr", 
wm8987_íum
[1]),

221 
SOC_SINGLE
("Bas†Vﬁume", 
WM8987_BASS
, 0, 15, 1),

223 
SOC_SINGLE
("TªbÀ Vﬁume", 
WM8987_TREBLE
, 0, 15, 0),

224 
SOC_ENUM
("TªbÀ Cut-off", 
wm8987_íum
[2]),

226 
SOC_SINGLE
("3D Swôch", 
WM8987_3D
, 0, 1, 0),

227 
SOC_SINGLE
("3D Vﬁume", 
WM8987_3D
, 1, 15, 0),

228 
SOC_ENUM
("3D Lowî Cut-off", 
wm8987_íum
[3]),

229 
SOC_ENUM
("3D Uµî Cut-off", 
wm8987_íum
[4]),

230 
SOC_ENUM
("3D Mode", 
wm8987_íum
[5]),

232 
SOC_SINGLE
("ALC C≠tuª T¨gë Vﬁume", 
WM8987_ALC1
, 0, 7, 0),

233 
SOC_SINGLE
("ALC C≠tuª Max Vﬁume", 
WM8987_ALC1
, 4, 7, 0),

234 
SOC_ENUM
("ALC C≠tuª Fun˘i⁄", 
wm8987_íum
[6]),

235 
SOC_SINGLE
("ALC C≠tuª ZC Swôch", 
WM8987_ALC2
, 7, 1, 0),

236 
SOC_SINGLE
("ALC C≠tuª Hﬁd Time", 
WM8987_ALC2
, 0, 15, 0),

237 
SOC_SINGLE
("ALC C≠tuª Deˇy Time", 
WM8987_ALC3
, 4, 15, 0),

238 
SOC_SINGLE
("ALC C≠tuª Aâack Time", 
WM8987_ALC3
, 0, 15, 0),

239 
SOC_SINGLE
("ALC C≠tuª NG Thªshﬁd", 
WM8987_NGATE
, 3, 31, 0),

240 
SOC_ENUM
("ALC C≠tuª NG Ty≥", 
wm8987_íum
[4]),

241 
SOC_SINGLE
("ALC C≠tuª NG Swôch", 
WM8987_NGATE
, 0, 1, 0),

243 
SOC_SINGLE
("Le· ADC C≠tuª Vﬁume", 
WM8987_LADC
, 0, 255, 0),

244 
SOC_SINGLE
("RighàADC C≠tuª Vﬁume", 
WM8987_RADC
, 0, 255, 0),

246 
SOC_SINGLE
("ZC TimeouàSwôch", 
WM8987_ADCTL1
, 0, 1, 0),

247 
SOC_SINGLE
("Pœyback InvîàSwôch", 
WM8987_ADCTL1
, 1, 1, 0),

249 
SOC_SINGLE
("RighàS≥akî Pœyback InvîàSwôch", 
WM8987_ADCTL2
, 4, 1, 0),

265 
SOC_DOUBLE_R
("Mi¯Boo°", 
WM8987_LADCIN
, 
WM8987_RADCIN
, 4, 3, 0),

267 
SOC_DOUBLE_R
("By∑s†Le· Pœyback Vﬁume", 
WM8987_LOUTM1
,

268 
WM8987_LOUTM2
, 4, 7, 1),

269 
SOC_DOUBLE_R
("By∑s†RighàPœyback Vﬁume", 
WM8987_ROUTM1
,

270 
WM8987_ROUTM2
, 4, 7, 1),

271 
SOC_DOUBLE_R
("By∑s†M⁄ÿPœyback Vﬁume", 
WM8987_MOUTM1
,

272 
WM8987_MOUTM2
, 4, 7, 1),

274 
SOC_SINGLE
("M⁄ÿPœyback ZC Swôch", 
WM8987_MOUTV
, 7, 1, 0),

276 #i‚def 
CONFIG_HHTECH_MINIPMP


277 
SOC_DOUBLE_R
("Hódph⁄êPœyback Vﬁume", 
WM8987_LOUT1V
, 
WM8987_ROUT1V
,

280 
SOC_DOUBLE_R
("S≥akî Pœyback Vﬁume", 
WM8987_LOUT2V
, 
WM8987_ROUT2V
,

283 
SOC_SINGLE
("M⁄ÿPœyback Vﬁume", 
WM8987_MOUTV
, 0, 127, 0),

288 
	$wm8987_add_c⁄åﬁs
(
¢d_soc_codec
 *
codec
)

290 
îr
, 
i
;

292 
	`__D
("\n");

294 
i
 = 0; i < 
	`ARRAY_SIZE
(
wm8987_¢d_c⁄åﬁs
); i++) {

295 
îr
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
,

296 
	`¢d_soc_˙ew
(&
wm8987_¢d_c⁄åﬁs
[
i
],
codec
, 
NULL
));

297 i‡(
îr
 < 0)

298  
îr
;

301 
	}
}

308 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_À·_mixî_c⁄åﬁs
[] = {

309 
SOC_DAPM_SINGLE
("Pœyback Swôch", 
WM8987_LOUTM1
, 8, 1, 0),

310 
SOC_DAPM_SINGLE
("Le· By∑s†Swôch", 
WM8987_LOUTM1
, 7, 1, 0),

311 
SOC_DAPM_SINGLE
("RighàPœyback Swôch", 
WM8987_LOUTM2
, 8, 1, 0),

312 
SOC_DAPM_SINGLE
("RighàBy∑s†Swôch", 
WM8987_LOUTM2
, 7, 1, 0),

316 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_right_mixî_c⁄åﬁs
[] = {

317 
SOC_DAPM_SINGLE
("Le· Pœyback Swôch", 
WM8987_ROUTM1
, 8, 1, 0),

318 
SOC_DAPM_SINGLE
("Le· By∑s†Swôch", 
WM8987_ROUTM1
, 7, 1, 0),

319 
SOC_DAPM_SINGLE
("Pœyback Swôch", 
WM8987_ROUTM2
, 8, 1, 0),

320 
SOC_DAPM_SINGLE
("RighàBy∑s†Swôch", 
WM8987_ROUTM2
, 7, 1, 0),

324 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_m⁄o_mixî_c⁄åﬁs
[] = {

325 
SOC_DAPM_SINGLE
("Le· Pœyback Swôch", 
WM8987_MOUTM1
, 8, 1, 0),

326 
SOC_DAPM_SINGLE
("Le· By∑s†Swôch", 
WM8987_MOUTM1
, 7, 1, 0),

327 
SOC_DAPM_SINGLE
("RighàPœyback Swôch", 
WM8987_MOUTM2
, 8, 1, 0),

328 
SOC_DAPM_SINGLE
("RighàBy∑s†Swôch", 
WM8987_MOUTM2
, 7, 1, 0),

332 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_À·_löe_c⁄åﬁs
 =

333 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[8]);

336 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_right_löe_c⁄åﬁs
 =

337 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[9]);

340 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_À·_pga_c⁄åﬁs
 =

341 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[10]);

344 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_right_pga_c⁄åﬁs
 =

345 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[11]);

348 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_out3_c⁄åﬁs
 =

349 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[12]);

352 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_diffmux_c⁄åﬁs
 =

353 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[13]);

356 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_m⁄omux_c⁄åﬁs
 =

357 
SOC_DAPM_ENUM
("Rouã", 
wm8987_íum
[16]);

359 c⁄° 
¢d_soc_d≠m_widgë
 
	gwm8987_d≠m_widgës
[] = {

360 
SND_SOC_DAPM_MIXER
("Le· Mixî", 
SND_SOC_NOPM
, 0, 0,

361 &
wm8987_À·_mixî_c⁄åﬁs
[0],

362 
ARRAY_SIZE
(
wm8987_À·_mixî_c⁄åﬁs
)),

363 
SND_SOC_DAPM_MIXER
("RighàMixî", 
SND_SOC_NOPM
, 0, 0,

364 &
wm8987_right_mixî_c⁄åﬁs
[0],

365 
ARRAY_SIZE
(
wm8987_right_mixî_c⁄åﬁs
)),

366 
SND_SOC_DAPM_MIXER
("M⁄ÿMixî", 
WM8987_PWR2
, 2, 0,

367 &
wm8987_m⁄o_mixî_c⁄åﬁs
[0],

368 
ARRAY_SIZE
(
wm8987_m⁄o_mixî_c⁄åﬁs
)),

370 
SND_SOC_DAPM_PGA
("RighàOuà2", 
WM8987_PWR2
, 3, 0, 
NULL
, 0),

371 
SND_SOC_DAPM_PGA
("Le· Ouà2", 
WM8987_PWR2
, 4, 0, 
NULL
, 0),

377 
SND_SOC_DAPM_DAC
("RighàDAC", "RighàPœyback", 
WM8987_PWR2
, 7, 0),

378 
SND_SOC_DAPM_DAC
("Le· DAC", "Le· Pœyback", 
WM8987_PWR2
, 8, 0),

380 
SND_SOC_DAPM_MICBIAS
("Mi¯Büs", 
WM8987_PWR1
, 1, 0),

381 
SND_SOC_DAPM_ADC
("RighàADC", "RighàC≠tuª", 
WM8987_PWR1
, 2, 0),

382 
SND_SOC_DAPM_ADC
("Le· ADC", "Le· C≠tuª", 
WM8987_PWR1
, 3, 0),

384 
SND_SOC_DAPM_MUX
("Le· PGA Mux", 
WM8987_PWR1
, 5, 0,

385 &
wm8987_À·_pga_c⁄åﬁs
),

386 
SND_SOC_DAPM_MUX
("RighàPGA Mux", 
WM8987_PWR1
, 4, 0,

387 &
wm8987_right_pga_c⁄åﬁs
),

388 
SND_SOC_DAPM_MUX
("Le· LöêMux", 
SND_SOC_NOPM
, 0, 0,

389 &
wm8987_À·_löe_c⁄åﬁs
),

390 
SND_SOC_DAPM_MUX
("RighàLöêMux", 
SND_SOC_NOPM
, 0, 0,

391 &
wm8987_right_löe_c⁄åﬁs
),

393 
SND_SOC_DAPM_MUX
("Out3 Mux", 
SND_SOC_NOPM
, 0, 0, &
wm8987_out3_c⁄åﬁs
),

394 
SND_SOC_DAPM_PGA
("Ouà3", 
WM8987_PWR2
, 1, 0, 
NULL
, 0),

395 
SND_SOC_DAPM_PGA
("M⁄ÿOuà1", 
WM8987_PWR2
, 2, 0, 
NULL
, 0),

397 
SND_SOC_DAPM_MUX
("Dif„ª¡ü»Mux", 
SND_SOC_NOPM
, 0, 0,

398 &
wm8987_diffmux_c⁄åﬁs
),

399 
SND_SOC_DAPM_MUX
("Le· ADC Mux", 
SND_SOC_NOPM
, 0, 0,

400 &
wm8987_m⁄omux_c⁄åﬁs
),

401 
SND_SOC_DAPM_MUX
("RighàADC Mux", 
SND_SOC_NOPM
, 0, 0,

402 &
wm8987_m⁄omux_c⁄åﬁs
),

404 
SND_SOC_DAPM_OUTPUT
("LOUT1"),

405 
SND_SOC_DAPM_OUTPUT
("ROUT1"),

406 
SND_SOC_DAPM_OUTPUT
("LOUT2"),

407 
SND_SOC_DAPM_OUTPUT
("ROUT2"),

408 
SND_SOC_DAPM_OUTPUT
("MONO"),

409 
SND_SOC_DAPM_OUTPUT
("OUT3"),

411 
SND_SOC_DAPM_INPUT
("LINPUT1"),

412 
SND_SOC_DAPM_INPUT
("LINPUT2"),

413 
SND_SOC_DAPM_INPUT
("LINPUT3"),

414 
SND_SOC_DAPM_INPUT
("RINPUT1"),

415 
SND_SOC_DAPM_INPUT
("RINPUT2"),

416 
SND_SOC_DAPM_INPUT
("RINPUT3"),

419 c⁄° *
	gaudio_m≠
[][3] = {

433 {"Le· Ouà1", 
NULL
, "Left Mixer"},

434 {"LOUT1", 
NULL
, "Left Out 1"},

437 {"Le· Ouà2", 
NULL
, "Left Mixer"},

438 {"LOUT2", 
NULL
, "Left Out 2"},

441 {"RighàOuà1", 
NULL
, "Right Mixer"},

442 {"ROUT1", 
NULL
, "Right Out 1"},

445 {"RighàOuà2", 
NULL
, "Right Mixer"},

446 {"ROUT2", 
NULL
, "Right Out 2"},

455 {"M⁄ÿOuà1", 
NULL
, "Mono Mixer"},

456 {"MONO1", 
NULL
, "Mono Out 1"},

463 {"Ouà3", 
NULL
, "Out3 Mux"},

464 {"OUT3", 
NULL
, "Out 3"},

509 {"Le· ADC", 
NULL
, "Left ADC Mux"},

510 {"RighàADC", 
NULL
, "Right ADC Mux"},

513 {
NULL
, NULL, NULL},

516 
	$wm8987_add_widgës
(
¢d_soc_codec
 *
codec
)

518 
i
;

520 
	`__D
("\n");

522 
i
 = 0; i < 
	`ARRAY_SIZE
(
wm8987_d≠m_widgës
); i++) {

523 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, &
wm8987_d≠m_widgës
[
i
]);

527 
i
 = 0; 
audio_m≠
[i][0] !
NULL
; i++) {

528 
	`¢d_soc_d≠m_c⁄√˘_öput
(
codec
, 
audio_m≠
[
i
][0],

529 
audio_m≠
[
i
][1],áudio_map[i][2]);

532 
	`¢d_soc_d≠m_√w_widgës
(
codec
);

534 
	}
}

536 
	s_c€ff_div
 {

537 
u32
 
	mm˛k
;

538 
u32
 
	møã
;

539 
u16
 
	mfs
;

540 
u8
 
	m§
:5;

541 
u8
 
	musb
:1;

545 c⁄° 
_c€ff_div
 
	gc€ff_div
[] = {

609 
ölöe
 
	$gë_c€ff
(
m˛k
, 
øã
)

611 
i
;

613 
	`__D
("\n");

615 
i
 = 0; i < 
	`ARRAY_SIZE
(
c€ff_div
); i++) {

616 i‡(
c€ff_div
[
i
].
øã
 =øã && c€ff_div[i].
m˛k
 == mclk)

617  
i
;

620 
	`__E
("wm8987: couldÇŸ gë c€f‡f‹ m˛k %d @Ñ©ê%d\n", 
m˛k
, 
øã
);

621  -
EINVAL
;

622 
	}
}

625 
	$wm8987_£t_dai_˛kdiv
(
¢d_soc_codec_dai
 *
codec_dai
,

626 
div_id
, 
div
)

628 
¢d_soc_codec
 *
codec
 = 
codec_dai
->codec;

629 
u16
 
ªg
;

631 
	`__D
("\n");

633 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_SRATE
) & 0x003f;

634 
	`wm8987_wrôe
(
codec
, 
WM8987_SRATE
, 
ªg
 | 
div
);

637 
	}
}

640 
	$wm8987_£t_dai_sys˛k
(
¢d_soc_codec_dai
 *
codec_dai
,

641 
˛k_id
, 
‰eq
, 
dú
)

643 #i‚def 
CONFIG_HHTECH_MINIPMP


644 
¢d_soc_codec
 *
codec
 = 
codec_dai
->codec;

645 
wm8987_¥iv
 *
wm8987
 = 
codec
->
¥iv©e_d©a
;

648 
	`__D
("\n");

650 
‰eq
) {

656 #i‚def 
CONFIG_HHTECH_MINIPMP


657 
wm8987
->
sys˛k
 = 
‰eq
;

660 
wm8987_sys˛k
 = 
‰eq
;

664  -
EINVAL
;

665 
	}
}

667 
	$wm8987_£t_dai_fmt
(
¢d_soc_codec_dai
 *
codec_dai
,

668 
fmt
)

670 
¢d_soc_codec
 *
codec
 = 
codec_dai
->codec;

671 
u16
 
iÁ˚
 = 0;

673 
	`__D
("\n");

676 
fmt
 & 
SND_SOC_DAIFMT_MASTER_MASK
) {

677 
SND_SOC_DAIFMT_CBM_CFM
:

678 
iÁ˚
 = 0x0040;

680 
SND_SOC_DAIFMT_CBS_CFS
:

683  -
EINVAL
;

687 
fmt
 & 
SND_SOC_DAIFMT_FORMAT_MASK
) {

688 
SND_SOC_DAIFMT_I2S
:

689 
iÁ˚
 |= 0x0002;

691 
SND_SOC_DAIFMT_RIGHT_J
:

693 
SND_SOC_DAIFMT_LEFT_J
:

694 
iÁ˚
 |= 0x0001;

696 
SND_SOC_DAIFMT_DSP_A
:

697 
iÁ˚
 |= 0x0003;

699 
SND_SOC_DAIFMT_DSP_B
:

700 
iÁ˚
 |= 0x0013;

703  -
EINVAL
;

707 
fmt
 & 
SND_SOC_DAIFMT_INV_MASK
) {

708 
SND_SOC_DAIFMT_NB_NF
:

710 
SND_SOC_DAIFMT_IB_IF
:

711 
iÁ˚
 |= 0x0090;

713 
SND_SOC_DAIFMT_IB_NF
:

714 
iÁ˚
 |= 0x0080;

716 
SND_SOC_DAIFMT_NB_IF
:

717 
iÁ˚
 |= 0x0010;

720  -
EINVAL
;

724 #ifdef 
CONFIG_HHTECH_MINIPMP


726 
iÁ˚
 |= 0x60;

730 if(
iÁ˚
 !
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_IFACE
))

731 
	`wm8987_wrôe
(
codec
, 
WM8987_IFACE
, 
iÁ˚
);

733 
	}
}

735 
	$wm8987_pcm_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

736 
¢d_pcm_hw_∑øms
 *
∑øms
)

738 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

739 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

740 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

741 
ifú°
 = 1;

742 
u16
 
vÆÁ˚
, 
vÆøã
;

743 
u16
 
iÁ˚
 = (
vÆÁ˚
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_IFACE
)) & 0x1f3;

744 
u16
 
§©e
 = (
vÆøã
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_SRATE
)) & 0x1c0;

746 #i‚def 
CONFIG_HHTECH_MINIPMP


747 
wm8987_¥iv
 *
wm8987
 = 
codec
->
¥iv©e_d©a
;

748 
c€ff
 = 
	`gë_c€ff
(
wm8987
->
sys˛k
, 
	`∑øms_øã
(
∑øms
));

750 
c€ff
 = 
	`gë_c€ff
(
wm8987_sys˛k
, 
	`∑øms_øã
(
∑øms
));

753 
	`__D
("\n");

756 
	`∑øms_f‹m©
(
∑øms
)) {

757 
SNDRV_PCM_FORMAT_S16_LE
:

759 
SNDRV_PCM_FORMAT_S20_3LE
:

760 
iÁ˚
 |= 0x0004;

762 
SNDRV_PCM_FORMAT_S24_LE
:

763 
iÁ˚
 |= 0x0008;

765 
SNDRV_PCM_FORMAT_S32_LE
:

766 
iÁ˚
 |= 0x000c;

770 if(1 =
ifú°
 || 
vÆÁ˚
 !
iÁ˚
)

771 
	`wm8987_wrôe
(
codec
, 
WM8987_IFACE
, 
iÁ˚
);

772 if(
c€ff
 >= 0) {

773 
§©e
 = søã | ((
c€ff_div
[
c€ff
].
§
 << 1Ë| c€ff_div[c€ff].
usb
);

774 if(
vÆøã
 !
§©e
 || 1 =
ifú°
)

775 
	`wm8987_wrôe
(
codec
, 
WM8987_SRATE
, 
§©e
);

777 
ifú°
 = 0;

780 
	}
}

782 
	$wm8987_muã
(
¢d_soc_codec_dai
 *
dai
, 
muã
)

784 
¢d_soc_codec
 *
codec
 = 
dai
->codec;

785 
u16
 
muã_ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_ADCDAC
) & 0xfff7;

787 
	`__D
("\n");

789 i‡(
muã
) {

790 
	`wm8987_wrôe
(
codec
, 
WM8987_ADCDAC
, 
muã_ªg
 | 0x8);

791 i‡(
hhbf_audio_swôch
Ë
	`hhbf_audio_swôch
(0);

792 } {i‡(
hhbf_audio_swôch
Ë
	`hhbf_audio_swôch
(1);

793 
	`wm8987_wrôe
(
codec
, 
WM8987_ADCDAC
, 
muã_ªg
);

797 
	}
}

799 
	$wm8987_d≠m_evít
(
¢d_soc_codec
 *
codec
, 
evít
)

801 
u16
 
pwr_ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_PWR1
) & 0xfe3e;

802 
pwr_ªg
 |= 0x2;

804 
	`__D
("\n");

806 
evít
) {

807 
SNDRV_CTL_POWER_D0
:

809 
	`wm8987_wrôe
(
codec
, 
WM8987_PWR1
, 
pwr_ªg
 | 0x00c0);

811 
SNDRV_CTL_POWER_D1
:

812 
	`wm8987_wrôe
(
codec
, 
WM8987_PWR1
, 
pwr_ªg
 | 0x01c0);

814 
SNDRV_CTL_POWER_D2
:

816 
	`wm8987_wrôe
(
codec
, 
WM8987_PWR1
, 
pwr_ªg
 | 0x01c1);

818 
SNDRV_CTL_POWER_D3hŸ
:

820 
	`wm8987_wrôe
(
codec
, 
WM8987_PWR1
, 
pwr_ªg
 | 0x0141);

822 
SNDRV_CTL_POWER_D3cﬁd
:

823 
	`wm8987_wrôe
(
codec
, 
WM8987_PWR1
, 0x0001);

826 
codec
->
d≠m_°©e
 = 
evít
;

828 
	}
}

830 
	#WM8987_RATES
 (
SNDRV_PCM_RATE_8000
 | 
SNDRV_PCM_RATE_11025
 | \

831 
SNDRV_PCM_RATE_16000
 | 
SNDRV_PCM_RATE_22050
 | \

832 
SNDRV_PCM_RATE_32000
 | 
SNDRV_PCM_RATE_44100
 | \

833 
SNDRV_PCM_RATE_48000
 | 
SNDRV_PCM_RATE_88200
 | \

834 
SNDRV_PCM_RATE_96000
)

	)

836 
	#WM8987_FORMATS
 (
SNDRV_PCM_FMTBIT_S16_LE
 | 
SNDRV_PCM_FMTBIT_S20_3LE
 | \

837 
SNDRV_PCM_FMTBIT_S24_LE
)

	)

839 
¢d_soc_codec_dai
 
	gwm8987_dai
 = {

840 .
«me
 = "WM8987",

841 .
	g∂ayback
 = {

842 .
°ªam_«me
 = "Playback",

843 .
	gch™√ls_mö
 = 2,

844 .
	gch™√ls_max
 = 2,

845 .
	gøãs
 = 
WM8987_RATES
,

846 .
	gf‹m©s
 = 
WM8987_FORMATS
,},

847 .
	gˇ±uª
 = {

848 .
°ªam_«me
 = "Capture",

849 .
	gch™√ls_mö
 = 2,

850 .
	gch™√ls_max
 = 2,

851 .
	gøãs
 = 
WM8987_RATES
,

852 .
	gf‹m©s
 = 
WM8987_FORMATS
,},

853 .
	g›s
 = {

854 .
hw_∑øms
 = 
wm8987_pcm_hw_∑øms
,

856 .
	gdai_›s
 = {

857 .
digôÆ_muã
 = 
wm8987_muã
,

858 .
	g£t_fmt
 = 
wm8987_£t_dai_fmt
,

859 .
	g£t_sys˛k
 = 
wm8987_£t_dai_sys˛k
,

860 .
	g£t_˛kdiv
 = 
wm8987_£t_dai_˛kdiv
,

863 
EXPORT_SYMBOL_GPL
(
wm8987_dai
);

865 
	$wm8987_w‹k
(
w‹k_°ru˘
 *
w‹k
)

867 
¢d_soc_codec
 *
codec
 =

868 
	`c⁄èöî_of
(
w‹k
, 
¢d_soc_codec
, 
dñayed_w‹k
.work);

870 
	`__D
("\n");

872 
	`wm8987_d≠m_evít
(
codec
, codec->
d≠m_°©e
);

873 
	}
}

875 
	$wm8987_su•íd
(
∂©f‹m_devi˚
 *
pdev
, 
pm_mesßge_t
 
°©e
)

877 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

878 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

880 
	`__D
("\n");

882 
	`wm8987_d≠m_evít
(
codec
, 
SNDRV_CTL_POWER_D3cﬁd
);

884 
	}
}

886 
	$wm8987_ªsume
(
∂©f‹m_devi˚
 *
pdev
)

888 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

889 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

890 
i
;

891 
u8
 
d©a
[2];

892 
u16
 *
ˇche
 = 
codec
->
ªg_ˇche
;

894 
	`__D
("\n");

897 
i
 = 0; i < 
	`ARRAY_SIZE
(
wm8987_ªg
); i++) {

898 i‡(
i
 =
WM8987_RESET
)

900 
d©a
[0] = (
i
 << 1Ë| ((
ˇche
[i] >> 8) & 0x0001);

901 
d©a
[1] = 
ˇche
[
i
] & 0x00ff;

902 
codec
->
	`hw_wrôe
(codec->
c⁄åﬁ_d©a
, 
d©a
, 2);

905 
	`wm8987_d≠m_evít
(
codec
, 
SNDRV_CTL_POWER_D3hŸ
);

908 i‡(
codec
->
su•íd_d≠m_°©e
 =
SNDRV_CTL_POWER_D0
) {

909 
	`wm8987_d≠m_evít
(
codec
, 
SNDRV_CTL_POWER_D2
);

910 
codec
->
d≠m_°©e
 = 
SNDRV_CTL_POWER_D0
;

911 
	`scheduÀ_dñayed_w‹k
(&
codec
->
dñayed_w‹k
, 
	`m£cs_to_jiffõs
(1000));

915 
	}
}

921 
	$wm8987_öô
(
¢d_soc_devi˚
 *
socdev
)

923 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

924 
ªg
, 
ªt
 = 0;

926 
	`__D
("\n");

928 
codec
->
«me
 = "WM8987";

929 
codec
->
ow√r
 = 
THIS_MODULE
;

930 
codec
->
ªad
 = 
wm8987_ªad_ªg_ˇche
;

931 
codec
->
wrôe
 = 
wm8987_wrôe
;

932 
codec
->
d≠m_evít
 = 
wm8987_d≠m_evít
;

933 
codec
->
dai
 = &
wm8987_dai
;

934 
codec
->
num_dai
 = 1;

935 #i‚def 
CONFIG_HHTECH_MINIPMP


938 
codec
->
ªg_ˇche
 =

939 
	`kzÆloc
((
u16
Ë* 
	`ARRAY_SIZE
(
wm8987_ªg
), 
GFP_KERNEL
);

940 i‡(
codec
->
ªg_ˇche
 =
NULL
)

941  -
ENOMEM
;

942 
	`mem˝y
(
codec
->
ªg_ˇche
, 
wm8987_ªg
,

943 (
u16
Ë* 
	`ARRAY_SIZE
(
wm8987_ªg
));

944 
codec
->
ªg_ˇche_size
 = (
u16
Ë* 
	`ARRAY_SIZE
(
wm8987_ªg
);

946 
codec
->
ªg_ˇche
 = (*)
wm8987_ªg
;

947 
codec
->
ªg_ˇche_size
 = 
	`ARRAY_SIZE
(
wm8987_ªg
);

949 #ifde‡
CONFIG_HHBF_FAST_REBOOT


950 i‡(
_bfö_swr°
 & 
FAST_REBOOT_FLAG
Ë
öô_ªboŸ
 = 1;

955 
	`wm8987_ª£t
(
codec
);

958 
ªt
 = 
	`¢d_soc_√w_pcms
(
socdev
, 
SNDRV_DEFAULT_IDX1
, 
SNDRV_DEFAULT_STR1
);

959 i‡(
ªt
 < 0) {

960 
	`__E
("wm8987: failedÅo createÖcms\n");

961 
pcm_îr
;

965 
	`wm8987_d≠m_evít
(
codec
, 
SNDRV_CTL_POWER_D1
);

966 
codec
->
d≠m_°©e
 = 
SNDRV_CTL_POWER_D3hŸ
;

967 
	`scheduÀ_dñayed_w‹k
(&
codec
->
dñayed_w‹k
, 
	`m£cs_to_jiffõs
(1000));

969 #ifdef 
CONFIG_HHTECH_MINIPMP


971 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_ADCDAC
) & 0xfff7;

973 
	`wm8987_wrôe
(
codec
, 
WM8987_ADCDAC
, 
ªg
 | 0x004);

977 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_LOUTM1
);

978 
	`wm8987_wrôe
(
codec
, 
WM8987_LOUTM1
, 
ªg
 | 0x0100);

979 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_ROUTM2
);

980 
	`wm8987_wrôe
(
codec
, 
WM8987_ROUTM2
, 
ªg
 | 0x0100);

982 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_ADCTL1
);

983 
	`wm8987_wrôe
(
codec
, 
WM8987_ADCTL1
, 
ªg
 | 0x0005);

984 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_ADCTL2
);

985 
	`wm8987_wrôe
(
codec
, 
WM8987_ADCTL2
, 
ªg
 | 0x0004);

987 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_LADCIN
);

988 
	`wm8987_wrôe
(
codec
, 
WM8987_LADCIN
, 
ªg
 | 0x0060);

990 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_LADC
);

991 
	`wm8987_wrôe
(
codec
, 
WM8987_LADC
, 
ªg
 | 0x0100);

992 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_RADC
);

993 
	`wm8987_wrôe
(
codec
, 
WM8987_RADC
, 
ªg
 | 0x0100);

997 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_LDAC
);

998 
	`wm8987_wrôe
(
codec
, 
WM8987_LDAC
, 0x01c7);

999 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_RDAC
);

1000 
	`wm8987_wrôe
(
codec
, 
WM8987_RDAC
, 0x01c7);

1002 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_LINVOL
);

1003 
	`wm8987_wrôe
(
codec
, 
WM8987_LINVOL
, (
ªg
 & ~0x080) | 0x0140);

1004 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_RINVOL
);

1005 
	`wm8987_wrôe
(
codec
, 
WM8987_RINVOL
, (
ªg
 & ~0x080) | 0x0140);

1007 
ªg
 = 
	`wm8987_ªad_ªg_ˇche
(
codec
, 
WM8987_3D
);

1008 
	`wm8987_wrôe
(
codec
, 
WM8987_3D
, (
ªg
 | 0x80));

1009 
	`wm8987_wrôe
(
codec
, 
WM8987_LOUT2V
, 0x079);

1010 
	`wm8987_wrôe
(
codec
, 
WM8987_ROUT2V
, 0x17a);

1013 
	`wm8987_add_c⁄åﬁs
(
codec
);

1014 
	`wm8987_add_widgës
(
codec
);

1015 
ªt
 = 
	`¢d_soc_ªgi°î_ˇrd
(
socdev
);

1016 i‡(
ªt
 < 0) {

1017 
	`__E
("wm8987: failedÅoÑegister card\n");

1018 
ˇrd_îr
;

1021 #ifdef 
CONFIG_HHTECH_MINIPMP


1022 
öô_ªboŸ
 = 0;

1025  
ªt
;

1027 
ˇrd_îr
:

1028 
	`¢d_soc_‰ì_pcms
(
socdev
);

1029 
	`¢d_soc_d≠m_‰ì
(
socdev
);

1030 
pcm_îr
:

1031 #i‚def 
CONFIG_HHTECH_MINIPMP


1032 
	`k‰ì
(
codec
->
ªg_ˇche
);

1034  
ªt
;

1035 
	}
}

1039 
¢d_soc_devi˚
 *
	gwm8987_socdev
;

1041 #ifdef 
CONFIG_HHTECH_MINIPMP


1042 
	$hhbf_audio_˛o£
()

1044 
	`__D
("\n");

1046 i‡(!
wm8987_socdev
)

1048 
	`ˇn˚l_dñayed_w‹k
(&
wm8987_socdev
->
dñayed_w‹k
);

1049 
	`wm8987_ª£t
(
wm8987_socdev
->
codec
);

1050 
	}
}

1051 
EXPORT_SYMBOL
(
hhbf_audio_˛o£
);

1054 #i‡
deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

1061 
	gn‹mÆ_i2c
[] = { 0, 
I2C_CLIENT_END
 };

1064 
	gI2C_CLIENT_INSMOD
;

1066 
i2c_drivî
 
	gwm8987_i2c_drivî
;

1067 
i2c_˛õ¡
 
	g˛õ¡_ãm∂©e
;

1069 
	$wm8987_codec_¥obe
(
i2c_ad≠ãr
 *
ad≠
, 
addr
, 
köd
)

1071 
¢d_soc_devi˚
 *
socdev
 = 
wm8987_socdev
;

1072 
wm8987_£tup_d©a
 *
£tup
 = 
socdev
->
codec_d©a
;

1073 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1074 
i2c_˛õ¡
 *
i2c
;

1075 
ªt
;

1077 
	`__D
("\n");

1079 i‡(
addr
 !
£tup
->
i2c_addªss
)

1080  -
ENODEV
;

1082 
˛õ¡_ãm∂©e
.
ad≠ãr
 = 
ad≠
;

1083 
˛õ¡_ãm∂©e
.
addr
 =áddr;

1085 #i‚def 
CONFIG_HHTECH_MINIPMP


1086 
i2c
 = 
	`kzÆloc
((
i2c_˛õ¡
), 
GFP_KERNEL
);

1087 i‡(
i2c
 =
NULL
) {

1088 
	`k‰ì
(
codec
);

1089  -
ENOMEM
;

1091 
	`mem˝y
(
i2c
, &
˛õ¡_ãm∂©e
, (
i2c_˛õ¡
));

1093 
i2c
 = &
˛õ¡_ãm∂©e
;

1095 
	`i2c_£t_˛õ¡d©a
(
i2c
, 
codec
);

1096 
codec
->
c⁄åﬁ_d©a
 = 
i2c
;

1098 
ªt
 = 
	`i2c_©èch_˛õ¡
(
i2c
);

1099 i‡(
ªt
 < 0) {

1100 
	`__E
("ÁûedÅÿ©èch code¯©ádd∏%x\n", 
addr
);

1101 
îr
;

1104 
ªt
 = 
	`wm8987_öô
(
socdev
);

1105 i‡(
ªt
 < 0) {

1106 
	`__E
("failedÅo initialise WM8987\n");

1107 
îr
;

1110  
ªt
;

1112 
îr
:

1113 
	`k‰ì
(
codec
);

1114 #i‚def 
CONFIG_HHTECH_MINIPMP


1115 
	`k‰ì
(
i2c
);

1117  
ªt
;

1118 
	}
}

1120 
	$wm8987_i2c_dëach
(
i2c_˛õ¡
 *
˛õ¡
)

1122 
	`__D
("\n");

1124 #i‚def 
CONFIG_HHTECH_MINIPMP


1125 
¢d_soc_codec
 *
codec
 = 
	`i2c_gë_˛õ¡d©a
(
˛õ¡
);

1126 
	`i2c_dëach_˛õ¡
(
˛õ¡
);

1127 
	`k‰ì
(
codec
->
ªg_ˇche
);

1128 
	`k‰ì
(
˛õ¡
);

1130 
	`i2c_dëach_˛õ¡
(
˛õ¡
);

1133 
	}
}

1135 
	$wm8987_i2c_©èch
(
i2c_ad≠ãr
 *
ad≠
)

1137 
	`__D
("\n");

1139  
	`i2c_¥obe
(
ad≠
, &
addr_d©a
, 
wm8987_codec_¥obe
);

1140 
	}
}

1143 
i2c_drivî
 
	gwm8987_i2c_drivî
 = {

1144 .
drivî
 = {

1145 .
«me
 = "WM8987 I2C Codec",

1146 .
	gow√r
 = 
THIS_MODULE
,

1148 .
	gid
 = 
I2C_DRIVERID_WM8753
,

1149 .
	g©èch_ad≠ãr
 = 
wm8987_i2c_©èch
,

1150 .
	gdëach_˛õ¡
 = 
wm8987_i2c_dëach
,

1151 .
	gcomm™d
 = 
NULL
,

1154 
i2c_˛õ¡
 
	g˛õ¡_ãm∂©e
 = {

1155 .
«me
 = "WM8987",

1156 .
	gdrivî
 = &
wm8987_i2c_drivî
,

1160 
	$wm8987_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

1162 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1163 
wm8987_£tup_d©a
 *
£tup
 = 
socdev
->
codec_d©a
;

1164 
¢d_soc_codec
 *
codec
;

1165 
ªt
 = 0;

1167 
	`__D
("\n");

1168 
	`__I
("AudiÿCode¯Drivî %s", 
WM8987_VERSION
);

1170 i‡((
codec
 = 
	`kzÆloc
((
¢d_soc_codec
), 
GFP_KERNEL
)Ë=
NULL
)

1171  -
ENOMEM
;

1173 #i‚def 
CONFIG_HHTECH_MINIPMP


1174 
wm8987
 = 
	`kzÆloc
((
wm8987_¥iv
), 
GFP_KERNEL
);

1175 i‡(
wm8987
 =
NULL
) {

1176 
	`k‰ì
(
codec
);

1177  -
ENOMEM
;

1180 
codec
->
¥iv©e_d©a
 = 
wm8987
;

1182 
socdev
->
codec
 = codec;

1183 
	`muãx_öô
(&
codec
->
muãx
);

1184 
	`INIT_LIST_HEAD
(&
codec
->
d≠m_widgës
);

1185 
	`INIT_LIST_HEAD
(&
codec
->
d≠m_∑ths
);

1186 
wm8987_socdev
 = 
socdev
;

1188 
	`INIT_DELAYED_WORK
(&
codec
->
dñayed_w‹k
, 
wm8987_w‹k
);

1191 #i‡
	`deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

1192 i‡(
£tup
->
i2c_addªss
) {

1193 
n‹mÆ_i2c
[0] = 
£tup
->
i2c_addªss
;

1194 
codec
->
hw_wrôe
 = (
hw_wrôe_t
)
i2c_ma°î_£nd
;

1195 
ªt
 = 
	`i2c_add_drivî
(&
wm8987_i2c_drivî
);

1196 i‡(
ªt
 != 0)

1197 
	`__E
("can'tádd i2c driver\n");

1203  
ªt
;

1204 
	}
}

1209 
	$run_dñayed_w‹k
(
dñayed_w‹k
 *
dw‹k
)

1211 
ªt
;

1213 
	`__D
("\n");

1216 
ªt
 = 
	`ˇn˚l_dñayed_w‹k
(
dw‹k
);

1220 i‡(
ªt
) {

1221 
	`scheduÀ_dñayed_w‹k
(
dw‹k
, 0);

1222 
	`Êush_scheduÀd_w‹k
();

1224  
ªt
;

1225 
	}
}

1228 
	$wm8987_ªmove
(
∂©f‹m_devi˚
 *
pdev
)

1230 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1231 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1233 
	`__D
("\n");

1235 i‡(
codec
->
c⁄åﬁ_d©a
)

1236 
	`wm8987_d≠m_evít
(
codec
, 
SNDRV_CTL_POWER_D3cﬁd
);

1237 
	`run_dñayed_w‹k
(&
codec
->
dñayed_w‹k
);

1238 
	`¢d_soc_‰ì_pcms
(
socdev
);

1239 
	`¢d_soc_d≠m_‰ì
(
socdev
);

1240 #i‡
	`deföed
 (
CONFIG_I2C
Ë|| deföed (
CONFIG_I2C_MODULE
)

1241 
	`i2c_dñ_drivî
(&
wm8987_i2c_drivî
);

1243 #i‚def 
CONFIG_HHTECH_MINIPMP


1244 
	`k‰ì
(
codec
->
¥iv©e_d©a
);

1246 
	`k‰ì
(
codec
);

1249 
	}
}

1251 
¢d_soc_codec_devi˚
 
	gsoc_codec_dev_wm8987
 = {

1252 .
¥obe
 = 
wm8987_¥obe
,

1253 .
	gªmove
 = 
wm8987_ªmove
,

1254 .
	gsu•íd
 = 
wm8987_su•íd
,

1255 .
	gªsume
 = 
wm8987_ªsume
,

1258 
EXPORT_SYMBOL_GPL
(
soc_codec_dev_wm8987
);

1260 
MODULE_DESCRIPTION
("ASoC WM8987 driver");

1261 
MODULE_AUTHOR
("Liam Girdwood");

1262 
MODULE_LICENSE
("GPL");

	@codecs/wm8987.h

14 #i‚de‡
_WM8987_H


15 
	#_WM8987_H


	)

17 
	#CONFIG_HHTECH_MINIPMP
 1

	)

21 
	#WM8987_LINVOL
 0x00

	)

22 
	#WM8987_RINVOL
 0x01

	)

23 
	#WM8987_LOUT1V
 0x02

	)

24 
	#WM8987_ROUT1V
 0x03

	)

25 
	#WM8987_ADCDAC
 0x05

	)

26 
	#WM8987_IFACE
 0x07

	)

27 
	#WM8987_SRATE
 0x08

	)

28 
	#WM8987_LDAC
 0x0a

	)

29 
	#WM8987_RDAC
 0x0b

	)

30 
	#WM8987_BASS
 0x0c

	)

31 
	#WM8987_TREBLE
 0x0d

	)

32 
	#WM8987_RESET
 0x0f

	)

33 
	#WM8987_3D
 0x10

	)

34 
	#WM8987_ALC1
 0x11

	)

35 
	#WM8987_ALC2
 0x12

	)

36 
	#WM8987_ALC3
 0x13

	)

37 
	#WM8987_NGATE
 0x14

	)

38 
	#WM8987_LADC
 0x15

	)

39 
	#WM8987_RADC
 0x16

	)

40 
	#WM8987_ADCTL1
 0x17

	)

41 
	#WM8987_ADCTL2
 0x18

	)

42 
	#WM8987_PWR1
 0x19

	)

43 
	#WM8987_PWR2
 0x1a

	)

44 
	#WM8987_ADCTL3
 0x1b

	)

45 
	#WM8987_ADCIN
 0x1f

	)

46 
	#WM8987_LADCIN
 0x20

	)

47 
	#WM8987_RADCIN
 0x21

	)

48 
	#WM8987_LOUTM1
 0x22

	)

49 
	#WM8987_LOUTM2
 0x23

	)

50 
	#WM8987_ROUTM1
 0x24

	)

51 
	#WM8987_ROUTM2
 0x25

	)

52 
	#WM8987_MOUTM1
 0x26

	)

53 
	#WM8987_MOUTM2
 0x27

	)

54 
	#WM8987_LOUT2V
 0x28

	)

55 
	#WM8987_ROUT2V
 0x29

	)

56 
	#WM8987_MOUTV
 0x2a

	)

58 
	#WM8987_CACHE_REGNUM
 0x2a

	)

60 
	#WM8987_SYSCLK
 0

	)

62 
	swm8987_£tup_d©a
 {

63 
	mi2c_addªss
;

66 
¢d_soc_codec_dai
 
wm8987_dai
;

67 
¢d_soc_codec_devi˚
 
soc_codec_dev_wm8987
;

70 
	#WM8987_PLL1
 0

	)

71 
	#WM8987_PLL2
 1

	)

74 
	#WM8987_MCLK
 0

	)

75 
	#WM8987_PCMCLK
 1

	)

78 
	#WM8987_PCMDIV
 0

	)

79 
	#WM8987_BCLKDIV
 1

	)

80 
	#WM8987_VXCLKDIV
 2

	)

83 
	#WM8987_PCM_DIV_1
 (0 << 6)

	)

84 
	#WM8987_PCM_DIV_3
 (2 << 6)

	)

85 
	#WM8987_PCM_DIV_5_5
 (3 << 6)

	)

86 
	#WM8987_PCM_DIV_2
 (4 << 6)

	)

87 
	#WM8987_PCM_DIV_4
 (5 << 6)

	)

88 
	#WM8987_PCM_DIV_6
 (6 << 6)

	)

89 
	#WM8987_PCM_DIV_8
 (7 << 6)

	)

92 
	#WM8987_BCLK_DIV_1
 (0 << 7)

	)

93 
	#WM8987_BCLK_DIV_2
 (1 << 7)

	)

94 
	#WM8987_BCLK_DIV_4
 (2 << 7)

	)

95 
	#WM8987_BCLK_DIV_8
 (3 << 7)

	)

98 
	#WM8987_VXCLK_DIV_1
 (0 << 6)

	)

99 
	#WM8987_VXCLK_DIV_2
 (1 << 6)

	)

100 
	#WM8987_VXCLK_DIV_4
 (2 << 6)

	)

101 
	#WM8987_VXCLK_DIV_8
 (3 << 6)

	)

102 
	#WM8987_VXCLK_DIV_16
 (4 << 6)

	)

104 
	#WM8987_DAI_HIFI
 0

	)

105 
	#WM8987_DAI_VOICE
 1

	)

	@s3c-i2s.h

17 #i‚de‡
S3C24XXI2S_H_


18 
	#S3C24XXI2S_H_


	)

21 
	#S3C24XX_CLKSRC_PCLK
 0

	)

22 
	#S3C24XX_CLKSRC_MPLL
 1

	)

25 
	#S3C24XX_DIV_MCLK
 0

	)

26 
	#S3C24XX_DIV_BCLK
 1

	)

27 
	#S3C24XX_DIV_PRESCALER
 2

	)

30 #i‡!
deföed
(
CONFIG_CPU_S3C6400
Ë&& !deföed(
CONFIG_CPU_S3C6410
)

31 
	#S3C24XX_PRESCALE
(
a
,
b
) \

32 (((
a
 - 1Ë<< 
S3C2410_IISPSR_INTSHIFT
Ë| ((
b
 - 1Ë<< 
S3C2410_IISPSR_EXTSHFIT
))

	)

34 
	#S3C24XX_PRESCALE
(
a
,
b
) \

35 (((
a
 - 1Ë<< 
S3C_IISPSR_INTSHIFT
Ë| ((
b
 - 1Ë<< S3C_IISPSR_INTSHIFT))

	)

38 
u32
 
s3c24xx_i2s_gë_˛ockøã
();

40 
¢d_soc_˝u_dai
 
s3c_i2s_dai
;

41 
¢d_soc_˝u_dai
 
s3c_i2s_v40_dai
;

	@s3c-pcm.c

1 
	#LOG_TAG
 "s3c-pcm.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

26 
	~<löux/moduÀ.h
>

27 
	~<löux/öô.h
>

28 
	~<löux/∂©f‹m_devi˚.h
>

29 
	~<löux/¶ab.h
>

30 
	~<löux/dma-m≠pög.h
>

32 
	~<sound/drivî.h
>

33 
	~<sound/c‹e.h
>

34 
	~<sound/pcm.h
>

35 
	~<sound/pcm_∑øms.h
>

36 
	~<sound/soc.h
>

38 
	~<asm/dma.h
>

39 
	~<asm/io.h
>

40 
	~<asm/h¨dw¨e.h
>

41 
	~<asm/¨ch/dma.h
>

42 
	~<asm/¨ch/audio.h
>

44 
	~"s3c-pcm.h
"

46 #i‡
deföed
 
CONFIG_SND_S3C6400_SOC_AC97


47 
	#MAIN_DMA_CH
 1

	)

49 
	#MAIN_DMA_CH
 0

	)

52 c⁄° 
¢d_pcm_h¨dw¨e
 
	gs3c24xx_pcm_h¨dw¨e
 = {

53 .
öfo
 = 
SNDRV_PCM_INFO_INTERLEAVED
 |

54 
SNDRV_PCM_INFO_BLOCK_TRANSFER
 |

55 
SNDRV_PCM_INFO_MMAP
 |

56 
SNDRV_PCM_INFO_MMAP_VALID
,

57 .
	gf‹m©s
 = 
SNDRV_PCM_FMTBIT_S16_LE
 |

58 
SNDRV_PCM_FMTBIT_U16_LE
 |

59 
SNDRV_PCM_FMTBIT_U8
 |

60 
SNDRV_PCM_FMTBIT_S24_LE
 |

61 
SNDRV_PCM_FMTBIT_S8
,

62 .
	gch™√ls_mö
 = 2,

63 .
	gch™√ls_max
 = 2,

64 .
	gbuf„r_byãs_max
 = 128*1024,

65 .
	g≥riod_byãs_mö
 = 
PAGE_SIZE
,

66 .
	g≥riod_byãs_max
 = 
PAGE_SIZE
*2,

67 .
	g≥riods_mö
 = 2,

68 .
	g≥riods_max
 = 128,

69 .
	gfifo_size
 = 32,

72 
	ss3c24xx_ru¡ime_d©a
 {

73 
•ölock_t
 
	mlock
;

74 
	m°©e
;

75 
	mdma_lﬂded
;

76 
	mdma_limô
;

77 
	mdma_≥riod
;

78 
dma_addr_t
 
	mdma_°¨t
;

79 
dma_addr_t
 
	mdma_pos
;

80 
dma_addr_t
 
	mdma_íd
;

81 
s3c24xx_pcm_dma_∑øms
 *
	m∑øms
;

89 
	$s3c24xx_pcm_íqueue
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

91 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
sub°ªam
->
ru¡ime
->
¥iv©e_d©a
;

92 
dma_addr_t
 
pos
 = 
¥td
->
dma_pos
;

93 
ªt
;

95 
	`__D
("\n");

97 
¥td
->
dma_lﬂded
 <Öπd->
dma_limô
) {

98 
Àn
 = 
¥td
->
dma_≥riod
;

100 
	`__D
("dma_lﬂded: %d\n",
¥td
->
dma_lﬂded
);

102 i‡((
pos
 + 
Àn
Ë> 
¥td
->
dma_íd
) {

103 
Àn
 = 
¥td
->
dma_íd
 - 
pos
;

104 
	`__D
("c‹ª˘ed dm®À¿%ld\n", 
Àn
);

107 i‡((
ªt
 = 
	`s3c2410_dma_íqueue
(
¥td
->
∑øms
->
ch™√l
,

108 
sub°ªam
, 
pos
, 
Àn
)) == 0) {

109 
¥td
->
dma_lﬂded
++;

110 
pos
 +
¥td
->
dma_≥riod
;

111 i‡(
pos
 >
¥td
->
dma_íd
)

112 
pos
 = 
¥td
->
dma_°¨t
;

117 
¥td
->
dma_pos
 = 
pos
;

118 
	}
}

120 
	$s3c24xx_audio_buffd⁄e
(
s3c2410_dma_ch™
 *
ch™√l
,

121 *
dev_id
, 
size
,

122 
s3c2410_dma_buf‰esu…
 
ªsu…
)

124 
¢d_pcm_sub°ªam
 *
sub°ªam
 = 
dev_id
;

125 
s3c24xx_ru¡ime_d©a
 *
¥td
;

127 
	`__D
("\n");

129 i‡(
ªsu…
 =
S3C2410_RES_ABORT
 ||Ñesu… =
S3C2410_RES_ERR
)

132 
¥td
 = 
sub°ªam
->
ru¡ime
->
¥iv©e_d©a
;

134 i‡(
sub°ªam
)

135 
	`¢d_pcm_≥riod_ñ≠£d
(
sub°ªam
);

139 
	`•ö_lock
(&
¥td
->
lock
);

140 i‡(
¥td
->
°©e
 & 
ST_RUNNING
) {

141 
¥td
->
dma_lﬂded
--;

142 
	`s3c24xx_pcm_íqueue
(
sub°ªam
);

145 
	`•ö_u∆ock
(&
¥td
->
lock
);

146 
	}
}

148 
	$s3c24xx_pcm_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

149 
¢d_pcm_hw_∑øms
 *
∑øms
)

151 
¢d_pcm_ru¡ime
 *
ru¡ime
 = 
sub°ªam
->runtime;

152 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
ru¡ime
->
¥iv©e_d©a
;

153 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

154 
s3c24xx_pcm_dma_∑øms
 *
dma
 = 
πd
->
dai
->
˝u_dai
->
dma_d©a
;

155 
tŸbyãs
 = 
	`∑øms_buf„r_byãs
(
∑øms
);

156 
ªt
=0;

158 
	`__D
("∑øm†%∞\n", 
¥td
->
∑øms
);

162 i‡(!
dma
)

167 i‡(
¥td
->
∑øms
 =
NULL
) {

168 
¥td
->
∑øms
 = 
dma
;

169 
	`__D
("∑øm†%p, clõ¡ %p, ch™√»%d\n", 
¥td
->
∑øms
,

170 
¥td
->
∑øms
->
˛õ¡
,Öπd->∑øms->
ch™√l
);

173 i‡((
ªt
 = 
	`s3c2410_dma_ªque°
(
¥td
->
∑øms
->
ch™√l
,

174 
¥td
->
∑øms
->
˛õ¡
, 
NULL
)) != 0) {

175 
	`__E
("failedÅo get dma channel\n");

176  
ªt
;

178 } i‡(
¥td
->
∑øms
 !
dma
) {

179 
	`s3c2410_dma_‰ì
(
¥td
->
∑øms
->
ch™√l
,Öπd->∑øms->
˛õ¡
);

180 
¥td
->
∑øms
 = 
dma
;

181 
	`__D
("∑øm†%p, clõ¡ %p, ch™√»%d\n", 
¥td
->
∑øms
,

182 
¥td
->
∑øms
->
˛õ¡
,Öπd->∑øms->
ch™√l
);

186 i‡((
ªt
 = 
	`s3c2410_dma_ªque°
(
¥td
->
∑øms
->
ch™√l
,

187 
¥td
->
∑øms
->
˛õ¡
, 
NULL
)) != 0) {

188 
	`__E
("failedÅo get dma channel\n");

189  
ªt
;

195 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
) {

196 
	`s3c2410_dma_devc⁄fig
(
¥td
->
∑øms
->
ch™√l
,

197 
S3C2410_DMASRC_MEM
, 0,

198 
¥td
->
∑øms
->
dma_addr
);

200 
	`s3c2410_dma_c⁄fig
(
¥td
->
∑øms
->
ch™√l
,

201 
¥td
->
∑øms
->
dma_size
, 0);

203 
	`s3c2410_dma_devc⁄fig
(
¥td
->
∑øms
->
ch™√l
,

204 
S3C2410_DMASRC_HW
, 0,

205 
¥td
->
∑øms
->
dma_addr
);

207 
	`s3c2410_dma_c⁄fig
(
¥td
->
∑øms
->
ch™√l
,

208 
¥td
->
∑øms
->
dma_size
, 0);

211 
	`s3c2410_dma_£t_buffd⁄e_‚
(
¥td
->
∑øms
->
ch™√l
,

212 
s3c24xx_audio_buffd⁄e
);

214 
	`¢d_pcm_£t_ru¡ime_buf„r
(
sub°ªam
, &sub°ªam->
dma_buf„r
);

216 
ru¡ime
->
dma_byãs
 = 
tŸbyãs
;

218 
	`•ö_lock_úq
(&
¥td
->
lock
);

219 
¥td
->
dma_lﬂded
 = 0;

220 
¥td
->
dma_limô
 = 
ru¡ime
->
hw
.
≥riods_mö
;

221 
¥td
->
dma_≥riod
 = 
	`∑øms_≥riod_byãs
(
∑øms
);

222 
¥td
->
dma_°¨t
 = 
ru¡ime
->
dma_addr
;

223 
¥td
->
dma_pos
 =Öπd->
dma_°¨t
;

224 
¥td
->
dma_íd
 =Öπd->
dma_°¨t
 + 
tŸbyãs
;

225 
	`•ö_u∆ock_úq
(&
¥td
->
lock
);

227 
	`__D
("\n");

229 
	}
}

231 
	$s3c24xx_pcm_hw_‰ì
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

233 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
sub°ªam
->
ru¡ime
->
¥iv©e_d©a
;

235 
	`__D
("\n");

238 
	`¢d_pcm_£t_ru¡ime_buf„r
(
sub°ªam
, 
NULL
);

240 i‡(
¥td
->
∑øms
) {

241 
	`s3c2410_dma_‰ì
(
¥td
->
∑øms
->
ch™√l
,Öπd->∑øms->
˛õ¡
);

242 
¥td
->
∑øms
 = 
NULL
;

246 
	}
}

248 
	$s3c24xx_pcm_¥ï¨e
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

250 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
sub°ªam
->
ru¡ime
->
¥iv©e_d©a
;

251 
ªt
 = 0;

253 
	`__D
("\n");

256 
	`s3c2410_dma_˘æ
(
¥td
->
∑øms
->
ch™√l
, 
S3C2410_DMAOP_FLUSH
);

257 
¥td
->
dma_lﬂded
 = 0;

258 
¥td
->
dma_pos
 =Öπd->
dma_°¨t
;

261 
	`s3c24xx_pcm_íqueue
(
sub°ªam
);

263  
ªt
;

264 
	}
}

266 
	$s3c24xx_pcm_åiggî
(
¢d_pcm_sub°ªam
 *
sub°ªam
, 
cmd
)

268 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
sub°ªam
->
ru¡ime
->
¥iv©e_d©a
;

269 
ªt
 = 0;

271 
	`__D
("\n");

273 
	`•ö_lock
(&
¥td
->
lock
);

275 
cmd
) {

276 
SNDRV_PCM_TRIGGER_START
:

277 
SNDRV_PCM_TRIGGER_RESUME
:

278 
SNDRV_PCM_TRIGGER_PAUSE_RELEASE
:

279 
¥td
->
°©e
 |
ST_RUNNING
;

280 
	`s3c2410_dma_˘æ
(
¥td
->
∑øms
->
ch™√l
, 
S3C2410_DMAOP_START
);

283 
SNDRV_PCM_TRIGGER_STOP
:

284 
SNDRV_PCM_TRIGGER_SUSPEND
:

285 
SNDRV_PCM_TRIGGER_PAUSE_PUSH
:

286 
¥td
->
°©e
 &~
ST_RUNNING
;

287 
	`s3c2410_dma_˘æ
(
¥td
->
∑øms
->
ch™√l
, 
S3C2410_DMAOP_STOP
);

291 
ªt
 = -
EINVAL
;

295 
	`•ö_u∆ock
(&
¥td
->
lock
);

297  
ªt
;

298 
	}
}

300 
¢d_pcm_u‰ames_t
 
	$s3c24xx_pcm_poöãr
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

302 
¢d_pcm_ru¡ime
 *
ru¡ime
 = 
sub°ªam
->runtime;

303 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
ru¡ime
->
¥iv©e_d©a
;

304 
ªs
;

305 
dma_addr_t
 
§c
, 
d°
;

307 
	`__D
("\n");

309 
	`•ö_lock
(&
¥td
->
lock
);

311 
	`s3c2410_dma_gëposôi⁄
(
¥td
->
∑øms
->
ch™√l
, &
§c
, &
d°
);

313 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_CAPTURE
)

314 
ªs
 = 
d°
 - 
¥td
->
dma_°¨t
;

316 
ªs
 = 
§c
 - 
¥td
->
dma_°¨t
;

318 
	`•ö_u∆ock
(&
¥td
->
lock
);

320 
	`__D
("Poöã∏%x %x\n",
§c
,
d°
);

333 i‡(
ªs
 =
	`¢d_pcm_lib_buf„r_byãs
(
sub°ªam
))

334 
ªs
 = 0;

336  
	`byãs_to_‰ames
(
sub°ªam
->
ru¡ime
, 
ªs
);

337 
	}
}

339 
	$s3c24xx_pcm_›í
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

341 
¢d_pcm_ru¡ime
 *
ru¡ime
 = 
sub°ªam
->runtime;

342 
s3c24xx_ru¡ime_d©a
 *
¥td
;

344 
	`__D
("\n");

346 
	`¢d_soc_£t_ru¡ime_hw∑øms
(
sub°ªam
, &
s3c24xx_pcm_h¨dw¨e
);

348 i‡((
¥td
 = 
	`kzÆloc
((
s3c24xx_ru¡ime_d©a
), 
GFP_KERNEL
)Ë=
NULL
)

349  -
ENOMEM
;

351 
	`•ö_lock_öô
(&
¥td
->
lock
);

353 
ru¡ime
->
¥iv©e_d©a
 = 
¥td
;

355 
	}
}

357 
	$s3c24xx_pcm_˛o£
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

359 
¢d_pcm_ru¡ime
 *
ru¡ime
 = 
sub°ªam
->runtime;

360 
s3c24xx_ru¡ime_d©a
 *
¥td
 = 
ru¡ime
->
¥iv©e_d©a
;

362 
	`__D
("¥td = %p\n", 
¥td
);

364 i‡(
¥td
)

365 
	`k‰ì
(
¥td
);

367 
	`__E
("s3c24xx_pcm_close called withÖrtd == NULL\n");

370 
	}
}

372 
	$s3c24xx_pcm_mm≠
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

373 
vm_¨ó_°ru˘
 *
vma
)

375 
¢d_pcm_ru¡ime
 *
ru¡ime
 = 
sub°ªam
->runtime;

377 
	`__D
("\n");

379  
	`dma_mm≠_wrôecomböe
(
sub°ªam
->
pcm
->
ˇrd
->
dev
,

380 
vma
,

381 
ru¡ime
->
dma_¨ó
,

382 
ru¡ime
->
dma_addr
,

383 
ru¡ime
->
dma_byãs
);

384 
	}
}

386 
¢d_pcm_›s
 
	gs3c24xx_pcm_›s
 = {

387 .
›í
 = 
s3c24xx_pcm_›í
,

388 .
	g˛o£
 = 
s3c24xx_pcm_˛o£
,

389 .
	gio˘l
 = 
¢d_pcm_lib_io˘l
,

390 .
	ghw_∑øms
 = 
s3c24xx_pcm_hw_∑øms
,

391 .
	ghw_‰ì
 = 
s3c24xx_pcm_hw_‰ì
,

392 .
	g¥ï¨e
 = 
s3c24xx_pcm_¥ï¨e
,

393 .
	gåiggî
 = 
s3c24xx_pcm_åiggî
,

394 .
	gpoöãr
 = 
s3c24xx_pcm_poöãr
,

395 .
	gmm≠
 = 
s3c24xx_pcm_mm≠
,

398 
	$s3c24xx_pcm_¥óŒoˇã_dma_buf„r
(
¢d_pcm
 *
pcm
, 
°ªam
)

400 
¢d_pcm_sub°ªam
 *
sub°ªam
 = 
pcm
->
°ªams
[
°ªam
].substream;

401 
¢d_dma_buf„r
 *
buf
 = &
sub°ªam
->
dma_buf„r
;

402 
size_t
 
size
 = 
s3c24xx_pcm_h¨dw¨e
.
buf„r_byãs_max
;

404 
	`__D
("\n");

406 
buf
->
dev
.
ty≥
 = 
SNDRV_DMA_TYPE_DEV
;

407 
buf
->
dev
.dev = 
pcm
->
ˇrd
->dev;

408 
buf
->
¥iv©e_d©a
 = 
NULL
;

409 i‡((
buf
->
¨ó
 = 
	`dma_Æloc_wrôecomböe
(
pcm
->
ˇrd
->
dev
, 
size
,

410 &
buf
->
addr
, 
GFP_KERNEL
)Ë=
NULL
) {

411 
	`__D
("dma_alloc_writecombine()Érror\n");

412  -
ENOMEM
;

414 
buf
->
byãs
 = 
size
;

416 
	}
}

418 
	$s3c24xx_pcm_‰ì_dma_buf„rs
(
¢d_pcm
 *
pcm
)

420 
¢d_pcm_sub°ªam
 *
sub°ªam
;

421 
¢d_dma_buf„r
 *
buf
;

422 
°ªam
;

424 
	`__D
("\n");

426 
°ªam
 = 0; stream < 2; stream++) {

427 i‡((
sub°ªam
 = 
pcm
->
°ªams
[
°ªam
].sub°ªamË=
NULL
)

430 
buf
 = &
sub°ªam
->
dma_buf„r
;

431 i‡(!
buf
->
¨ó
)

434 
	`dma_‰ì_wrôecomböe
(
pcm
->
ˇrd
->
dev
, 
buf
->
byãs
,

435 
buf
->
¨ó
, buf->
addr
);

436 
buf
->
¨ó
 = 
NULL
;

438 
	}
}

440 
u64
 
	gs3c24xx_pcm_dmamask
 = 
DMA_32BIT_MASK
;

442 
	$s3c24xx_pcm_√w
(
¢d_ˇrd
 *
ˇrd
,

443 
¢d_soc_codec_dai
 *
dai
, 
¢d_pcm
 *
pcm
)

445 
ªt
 = 0;

447 
	`__D
("\n");

449 i‡(!
ˇrd
->
dev
->
dma_mask
)

450 
ˇrd
->
dev
->
dma_mask
 = &
s3c24xx_pcm_dmamask
;

451 i‡(!
ˇrd
->
dev
->
cohîít_dma_mask
)

452 
ˇrd
->
dev
->
cohîít_dma_mask
 = 0xffffffff;

454 i‡(
dai
->
∂ayback
.
ch™√ls_mö
) {

455 i‡((
ªt
 = 
	`s3c24xx_pcm_¥óŒoˇã_dma_buf„r
(
pcm
,

456 
SNDRV_PCM_STREAM_PLAYBACK
)) != 0)

457  
ªt
;

460 i‡(
dai
->
ˇ±uª
.
ch™√ls_mö
) {

461 i‡((
ªt
 = 
	`s3c24xx_pcm_¥óŒoˇã_dma_buf„r
(
pcm
,

462 
SNDRV_PCM_STREAM_CAPTURE
)) != 0)

463  
ªt
;

466  
ªt
;

467 
	}
}

469 
¢d_soc_∂©f‹m
 
	gs3c24xx_soc_∂©f‹m
 = {

470 .
«me
 = "s3c24xx-audio",

471 .
	gpcm_›s
 = &
s3c24xx_pcm_›s
,

472 .
	gpcm_√w
 = 
s3c24xx_pcm_√w
,

473 .
	gpcm_‰ì
 = 
s3c24xx_pcm_‰ì_dma_buf„rs
,

476 
EXPORT_SYMBOL_GPL
(
s3c24xx_soc_∂©f‹m
);

478 
MODULE_AUTHOR
("Ben Dooks, <ben@simtec.co.uk>");

479 
MODULE_DESCRIPTION
("Samsung S3C24XX PCM DMA module");

480 
MODULE_LICENSE
("GPL");

	@s3c-pcm.h

12 #i‚de‡
_S3C24XX_PCM_H


13 
	#_S3C24XX_PCM_H


	)

15 
	#ST_RUNNING
 (1<<0)

	)

16 
	#ST_OPENED
 (1<<1)

	)

18 
	ss3c24xx_pcm_dma_∑øms
 {

19 
s3c2410_dma_˛õ¡
 *
	m˛õ¡
;

20 
	mch™√l
;

21 
dma_addr_t
 
	mdma_addr
;

22 
	mdma_size
;

25 
	#S3C24XX_DAI_I2S
 0

	)

27 #i‡
deföed
 (
CONFIG_CPU_S3C6400
Ë|| deföed (
CONFIG_CPU_S3C6410
)

28 
	#S3CPCM_DCON
 0

	)

29 
	#S3CPCM_HWCFG
 0

	)

32 
	#S3CPCM_DCON
 
S3C2410_DCON_SYNC_PCLK
|
S3C2410_DCON_HANDSHAKE


	)

33 
	#S3CPCM_HWCFG
 
S3C2410_DISRCC_INC
|
S3C2410_DISRCC_APB


	)

37 
¢d_soc_∂©f‹m
 
s3c24xx_soc_∂©f‹m
;

38 
¢d_ac97_bus_›s
 
s3c24xx_ac97_›s
;

	@s3c64xx/s3c6410-i2s-v32.c

1 
	#LOG_TAG
 "s3c6410_i2s-v32.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

27 
	~<löux/öô.h
>

28 
	~<löux/moduÀ.h
>

29 
	~<löux/devi˚.h
>

30 
	~<löux/dñay.h
>

31 
	~<löux/˛k.h
>

32 
	~<sound/drivî.h
>

33 
	~<sound/c‹e.h
>

34 
	~<sound/pcm.h
>

35 
	~<sound/pcm_∑øms.h
>

36 
	~<sound/öôvÆ.h
>

37 
	~<sound/soc.h
>

39 
	~<asm/h¨dw¨e.h
>

40 
	~<asm/io.h
>

41 
	~<asm/dma.h
>

43 
	~<asm-¨m/∂©-s3c64xx/ªgs-iis.h
>

45 
	~<asm/¨ch/ªgs-gpio.h
>

46 
	~<asm/¨ch/audio.h
>

47 
	~<asm/¨ch/dma.h
>

48 
	~<asm/¨ch/ªgs-s3c-˛ock.h
>

50 
	~"../s3c-pcm.h
"

51 
	~"../s3c-i2s.h
"

53 
s3c_iis_t
 
__iomem
 *
	gba£
;

54 
s3c_sysc⁄_t
 
__iomem
 *
	gsysc⁄
;

57 
	gext˛k
 = 0;

58 
moduÀ_∑øm
(
ext˛k
, , 0);

59 
MODULE_PARM_DESC
(
ext˛k
, "setÅo 1Åo disable s3c24XX i2s sysclk");

61 
s3c2410_dma_˛õ¡
 
	gs3c24xx_dma_˛õ¡_out
 = {

62 .
«me
 = "I2S PCM Stereo out"

65 
s3c2410_dma_˛õ¡
 
	gs3c24xx_dma_˛õ¡_ö
 = {

66 .
«me
 = "I2S PCM Stereo in"

69 
s3c24xx_pcm_dma_∑øms
 
	gs3c24xx_i2s_pcm_°îeo_out
 = {

70 .
˛õ¡
 = &
s3c24xx_dma_˛õ¡_out
,

71 .
	gch™√l
 = 
DMACH_I2S_OUT
,

72 .
	gdma_addr
 = 
S3C6400_PA_IIS
 + 
S3C64XX_IISFIFO
,

73 .
	gdma_size
 = 4,

76 
s3c24xx_pcm_dma_∑øms
 
	gs3c24xx_i2s_pcm_°îeo_ö
 = {

77 .
˛õ¡
 = &
s3c24xx_dma_˛õ¡_ö
,

78 .
	gch™√l
 = 
DMACH_I2S_IN
,

79 .
	gdma_addr
 = 
S3C6400_PA_IIS
 + 
S3C64XX_IISFIFORX
,

80 .
	gdma_size
 = 4,

83 
	ss3c24xx_i2s_öfo
 {

84 
__iomem
 *
	mªgs
;

85 
˛k
 *
	miis_˛k
;

86 
	mma°î
;

88 
s3c24xx_i2s_öfo
 
	gs3c24xx_i2s
;

90 
	$s3c24xx_¢d_tx˘æ
(
⁄
)

92 
	`__D
("\n");

93 
	`__D
("⁄ = %d \n", 
⁄
);

94 
	`__D
("r: IISCON: %x IISMOD: %x IISFCON: %x\n",

95 *(
v32
*)&
ba£
->
IISCON
, *(v32*)&ba£->
IISMOD
, *(v32*)&ba£->
IISPSR
);

97 i‡(
⁄
) {

98 
ba£
->
IISCON
.
I2SACTIVE
 = 1;

107 
ba£
->
IISCON
.
I2SACTIVE
 = 0;

108 
ba£
->
IISMOD
.
TXR
 &= 3;

111 
	`__D
("w: IISCON: %x IISMOD: %x IISFCON: %x\n",

112 *(
v32
*)&
ba£
->
IISCON
, *(v32*)&ba£->
IISMOD
, *(v32*)&ba£->
IISPSR
);

113 
	}
}

115 
	$s3c24xx_¢d_rx˘æ
(
⁄
)

117 
	`__D
("\n");

118 
	`__D
("⁄ = %d\n", 
⁄
);

119 
	`__D
("r: IISCON: %x IISMOD: %x IISFCON: %x\n",

120 *(
v32
*)&
ba£
->
IISCON
, *(v32*)&ba£->
IISMOD
, *(v32*)&ba£->
IISPSR
);

122 i‡(
⁄
) {

123 
ba£
->
IISCON
.
I2SACTIVE
 = 1;

131 
ba£
->
IISCON
.
I2SACTIVE
 = 0;

132 
ba£
->
IISMOD
.
TXR
 &= 2;

134 
	`__D
("w: IISCON: %x IISMOD: %x IISFCON: %x\n",

135 *(
v32
*)&
ba£
->
IISCON
, *(v32*)&ba£->
IISMOD
, *(v32*)&ba£->
IISPSR
);

136 
	}
}

142 
	$s3c24xx_¢d_Ãsync
()

144 
timeout
 = 
jiffõs
 + 
	`m£cs_to_jiffõs
(5);

146 
	`__D
("\n");

149 i‡((
ba£
->
IISCON
.
FTXFULL
 & 1) == 1)

152 i‡(
timeout
 < 
jiffõs
)

153  -
ETIMEDOUT
;

157 
	}
}

162 
ölöe
 
	$s3c24xx_¢d_is_˛kma°î
()

164 
	`__D
("\n");

166  (
ba£
->
IISMOD
.
TXR
 & 1) ? 0 : 1;

167 
	}
}

172 
	$s3c_i2s_£t_fmt
(
¢d_soc_˝u_dai
 *
˝u_dai
,

173 
fmt
)

175 
	`__D
("\n");

177 
	}
}

179 
	$s3c_i2s_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

180 
¢d_pcm_hw_∑øms
 *
∑øms
)

182 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

184 
	`__D
("\n");

187 
	`s3c_gpio_puŒup
(
S3C_GPB5
, 0);

188 
	`s3c_gpio_puŒup
(
S3C_GPB6
, 0);

189 
	`s3c_gpio_cfgpö
(
S3C_GPB5
, 
S3C_GPB5_I2C_SCL0
);

190 
	`s3c_gpio_cfgpö
(
S3C_GPB6
, 
S3C_GPB6_I2C_SDA0
);

192 
s3c24xx_i2s
.
ma°î
 = 1;

195 
	`s3c_gpio_cfgpö
(
S3C_GPD2
,
S3C_GPD2_I2S_LRCLK0
);

197 i‡(
s3c24xx_i2s
.
ma°î
 && !
ext˛k
){

198 
	`__D
("Setting Clock Outputás weáre Master\n");

199 
	`s3c_gpio_cfgpö
(
S3C_GPD0
,
S3C_GPD0_I2S_CLK0
);

202 
	`s3c_gpio_cfgpö
(
S3C_GPD1
,
S3C_GPD1_I2S_CDCLK0
);

203 
	`s3c_gpio_cfgpö
(
S3C_GPD3
,
S3C_GPD3_I2S_DI0
);

204 
	`s3c_gpio_cfgpö
(
S3C_GPD4
,
S3C_GPD4_I2S_DO0
);

207 
	`s3c_gpio_puŒup
(
S3C_GPD0
, 0x2);

208 
	`s3c_gpio_puŒup
(
S3C_GPD1
, 0x2);

209 
	`s3c_gpio_puŒup
(
S3C_GPD2
, 0x2);

210 
	`s3c_gpio_puŒup
(
S3C_GPD3
, 0x2);

211 
	`s3c_gpio_puŒup
(
S3C_GPD4
, 0x2);

213 
	`__D
("sub°ªam->°ªam : %d\n", 
sub°ªam
->
°ªam
);

214 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
) {

215 
πd
->
dai
->
˝u_dai
->
dma_d©a
 = &
s3c24xx_i2s_pcm_°îeo_out
;

217 
πd
->
dai
->
˝u_dai
->
dma_d©a
 = &
s3c24xx_i2s_pcm_°îeo_ö
;

221 i‡(!(*(
v32
 *)&
ba£
->
IISCON
 & 
S3C64XX_IIS0CON_I2SACTIVE
)) {

224 
ba£
->
IISMOD
.
BFS
 = 0;

225 
ba£
->
IISMOD
.
CDCLKCON
 = 0;

227 i‡(!
s3c24xx_i2s
.
ma°î
)

228 
ba£
->
IISMOD
.
IMS
 = 2;

230 
ba£
->
IISMOD
.
IMS
 = 1;

234 
ba£
->
IISMOD
.
TXR
 = 2;

235 
ba£
->
IISCON
.
TXDMACTIVE
 = 1;

236 
ba£
->
IISFIC
.
TFLUSH
 = 1;

237 
ba£
->
IISCON
.
RXDMAACTIVE
 = 1;

238 
ba£
->
IISFIC
.
RFLUSH
 = 1;

241 
ba£
->
IISFIC
.
TFLUSH
 = 0;

242 
ba£
->
IISFIC
.
RFLUSH
 = 0;

244 
	`__D
("IISCON: %x IISMOD: %x", *(
v32
*)&
ba£
->
IISCON
, *(v32*)&ba£->
IISMOD
);

247 
	}
}

249 
	$s3c_i2s_åiggî
(
¢d_pcm_sub°ªam
 *
sub°ªam
, 
cmd
)

251 
ªt
 = 0;

253 
	`__D
("\n");

254 
	`__D
("cmd = %d\n", 
cmd
);

256 
cmd
) {

257 
SNDRV_PCM_TRIGGER_START
:

258 
SNDRV_PCM_TRIGGER_RESUME
:

259 
SNDRV_PCM_TRIGGER_PAUSE_RELEASE
:

260 i‡(
	`s3c24xx_¢d_is_˛kma°î
() == 0) {

261 i‡((
ªt
 = 
	`s3c24xx_¢d_Ãsync
()) != 0)

262 
exô_îr
;

265 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_CAPTURE
)

266 
	`s3c24xx_¢d_rx˘æ
(1);

268 
	`s3c24xx_¢d_tx˘æ
(1);

270 
SNDRV_PCM_TRIGGER_STOP
:

271 
SNDRV_PCM_TRIGGER_SUSPEND
:

272 
SNDRV_PCM_TRIGGER_PAUSE_PUSH
:

273 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_CAPTURE
)

274 
	`s3c24xx_¢d_rx˘æ
(0);

276 
	`s3c24xx_¢d_tx˘æ
(0);

279 
ªt
 = -
EINVAL
;

283 
exô_îr
:

284  
ªt
;

285 
	}
}

287 
	$s3c64xx_i2s_shutdown
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

289 
	`__D
("\n");

291 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
) {

292 
ba£
->
IISMOD
.
TXR
 &= 3;

294 
ba£
->
IISMOD
.
TXR
 &= 2;

297 
ba£
->
IISCON
.
I2SACTIVE
 = 0;

302 
sysc⁄
->
PCLK_GATE
.
PCLK_IIS0
 = 0;

303 
sysc⁄
->
SCLK_GATE
.
SCLK_AUDIO0
 = 0;

306 
sysc⁄
->
EPLL_CON0
.
ENABLE
 = 0;

307 
	}
}

313 
	$s3c_i2s_£t_sys˛k
(
¢d_soc_˝u_dai
 *
˝u_dai
,

314 
˛k_id
, 
‰eq
, 
dú
)

316 
	`__D
("\n");

317 
	`__D
("˛k_id = %d\n", 
˛k_id
);

319 
ba£
->
IISMOD
.
IMS
 &= 2;

321 
˛k_id
) {

322 
S3C24XX_CLKSRC_PCLK
:

324 
S3C24XX_CLKSRC_MPLL
:

325 
ba£
->
IISMOD
.
IMS
 = 1;

328  -
EINVAL
;

332 
	}
}

337 
	$s3c_i2s_£t_˛kdiv
(
¢d_soc_˝u_dai
 *
˝u_dai
,

338 
div_id
, 
div
)

340 
u32
 
ªg
;

341 
	`__D
("\n");

342 
	`__D
("div_id = %d, div = %d\n", 
div_id
, 
div
);

344 
div_id
) {

345 
S3C24XX_DIV_MCLK
:

347 
S3C24XX_DIV_BCLK
:

348 
ªg
 = 
	`ªadl
(
s3c24xx_i2s
.
ªgs
 + 
S3C64XX_IIS0MOD
Ë& ~(
S3C64XX_IISMOD_384FS
);

349 
	`wrôñ
(
ªg
 | 
div
, 
s3c24xx_i2s
.
ªgs
 + 
S3C64XX_IIS0MOD
);

351 
S3C24XX_DIV_PRESCALER
:

352 
	`wrôñ
(
div
|(1<<15),
s3c24xx_i2s
.
ªgs
 + 
S3C64XX_IIS0PSR
);

355  -
EINVAL
;

359 
	}
}

361 
	$s3c_i2s_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

363 
	`__D
("\n");

365 i‡((
ba£
 = 
	`i‹em≠
(
S3C24XX_PA_IIS
, 0x100)Ë=
NULL
) {

366  -
ENXIO
;

370 
	}
}

372 #ifde‡
CONFIG_PM


373 
	$s3c_i2s_su•íd
(
∂©f‹m_devi˚
 *
dev
,

374 
¢d_soc_˝u_dai
 *
dai
)

376 
	`__D
("\n");

378 
	}
}

380 
	$s3c_i2s_ªsume
(
∂©f‹m_devi˚
 *
pdev
,

381 
¢d_soc_˝u_dai
 *
dai
)

383 
	`__D
("\n");

385 
	}
}

388 
	#s3c_i2s_su•íd
 
NULL


	)

389 
	#s3c_i2s_ªsume
 
NULL


	)

393 
	#S3C24XX_I2S_RATES
 \

394 (
SNDRV_PCM_RATE_8000
 | 
SNDRV_PCM_RATE_11025
 | 
SNDRV_PCM_RATE_16000
 | \

395 
SNDRV_PCM_RATE_22050
 | 
SNDRV_PCM_RATE_32000
 | 
SNDRV_PCM_RATE_44100
 | \

396 
SNDRV_PCM_RATE_48000
 | 
SNDRV_PCM_RATE_88200
 | 
SNDRV_PCM_RATE_96000
)

	)

398 
¢d_soc_˝u_dai
 
	gs3c_i2s_dai
 = {

399 .
«me
 = "s3c-i2s",

400 .
	gid
 = 0,

401 .
	gty≥
 = 
SND_SOC_DAI_I2S
,

402 .
	g¥obe
 = 
s3c_i2s_¥obe
,

403 .
	gsu•íd
 = 
s3c_i2s_su•íd
,

404 .
	gªsume
 = 
s3c_i2s_ªsume
,

405 .
	g∂ayback
 = {

406 .
ch™√ls_mö
 = 2,

407 .
	gch™√ls_max
 = 2,

408 .
	gøãs
 = 
S3C24XX_I2S_RATES
,

409 .
	gf‹m©s
 = 
SNDRV_PCM_FMTBIT_S8
 | 
SNDRV_PCM_FMTBIT_S16_LE
,

411 .
	gˇ±uª
 = {

412 .
ch™√ls_mö
 = 2,

413 .
	gch™√ls_max
 = 2,

414 .
	gøãs
 = 
S3C24XX_I2S_RATES
,

415 .
	gf‹m©s
 = 
SNDRV_PCM_FMTBIT_S8
 | 
SNDRV_PCM_FMTBIT_S16_LE
,

417 .
	g›s
 = {

418 .
shutdown
 = 
s3c64xx_i2s_shutdown
,

419 .
	gåiggî
 = 
s3c_i2s_åiggî
,

420 .
	ghw_∑øms
 = 
s3c_i2s_hw_∑øms
,

422 .
	gdai_›s
 = {

423 .
£t_fmt
 = 
s3c_i2s_£t_fmt
,

424 .
	g£t_˛kdiv
 = 
s3c_i2s_£t_˛kdiv
,

425 .
	g£t_sys˛k
 = 
s3c_i2s_£t_sys˛k
,

428 
EXPORT_SYMBOL_GPL
(
s3c_i2s_dai
);

431 
MODULE_AUTHOR
("Ben Dooks, <ben@simtec.co.uk>");

432 
MODULE_DESCRIPTION
("s3c24xx I2S SoC Interface");

433 
MODULE_LICENSE
("GPL");

	@s3c64xx/smdk6410_tlv320aic23.c

1 
	#LOG_TAG
 "smdk6410_év320aic23.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

23 
	~<löux/moduÀ.h
>

24 
	~<löux/moduÀ∑øm.h
>

25 
	~<löux/timî.h
>

26 
	~<löux/öãºu±.h
>

27 
	~<löux/∂©f‹m_devi˚.h
>

28 
	~<löux/i2c.h
>

29 
	~<löux/¥oc_fs.h
>

30 
	~<löux/˘y≥.h
>

31 
	~<sound/drivî.h
>

32 
	~<sound/c‹e.h
>

33 
	~<sound/pcm.h
>

34 
	~<sound/soc.h
>

35 
	~<sound/soc-d≠m.h
>

37 
	~<asm/mach-ty≥s.h
>

38 
	~<asm/h¨dw¨e/sco›.h
>

39 
	~<asm-¨m/∂©-s3c64xx/ªgs-iis.h
>

41 
	~<asm/¨ch/ªgs-gpio.h
>

42 
	~<asm/h¨dw¨e.h
>

43 
	~<asm/¨ch/audio.h
>

44 
	~<asm/io.h
>

45 
	~<asm/¨ch/•i-gpio.h
>

47 
	~<asm/¨ch/ªgs-s3c6410-˛ock.h
>

49 
	~"../codecs/év320aic23_28.h
"

51 
	~"../s3c-pcm.h
"

52 
	~"../s3c-i2s.h
"

55 
	#SMDK6400_AUDIO_OFF
 0

	)

56 
	#SMDK6400_CAPTURE_MIC1
 3

	)

57 
	#SMDK6400_STEREO_TO_HEADPHONES
 2

	)

58 
	#SMDK6400_CAPTURE_LINE_IN
 1

	)

60 
s3c_iis_t
 
__iomem
 *
	gba£
;

61 
s3c_sysc⁄_t
 
__iomem
 *
	gsysc⁄
 = 
S3C_VA_SYSCON
;

63 
¢d_soc_machöe
 
	gsmdk6400
;

65 
	$smdk6400_hifi_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

66 
¢d_pcm_hw_∑øms
 *
∑øms
)

68 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

69 
¢d_soc_codec_dai
 *
codec_dai
 = 
πd
->
dai
->codec_dai;

70 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
πd
->
dai
->cpu_dai;

71 
∂l_out
 = 0, 
b˛k
 = 0;

72 
ªt
 = 0;

74 
	`__D
("\n");

76 
ba£
 = (
	`ty≥of
(ba£))
	`i‹em≠
(
S3C6400_PA_IIS
, 0x100);

78 
	`__D
("øã = %d\n", 
	`∑øms_øã
(
∑øms
));

80 
ba£
->
IISMOD
.
RFS
 = 0;

81 
ba£
->
IISMOD
.
IMS
 = 3;

84 
ba£
->
IISPSR
.
PSVALA
 = 0;

85 
ba£
->
IISPSR
.
PSRAEN
 = 0;

89 
sysc⁄
->
CLK_SRC
.
AUDIO0_SEL
 = 2;

90 
	`mem£t
(&
sysc⁄
->
CLK_DIV2
, 0, (syscon->CLK_DIV2));

91 
sysc⁄
->
PCLK_GATE
.
PCLK_IIS0
 = 1;

92 
sysc⁄
->
SCLK_GATE
.
SCLK_AUDIO0
 = 1;

94 
∂l_out
 = 12000000;

97 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_fmt
(codec_dai,

98 
SND_SOC_DAIFMT_I2S
 | 
SND_SOC_DAIFMT_NB_NF
 | 
SND_SOC_DAIFMT_CBS_CFS
)) < 0)

100 
	`__E
("codec_dai->dai_ops.set_fmt()Érror\n");

101  
ªt
;

105 i‡((
ªt
 = 
˝u_dai
->
dai_›s
.
	`£t_fmt
(cpu_dai,

106 
SND_SOC_DAIFMT_I2S
 | 
SND_SOC_DAIFMT_NB_NF
 | 
SND_SOC_DAIFMT_CBS_CFS
)) < 0)

108 
	`__E
("cpu_dai->dai_ops.set_fmt()Érror\n");

109  
ªt
;

113 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_sys˛k
(codec_dai,

114 
TLV320AIC23_SYSCLK
, 
∂l_out
, 
SND_SOC_CLOCK_IN
)) < 0)

116 
	`__E
("codec_dai->dai_›s.£t_sys˛k(Ë∂l_ouà%d\n", 
∂l_out
);

117  
ªt
;

121 i‡((
ªt
 = 
˝u_dai
->
dai_›s
.
	`£t_˛kdiv
(cpu_dai,

122 
S3C24XX_DIV_MCLK
,

123 
S3C64XX_IISMOD_32FS
)) < 0)

125 
	`__E
("cpu_dai->dai_ops.set_clkdiv()Érror\n");

126  
ªt
;

130 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_˛kdiv
(codec_dai,

131 
TLV320AIC23_BCLKDIV
,

132 
b˛k
)) < 0)

134 
	`__E
("codec_dai->dai_ops.set_clkdiv()Érror\n");

135  
ªt
;

139 
	}
}

141 
	$smdk6400_hifi_hw_‰ì
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

143 
	`__D
("\n");

147 
	}
}

152 
¢d_soc_›s
 
	gsmdk6400_hifi_›s
 = {

153 .
hw_∑øms
 = 
smdk6400_hifi_hw_∑øms
,

154 .
	ghw_‰ì
 = 
smdk6400_hifi_hw_‰ì
,

157 
	gsmdk6400_s˚«rio
 = 0;

159 
	$smdk6400_gë_s˚«rio
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

160 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

162 
	`__D
("\n");

164 
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] = 
smdk6400_s˚«rio
;

166 
	}
}

168 
	$£t_s˚«rio_ídpoöts
(
¢d_soc_codec
 *
codec
, 
s˚«rio
)

170 
	`__D
("\n");

172 
smdk6400_s˚«rio
) {

173 
	`__D
("smdk6400_s˚«riÿi†%d\n",
smdk6400_s˚«rio
);

174 
SMDK6400_AUDIO_OFF
:

175 
	`__D
("SMDK6400_AUDIO_OFF\n");

176 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

177 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

178 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

180 
SMDK6400_STEREO_TO_HEADPHONES
:

181 
	`__D
("SMDK6400_STEREO_TO_HEADPHONES\n");

182 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

183 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

184 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

186 
SMDK6400_CAPTURE_MIC1
:

187 
	`__D
("SMDK6400_CAPTURE_MIC1\n");

188 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

189 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

190 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

192 
SMDK6400_CAPTURE_LINE_IN
:

193 
	`__D
("SMDK6400_CAPTURE_LINE_IN\n");

194 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

195 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

196 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

199 
	`__D
("default\n");

200 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

201 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

202 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

206 
	`¢d_soc_d≠m_sync_ídpoöts
(
codec
);

209 
	}
}

211 
	$smdk6400_£t_s˚«rio
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

212 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

214 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

216 
	`__D
("\n");

218 i‡(
smdk6400_s˚«rio
 =
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0])

221 
smdk6400_s˚«rio
 = 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

222 
	`£t_s˚«rio_ídpoöts
(
codec
, 
smdk6400_s˚«rio
);

224 
	}
}

226 c⁄° 
¢d_soc_d≠m_widgë
 
	gév320aic23_d≠m_widgës
[] = {

227 
SND_SOC_DAPM_HP
("Hódph⁄êJack", 
NULL
),

228 
SND_SOC_DAPM_MIC
("Mi¯Büs", 
NULL
),

229 
SND_SOC_DAPM_LINE
("LöêI¿Jack", 
NULL
),

233 c⁄° * 
	gaudio_m≠
[][3] = {

235 {"Hódph⁄êJack", 
NULL
, "LOUT2"},

236 {"Hódph⁄êJack", 
NULL
, "ROUT2"},

240 { "LINPUT2", 
NULL
, "Mic Bias" },

241 { "Mi¯Büs", 
NULL
, "Mic Jack" },

243 {"LINPUT1", 
NULL
, "Line In Jack"},

244 {"RINPUT1", 
NULL
, "Line In Jack"},

246 {
NULL
, NULL, NULL},

249 c⁄° *
	gsmdk_s˚«rios
[] = {

256 c⁄° 
soc_íum
 
	gsmdk_s˚«rio_íum
[] = {

257 
SOC_ENUM_SINGLE_EXT
(
ARRAY_SIZE
(
smdk_s˚«rios
),smdk_scenarios),

260 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gév320aic23_smdk6400_c⁄åﬁs
[] = {

261 
SOC_ENUM_EXT
("SMDK Mode", 
smdk_s˚«rio_íum
[0],

262 
smdk6400_gë_s˚«rio
, 
smdk6400_£t_s˚«rio
),

270 
	$smdk6400_év320aic23_öô
(
¢d_soc_codec
 *
codec
)

272 
i
, 
îr
;

274 
	`__D
("\n");

277 
	`£t_s˚«rio_ídpoöts
(
codec
, 
SMDK6400_AUDIO_OFF
);

280 
i
 = 0; i < 
	`ARRAY_SIZE
(
év320aic23_d≠m_widgës
); i++)

281 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, &
év320aic23_d≠m_widgës
[
i
]);

284 
i
 = 0; i < 
	`ARRAY_SIZE
(
év320aic23_smdk6400_c⁄åﬁs
); i++) {

285 i‡((
îr
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
,

286 
	`¢d_soc_˙ew
(&
év320aic23_smdk6400_c⁄åﬁs
[
i
],

287 
codec
, 
NULL
))) < 0)

288  
îr
;

292 
i
 = 0; 
audio_m≠
[i][0] !
NULL
; i++) {

293 
	`¢d_soc_d≠m_c⁄√˘_öput
(
codec
, 
audio_m≠
[
i
][0],

294 
audio_m≠
[
i
][1],áudio_map[i][2]);

298 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

299 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

300 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

302 
	`¢d_soc_d≠m_sync_ídpoöts
(
codec
);

304 
	}
}

306 
	$smdk6400_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

309 
	`s3c_gpio_puŒup
(
S3C_GPB5
, 0);

310 
	`s3c_gpio_puŒup
(
S3C_GPB6
, 0);

311 
	`s3c_gpio_cfgpö
(
S3C_GPB5
, 
S3C_GPB5_I2C_SCL0
);

312 
	`s3c_gpio_cfgpö
(
S3C_GPB6
, 
S3C_GPB6_I2C_SDA0
);

314 
	}
}

316 
¢d_soc_dai_lök
 
	gsmdk6400_dai
[] = {

319 .
«me
 = "TLV320AIC23",

320 .
	g°ªam_«me
 = "TLV320AIC23 HiFi",

321 .
	g˝u_dai
 = &
s3c_i2s_dai
,

322 .
	gcodec_dai
 = &
év320aic23_dai
,

323 .
	göô
 = 
smdk6400_év320aic23_öô
,

324 .
	g›s
 = &
smdk6400_hifi_›s
,

328 
¢d_soc_machöe
 
	gsmdk6400
 = {

329 .
«me
 = "smdk6400",

330 .
	g¥obe
 = 
smdk6400_¥obe
,

331 .
	gdai_lök
 = 
smdk6400_dai
,

332 .
	gnum_löks
 = 
ARRAY_SIZE
(
smdk6400_dai
),

335 
év320aic23_£tup_d©a
 
	gsmdk6400_év320aic23_£tup
 = {

336 .
i2c_addªss
 = 0x1a,

339 
¢d_soc_devi˚
 
	gsmdk6400_¢d_devd©a
 = {

340 .
machöe
 = &
smdk6400
,

341 .
	g∂©f‹m
 = &
s3c24xx_soc_∂©f‹m
,

342 .
	gcodec_dev
 = &
soc_codec_dev_év320aic23
,

343 .
	gcodec_d©a
 = &
smdk6400_év320aic23_£tup
,

346 
∂©f‹m_devi˚
 *
	gsmdk6400_¢d_devi˚
;

348 #ifde‡
CONFIG_TLV_AUDIO_CODEC_PROCFS


350 
	$aud_¥oc_ªad
(* 
∑ge
, ** 
°¨t
, 
off_t
 
off
, 
cou¡
,

351 * 
eof
, * 
d©a
)

353 
	`__D
("\n");

355 
¢d_soc_codec
* 
codec
 = 
smdk6400_¢d_devd©a
.codec;

357 i‡(
codec
 =
NULL
 || codec->
ªad
 == NULL)

358  
cou¡
;

360 i‡(
off
)

363 
d©a
 = (*)
∑ge
;

365 
∑ge
 +
	`•rötf
’age, "%†ªgi°î†ˇched sëtögs: ", 
codec
->
«me
);

366 
cou¡
=0; cou¡ < 
codec
->
ªg_ˇche_size
; ++count) {

367 i‡(!(
cou¡
 % 16)Ë
∑ge
 +
	`•rötf
(page, "\n R%02x: ", count);

369 
∑ge
 +
	`•rötf
’age, "%03x ", 
codec
->
	`ªad
(codec, 
cou¡
));

371 i‡((
cou¡
 % 8) == 7)

372 
∑ge
 +
	`•rötf
(page, " ");

375  ((
∑ge
 +
	`•rötf
’age, "\n")Ë- (*)
d©a
);

376 
	}
}

379 
	$aud_¥oc_wrôe
(
fûe
* fûe, c⁄° * 
buf„r
,

380 
cou¡
, * 
d©a
)

382 
	`__D
("\n");

384 
	#MAX_BUFLEN
 16

	)

385 
u8
 
ªg
;

386 
u16
 
vÆ
 = 
MAX_BUFLEN
 - 1;

387 *
±r
, 
tmp_buf
[
MAX_BUFLEN
];

388 
¢d_soc_codec
* 
codec
 = 
smdk6400_¢d_devd©a
.codec;

390 i‡(
codec
 =
NULL
 || codec->
wrôe
 == NULL)

391  
cou¡
;

393 i‡(
cou¡
 < 
MAX_BUFLEN
)

394 
vÆ
 = 
cou¡
 - 1;

396 
tmp_buf
[
vÆ
] = 0;

398 i‡(
	`c›y_‰om_u£r
(
tmp_buf
, 
buf„r
, 
vÆ
))

399  -
EFAULT
;

401 
±r
 = 
tmp_buf
; 
	`is•a˚
(*ptr); ++ptr) ;

403 
ªg
 = 
	`sim∂e_°πoul
(
±r
, &ptr, 16);

405 i‡(!(
ªg
 < 
codec
->
ªg_ˇche_size
)) {

406 
	`__D
("wr⁄gÑegi°îÇÿ%d, max %d\n", 
ªg
, 
codec
->
ªg_ˇche_size
);

407  
cou¡
;

410 
	`is•a˚
(*
±r
)) ++ptr;

411 
vÆ
 = 
	`sim∂e_°πoul
(
±r
, &ptr, 16);

413 i‡(
codec
->
	`wrôe
(codec, 
ªg
, 
vÆ
)) ;

415  
cou¡
;

416 
	}
}

418 
	#AUD_PROC_ENTRY
 "drivî/audªgs"

	)

420 
__öô
 
	$aud_¥oc_öô
()

422 
	`__D
("\n");

423 
¥oc_dú_íåy
* 
aud_íåy
;

425 i‡(!(
aud_íåy
 = 
	`¸óã_¥oc_íåy
(
AUD_PROC_ENTRY
, 
S_IRUGO
 | 
S_IWUSR
, 
NULL
)))

426  -
ENOMEM
;

428 
	`__I
("Proc-FS interface foráudio codec\n");

430 
aud_íåy
->
ow√r
 = 
THIS_MODULE
;

431 
aud_íåy
->
wrôe_¥oc
 = 
aud_¥oc_wrôe
;

432 
aud_íåy
->
ªad_¥oc
 = 
aud_¥oc_ªad
;

433 
aud_íåy
->
d©a
 = 
NULL
;

436 
	}
}

438 
__exô
 
	$aud_¥oc_exô
()

440 
	`__D
("\n");

441 
	`ªmove_¥oc_íåy
(
AUD_PROC_ENTRY
, 
NULL
);

442 
	}
}

446 
__öô
 
	$smdk6400_öô
()

448 
ªt
 = 0;

450 
	`__D
("\n");

452 i‡((
smdk6400_¢d_devi˚
 = 
	`∂©f‹m_devi˚_Æloc
("soc-audio", -1)Ë=
NULL
)

453  -
ENOMEM
;

455 
	`∂©f‹m_£t_drvd©a
(
smdk6400_¢d_devi˚
, &
smdk6400_¢d_devd©a
);

456 
smdk6400_¢d_devd©a
.
dev
 = &
smdk6400_¢d_devi˚
->dev;

458 i‡((
ªt
 = 
	`∂©f‹m_devi˚_add
(
smdk6400_¢d_devi˚
)) != 0)

459 
	`∂©f‹m_devi˚_put
(
smdk6400_¢d_devi˚
);

461 #ifdef 
CONFIG_TLV_AUDIO_CODEC_PROCFS


462 i‡(
	`aud_¥oc_öô
()) ;

465  
ªt
;

466 
	}
}

468 
__exô
 
	$smdk6400_exô
()

470 
	`__D
("\n");

472 #ifdef 
CONFIG_TLV_AUDIO_CODEC_PROCFS


473 
	`aud_¥oc_exô
();

476 
	`∂©f‹m_devi˚_dñ
(
smdk6400_¢d_devi˚
);

477 
	`∂©f‹m_devi˚_put
(
smdk6400_¢d_devi˚
);

478 
	}
}

480 
moduÀ_öô
(
smdk6400_öô
);

481 
moduÀ_exô
(
smdk6400_exô
);

484 
MODULE_AUTHOR
("Graeme Gregory, graeme.gregory@wolfsonmicro.com, www.wolfsonmicro.com");

485 
MODULE_DESCRIPTION
("ALSA SoC TLV320AIC23 Neo1973");

486 
MODULE_LICENSE
("GPL");

	@s3c64xx/smdk6410_wm8987.c

1 
	#LOG_TAG
 "smdk6410_wm8987.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

23 
	~<löux/moduÀ.h
>

24 
	~<löux/moduÀ∑øm.h
>

25 
	~<löux/timî.h
>

26 
	~<löux/öãºu±.h
>

27 
	~<löux/∂©f‹m_devi˚.h
>

28 
	~<löux/i2c.h
>

29 
	~<löux/¥oc_fs.h
>

30 
	~<löux/˘y≥.h
>

31 
	~<sound/drivî.h
>

32 
	~<sound/c‹e.h
>

33 
	~<sound/pcm.h
>

34 
	~<sound/soc.h
>

35 
	~<sound/soc-d≠m.h
>

37 
	~<asm/mach-ty≥s.h
>

38 
	~<asm/h¨dw¨e/sco›.h
>

39 
	~<asm-¨m/∂©-s3c64xx/ªgs-iis.h
>

41 
	~<asm/¨ch/ªgs-gpio.h
>

42 
	~<asm/h¨dw¨e.h
>

43 
	~<asm/¨ch/audio.h
>

44 
	~<asm/io.h
>

45 
	~<asm/¨ch/•i-gpio.h
>

47 
	~<asm/¨ch/ªgs-s3c6410-˛ock.h
>

49 
	~"../codecs/wm8987.h
"

50 
	~"../s3c-pcm.h
"

51 
	~"../s3c-i2s.h
"

54 
	#SMDK6400_AUDIO_OFF
 0

	)

55 
	#SMDK6400_CAPTURE_MIC1
 3

	)

56 
	#SMDK6400_STEREO_TO_HEADPHONES
 2

	)

57 
	#SMDK6400_CAPTURE_LINE_IN
 1

	)

59 
¢d_soc_machöe
 
	gsmdk6400
;

61 
	$smdk6400_hifi_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

62 
¢d_pcm_hw_∑øms
 *
∑øms
)

64 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

65 
¢d_soc_codec_dai
 *
codec_dai
 = 
πd
->
dai
->codec_dai;

66 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
πd
->
dai
->cpu_dai;

67 
∂l_out
 = 0, 
b˛k
 = 0;

68 
ªt
 = 0;

69 
ii•§
, 
iismod
;

70 
ªgs
 = 
	`i‹em≠
(
S3C6400_PA_IIS
, 0x100);

72 
	`__D
("\n");

73 
	`__D
("øã = %d\n", 
	`∑øms_øã
(
∑øms
));

75 
iismod
 = 
	`ªadl
((
ªgs
 + 
S3C64XX_IIS0MOD
));

76 
iismod
 &=~(0x3<<3);

77 
iismod
 |=(0x3<<10);

80 
ii•§
 = 
	`ªadl
((
ªgs
 + 
S3C64XX_IIS0PSR
));

81 
ii•§
 &=~((0x3f<<8)|(1<<15));

82 
	`wrôñ
(
ii•§
, (
ªgs
+
S3C64XX_IIS0PSR
));

86 
	`wrôñ
((
	`ªadl
(
S3C_CLK_SRC
)&~(0x7<<7)|(0x2<<7)), S3C_CLK_SRC);

88 
	`wrôñ
(0x0,
S3C_CLK_DIV2
);

90 
	`wrôñ
(
	`ªadl
(
S3C_PCLK_GATE
)|
S3C_CLKCON_PCLK_IIS0
, S3C_PCLK_GATE);

91 
	`wrôñ
(
	`ªadl
(
S3C_SCLK_GATE
)|
S3C_CLKCON_SCLK_AUDIO0
, S3C_SCLK_GATE);

93 
∂l_out
 = 12000000;

94 
	`wrôñ
(
iismod
 , (
ªgs
+
S3C64XX_IIS0MOD
));

97 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_fmt
(codec_dai,

98 
SND_SOC_DAIFMT_I2S
 | 
SND_SOC_DAIFMT_NB_NF
 | 
SND_SOC_DAIFMT_CBS_CFS
)) < 0)

100 
	`__E
("codec_dai->dai_ops.set_fmt()Érror\n");

101  
ªt
;

105 i‡((
ªt
 = 
˝u_dai
->
dai_›s
.
	`£t_fmt
(cpu_dai,

106 
SND_SOC_DAIFMT_I2S
 | 
SND_SOC_DAIFMT_NB_NF
 | 
SND_SOC_DAIFMT_CBS_CFS
)) < 0)

108 
	`__E
("cpu_dai->dai_ops.set_fmt()Érror\n");

109  
ªt
;

113 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_sys˛k
(codec_dai, 
WM8987_SYSCLK
, 
∂l_out
, 
SND_SOC_CLOCK_IN
))< 0)

115 
	`__E
("codec_dai->dai_›s.£t_sys˛k(Ë∂l_ouà%d \n", 
∂l_out
);

116  
ªt
;

120 i‡((
ªt
 = 
˝u_dai
->
dai_›s
.
	`£t_˛kdiv
(˝u_dai, 
S3C24XX_DIV_MCLK
,

121 
S3C64XX_IISMOD_32FS
 ))< 0)

123 
	`__E
("cpu_dai->dai_ops.set_clkdiv()Érror\n");

124  
ªt
;

128 i‡((
ªt
 = 
codec_dai
->
dai_›s
.
	`£t_˛kdiv
(codec_dai, 
WM8987_BCLKDIV
, 
b˛k
)) < 0)

130 
	`__E
("codec_dai->dai_ops.set_clkdiv()Érror\n");

131  
ªt
;

135 
	}
}

137 
	$smdk6400_hifi_hw_‰ì
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

139 
	`__D
("\n");

143 
	}
}

148 
¢d_soc_›s
 
	gsmdk6400_hifi_›s
 = {

149 .
hw_∑øms
 = 
smdk6400_hifi_hw_∑øms
,

150 .
	ghw_‰ì
 = 
smdk6400_hifi_hw_‰ì
,

153 
	gsmdk6400_s˚«rio
 = 0;

155 
	$smdk6400_gë_s˚«rio
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

156 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

158 
	`__D
("\n");

160 
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] = 
smdk6400_s˚«rio
;

162 
	}
}

164 
	$£t_s˚«rio_ídpoöts
(
¢d_soc_codec
 *
codec
, 
s˚«rio
)

166 
	`__D
("\n");

168 
smdk6400_s˚«rio
) {

169 
	`__I
("smdk6400_s˚«riÿi†%d\n",
smdk6400_s˚«rio
);

170 
SMDK6400_AUDIO_OFF
:

171 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

172 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

173 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

175 
SMDK6400_STEREO_TO_HEADPHONES
:

176 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

177 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

178 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

180 
SMDK6400_CAPTURE_MIC1
:

181 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

182 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

183 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 0);

185 
SMDK6400_CAPTURE_LINE_IN
:

186 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 0);

187 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 0);

188 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

191 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

192 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

193 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

197 
	`¢d_soc_d≠m_sync_ídpoöts
(
codec
);

200 
	}
}

202 
	$smdk6400_£t_s˚«rio
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

203 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

205 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

207 
	`__D
("\n");

209 i‡(
smdk6400_s˚«rio
 =
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0])

212 
smdk6400_s˚«rio
 = 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

213 
	`£t_s˚«rio_ídpoöts
(
codec
, 
smdk6400_s˚«rio
);

215 
	}
}

217 c⁄° 
¢d_soc_d≠m_widgë
 
	gwm8987_d≠m_widgës
[] = {

218 
SND_SOC_DAPM_HP
("Hódph⁄êJack", 
NULL
),

219 
SND_SOC_DAPM_MIC
("Mi¯Büs", 
NULL
),

220 
SND_SOC_DAPM_LINE
("LöêI¿Jack", 
NULL
),

225 c⁄° * 
	gaudio_m≠
[][3] = {

227 {"Hódph⁄êJack", 
NULL
, "LOUT2"},

228 {"Hódph⁄êJack", 
NULL
, "ROUT2"},

232 { "LINPUT2", 
NULL
, "Mic Bias" },

233 { "Mi¯Büs", 
NULL
, "Mic Jack" },

235 {"LINPUT1", 
NULL
, "Line In Jack"},

236 {"RINPUT1", 
NULL
, "Line In Jack"},

238 {
NULL
, NULL, NULL},

241 c⁄° *
	gsmdk_s˚«rios
[] = {

248 c⁄° 
soc_íum
 
	gsmdk_s˚«rio_íum
[] = {

249 
SOC_ENUM_SINGLE_EXT
(
ARRAY_SIZE
(
smdk_s˚«rios
),smdk_scenarios),

252 c⁄° 
¢d_kc⁄åﬁ_√w
 
	gwm8987_smdk6400_c⁄åﬁs
[] = {

253 
SOC_ENUM_EXT
("SMDK Mode", 
smdk_s˚«rio_íum
[0],

254 
smdk6400_gë_s˚«rio
, 
smdk6400_£t_s˚«rio
),

262 
	$smdk6400_wm8987_öô
(
¢d_soc_codec
 *
codec
)

264 
i
, 
îr
;

267 
	`£t_s˚«rio_ídpoöts
(
codec
, 
SMDK6400_AUDIO_OFF
);

270 
i
 = 0; i < 
	`ARRAY_SIZE
(
wm8987_d≠m_widgës
); i++)

271 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, &
wm8987_d≠m_widgës
[
i
]);

274 
i
 = 0; i < 
	`ARRAY_SIZE
(
wm8987_smdk6400_c⁄åﬁs
); i++) {

275 i‡((
îr
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
,

276 
	`¢d_soc_˙ew
(&
wm8987_smdk6400_c⁄åﬁs
[
i
],

277 
codec
, 
NULL
))) < 0)

278  
îr
;

282 
i
 = 0; 
audio_m≠
[i][0] !
NULL
; i++) {

283 
	`¢d_soc_d≠m_c⁄√˘_öput
(
codec
, 
audio_m≠
[
i
][0],

284 
audio_m≠
[
i
][1],áudio_map[i][2]);

288 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Mic Bias", 1);

289 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Headphone Jack", 1);

290 
	`¢d_soc_d≠m_£t_ídpoöt
(
codec
, "Line In Jack", 1);

292 
	`¢d_soc_d≠m_sync_ídpoöts
(
codec
);

294 
	}
}

296 
	$smdk6400_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

299 
	`s3c_gpio_puŒup
(
S3C_GPB5
, 0);

300 
	`s3c_gpio_puŒup
(
S3C_GPB6
, 0);

301 
	`s3c_gpio_cfgpö
(
S3C_GPB5
, 
S3C_GPB5_I2C_SCL0
);

302 
	`s3c_gpio_cfgpö
(
S3C_GPB6
, 
S3C_GPB6_I2C_SDA0
);

304 
	}
}

306 
¢d_soc_dai_lök
 
	gsmdk6400_dai
[] = {

308 .
«me
 = "WM8987",

309 .
	g°ªam_«me
 = "WM8987 HiFi",

310 .
	g˝u_dai
 = &
s3c_i2s_dai
,

312 .
	gcodec_dai
 = &
wm8987_dai
,

313 .
	göô
 = 
smdk6400_wm8987_öô
,

314 .
	g›s
 = &
smdk6400_hifi_›s
,

318 
¢d_soc_machöe
 
	gsmdk6400
 = {

319 .
«me
 = "smdk6400",

320 .
	g¥obe
 = 
smdk6400_¥obe
,

321 .
	gdai_lök
 = 
smdk6400_dai
,

322 .
	gnum_löks
 = 
ARRAY_SIZE
(
smdk6400_dai
),

325 
wm8987_£tup_d©a
 
	gsmdk6400_wm8987_£tup
 = {

326 .
i2c_addªss
 = 0x1a,

329 
¢d_soc_devi˚
 
	gsmdk6400_¢d_devd©a
 = {

330 .
machöe
 = &
smdk6400
,

331 .
	g∂©f‹m
 = &
s3c24xx_soc_∂©f‹m
,

332 .
	gcodec_dev
 = &
soc_codec_dev_wm8987
,

333 .
	gcodec_d©a
 = &
smdk6400_wm8987_£tup
,

336 
∂©f‹m_devi˚
 *
	gsmdk6400_¢d_devi˚
;

338 #ifdef 
CONFIG_AUDIO_CODEC_PROCFS


341 
	$¥oc_run_dñayed_w‹k
(
dñayed_w‹k
 *
dw‹k
)

343 
ªt
;

345 
	`__D
("\n");

350 i‡((
ªt
 = 
	`ˇn˚l_dñayed_w‹k
(
dw‹k
)) != 0) {

351 
	`scheduÀ_dñayed_w‹k
(
dw‹k
, 0);

352 
	`Êush_scheduÀd_w‹k
();

355  
ªt
;

356 
	}
}

358 
	$aud_¥oc_ªad
(* 
∑ge
, ** 
°¨t
, 
off_t
 
off
, 
cou¡
,

359 * 
eof
, * 
d©a
)

361 
¢d_soc_codec
* 
codec
 = 
smdk6400_¢d_devd©a
.codec;

363 
	`__D
("\n");

365 i‡(!
codec
 || !codec->
ªad
)

366  
cou¡
;

368 i‡(
off
)

371 
d©a
 = (*)
∑ge
;

373 
∑ge
 +
	`•rötf
’age, "%†ªgi°î†ˇched sëtögs: ", 
codec
->
«me
);

374 
cou¡
=0; cou¡ < 
codec
->
ªg_ˇche_size
; ++count) {

375 i‡(!(
cou¡
 % 16)Ë
∑ge
 +
	`•rötf
(page, "\n R%02x: ", count);

376 
∑ge
 +
	`•rötf
’age, "%03x ", 
codec
->
	`ªad
(codec, 
cou¡
));

377 i‡((
cou¡
 % 8Ë=7Ë
∑ge
 +
	`•rötf
(page, " ");

380  ((
∑ge
 +
	`•rötf
’age, "\n")Ë- (*)
d©a
);

381 
	}
}

384 
	$aud_¥oc_wrôe
(
fûe
* fûe, c⁄° * 
buf„r
,

385 
cou¡
, * 
d©a
)

387 
	#MAX_BUFLEN
 16

	)

388 
u8
 
ªg
;

389 
u16
 
vÆ
 = 
MAX_BUFLEN
 - 1;

390 *
±r
, 
tmp_buf
[
MAX_BUFLEN
];

391 
¢d_soc_codec
* 
codec
 = 
smdk6400_¢d_devd©a
.codec;

393 
	`__D
("\n");

395 i‡(!
codec
 || !codec->
wrôe
)

396  
cou¡
;

398 i‡(
cou¡
 < 
MAX_BUFLEN
Ë
vÆ
 = cou¡ - 1; 
tmp_buf
[val] = 0;

399 i‡(
	`c›y_‰om_u£r
(
tmp_buf
, 
buf„r
, 
vÆ
)Ë -
EFAULT
;

401 
±r
 = 
tmp_buf
; 
	`is•a˚
(*ptr); ++ptr) ;

403 
ªg
 = 
	`sim∂e_°πoul
(
±r
, &ptr, 16);

405 i‡(!(
ªg
 < 
codec
->
ªg_ˇche_size
)) {

406 
	`__D
("wr⁄gÑegi°îÇÿ%d, max %d\n", 
ªg
, 
codec
->
ªg_ˇche_size
);

407  
cou¡
;

410 
	`is•a˚
(*
±r
)) ++ptr;

411 
vÆ
 = 
	`sim∂e_°πoul
(
±r
, &ptr, 16);

413 i‡(
codec
->
	`wrôe
(codec, 
ªg
, 
vÆ
)) ;

415  
cou¡
;

416 
	}
}

418 
	#AUD_PROC_ENTRY
 "drivî/audªgs"

	)

420 
__öô
 
	$aud_¥oc_öô
()

422 
¥oc_dú_íåy
* 
aud_íåy
;

424 
	`__D
("\n");

426 i‡(!(
aud_íåy
 = 
	`¸óã_¥oc_íåy
(
AUD_PROC_ENTRY
,

427 
S_IRUGO
 | 
S_IWUSR
, 
NULL
))Ë -
ENOMEM
;

429 
	`__I
("Proc-FS interface foráudio codec\n");

431 
aud_íåy
->
ow√r
 = 
THIS_MODULE
;

432 
aud_íåy
->
wrôe_¥oc
 = 
aud_¥oc_wrôe
;

433 
aud_íåy
->
ªad_¥oc
 = 
aud_¥oc_ªad
;

434 
aud_íåy
->
d©a
 = 
NULL
;

437 
	}
}

439 
__exô
 
	$aud_¥oc_exô
()

441 
	`__D
("\n");

443 
	`ªmove_¥oc_íåy
(
AUD_PROC_ENTRY
, 
NULL
);

444 
	}
}

448 
__öô
 
	$smdk6400_öô
()

450 
ªt
;

452 
	`__D
("\n");

454 
smdk6400_¢d_devi˚
 = 
	`∂©f‹m_devi˚_Æloc
("soc-audio", -1);

455 i‡(!
smdk6400_¢d_devi˚
)

456  -
ENOMEM
;

458 
	`∂©f‹m_£t_drvd©a
(
smdk6400_¢d_devi˚
, &
smdk6400_¢d_devd©a
);

459 
smdk6400_¢d_devd©a
.
dev
 = &
smdk6400_¢d_devi˚
->dev;

460 
ªt
 = 
	`∂©f‹m_devi˚_add
(
smdk6400_¢d_devi˚
);

462 i‡(
ªt
)

463 
	`∂©f‹m_devi˚_put
(
smdk6400_¢d_devi˚
);

464 #ifdef 
CONFIG_AUDIO_CODEC_PROCFS


465 i‡(
	`aud_¥oc_öô
()) ;

469  
ªt
;

470 
	}
}

472 
__exô
 
	$smdk6400_exô
()

474 
	`__D
("\n");

476 
	`∂©f‹m_devi˚_uƒegi°î
(
smdk6400_¢d_devi˚
);

477 
	}
}

479 
moduÀ_öô
(
smdk6400_öô
);

480 
moduÀ_exô
(
smdk6400_exô
);

483 
MODULE_AUTHOR
("Graeme Gregory, graeme.gregory@wolfsonmicro.com, www.wolfsonmicro.com");

484 
MODULE_DESCRIPTION
("ALSA SoC WM8987 Neo1973");

485 
MODULE_LICENSE
("GPL");

	@s3c_snd.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

14 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

17 c⁄° 
	g__moduÀ_dïíds
[]

18 
__©åibuã_u£d__


19 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@s3c_tlv320aic23.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

5 
MODULE_INFO
(
vîmagic
, 
VERMAGIC_STRING
);

7 
moduÀ
 
__this_moduÀ


8 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

9 .
«me
 = 
KBUILD_MODNAME
,

10 .
	göô
 = 
öô_moduÀ
,

11 #ifde‡
CONFIG_MODULE_UNLOAD


12 .
	gexô
 = 
˛ónup_moduÀ
,

14 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

17 c⁄° 
	g__moduÀ_dïíds
[]

18 
__©åibuã_u£d__


19 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@soc-core.c

1 
	#LOG_TAG
 "soc-c‹e.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

15 
DEFINE_MUTEX
(
pcm_muãx
);

16 
DEFINE_MUTEX
(
io_muãx
);

17 
DECLARE_WAIT_QUEUE_HEAD
(
soc_pm_waôq
);

24 
	gpmdown_time
 = 5000;

25 
moduÀ_∑øm
(
pmdown_time
, , 0);

26 
MODULE_PARM_DESC
(
pmdown_time
, "DAPM streamÖowerdownÅime (msecs)");

31 
	$run_dñayed_w‹k
(
dñayed_w‹k
 *
dw‹k
)

33 
ªt
;

35 
	`__D
("\n");

40 i‡((
ªt
 = 
	`ˇn˚l_dñayed_w‹k
(
dw‹k
)) != 0) {

41 
	`scheduÀ_dñayed_w‹k
(
dw‹k
, 0);

42 
	`Êush_scheduÀd_w‹k
();

45  
ªt
;

46 
	}
}

48 
ölöe
 c⁄° * 
	$gë_dai_«me
(
ty≥
)

50 
	`__D
("\n");

52 
ty≥
) {

53 
SND_SOC_DAI_AC97_BUS
:

54 
SND_SOC_DAI_AC97
:

56 
SND_SOC_DAI_I2S
:

58 
SND_SOC_DAI_PCM
:

61  
NULL
;

62 
	}
}

69 
	$soc_pcm_›í
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

71 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

72 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

73 
¢d_pcm_h¨dw¨e
 *
pcm_hw
 = &
sub°ªam
->
ru¡ime
->
hw
;

74 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

75 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

76 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

77 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

78 
ªt
 = 0;

80 
	`__D
("\n");

82 
	`muãx_lock
(&
pcm_muãx
);

85 i‡(
˝u_dai
->
›s
.
°¨tup
) {

86 i‡((
ªt
 = 
˝u_dai
->
›s
.
	`°¨tup
(
sub°ªam
)) < 0) {

87 
	`__E
("asoc: c™'à›í i¡îÁ˚ %s\n", 
˝u_dai
->
«me
);

88 
out
;

92 i‡(
∂©f‹m
->
pcm_›s
->
›í
) {

93 i‡((
ªt
 = 
∂©f‹m
->
pcm_›s
->
	`›í
(
sub°ªam
))< 0) {

94 
	`__E
("asoc: c™'à›íÖœtf‹m %s\n", 
∂©f‹m
->
«me
);

95 
∂©f‹m_îr
;

99 i‡(
codec_dai
->
›s
.
°¨tup
) {

100 i‡((
ªt
 = 
codec_dai
->
›s
.
	`°¨tup
(
sub°ªam
)) < 0) {

101 
	`__E
("asoc: c™'à›í code¯%s\n", 
codec_dai
->
«me
);

102 
codec_dai_îr
;

106 i‡(
machöe
->
›s
 && machöe->›s->
°¨tup
) {

107 i‡((
ªt
 = 
machöe
->
›s
->
	`°¨tup
(
sub°ªam
)) < 0) {

108 
	`__E
("asoc: %†°¨tu∞Áûed\n", 
machöe
->
«me
);

109 
machöe_îr
;

114 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
) {

115 
pcm_hw
->
øã_mö
 =

116 
	`max
(
codec_dai
->
∂ayback
.
øã_mö
, 
˝u_dai
->playback.rate_min);

117 
pcm_hw
->
øã_max
 =

118 
	`mö
(
codec_dai
->
∂ayback
.
øã_max
, 
˝u_dai
->playback.rate_max);

119 
pcm_hw
->
ch™√ls_mö
 =

120 
	`max
(
codec_dai
->
∂ayback
.
ch™√ls_mö
,

121 
˝u_dai
->
∂ayback
.
ch™√ls_mö
);

122 
pcm_hw
->
ch™√ls_max
 =

123 
	`mö
(
codec_dai
->
∂ayback
.
ch™√ls_max
,

124 
˝u_dai
->
∂ayback
.
ch™√ls_max
);

125 
pcm_hw
->
f‹m©s
 =

126 
codec_dai
->
∂ayback
.
f‹m©s
 & 
˝u_dai
->playback.formats;

127 
pcm_hw
->
øãs
 =

128 
codec_dai
->
∂ayback
.
øãs
 & 
˝u_dai
->playback.rates;

130 
pcm_hw
->
øã_mö
 =

131 
	`max
(
codec_dai
->
ˇ±uª
.
øã_mö
, 
˝u_dai
->capture.rate_min);

132 
pcm_hw
->
øã_max
 =

133 
	`mö
(
codec_dai
->
ˇ±uª
.
øã_max
, 
˝u_dai
->capture.rate_max);

134 
pcm_hw
->
ch™√ls_mö
 =

135 
	`max
(
codec_dai
->
ˇ±uª
.
ch™√ls_mö
, 
˝u_dai
->capture.channels_min);

136 
pcm_hw
->
ch™√ls_max
 =

137 
	`mö
(
codec_dai
->
ˇ±uª
.
ch™√ls_max
, 
˝u_dai
->capture.channels_max);

138 
pcm_hw
->
f‹m©s
 =

139 
codec_dai
->
ˇ±uª
.
f‹m©s
 & 
˝u_dai
->capture.formats;

140 
pcm_hw
->
øãs
 =

141 
codec_dai
->
ˇ±uª
.
øãs
 & 
˝u_dai
->capture.rates;

144 
	`¢d_pcm_limô_hw_øãs
(
sub°ªam
->
ru¡ime
);

145 i‡(!
pcm_hw
->
øãs
) {

146 
	`__E
("asoc: %s <-> %s No matchingÑates\n",

147 
codec_dai
->
«me
, 
˝u_dai
->name);

148 
machöe_îr
;

150 i‡(!
pcm_hw
->
f‹m©s
) {

151 
	`__E
("asoc: %s <-> %s No matching formats\n",

152 
codec_dai
->
«me
, 
˝u_dai
->name);

153 
machöe_îr
;

155 i‡(!
pcm_hw
->
ch™√ls_mö
 || !pcm_hw->
ch™√ls_max
) {

156 
	`__E
("asoc: %s <-> %s No matching channels\n",

157 
codec_dai
->
«me
, 
˝u_dai
->name);

158 
machöe_îr
;

161 
	`__D
("asoc: %†<-> %†öfo:\n",
codec_dai
->
«me
, 
˝u_dai
->name);

162 
	`__D
("asoc:Ñ©êmask 0x%x\n", 
pcm_hw
->
øãs
);

163 
	`__D
("asoc: mö ch %d max ch %d\n", 
pcm_hw
->
ch™√ls_mö
,Öcm_hw->
ch™√ls_max
);

164 
	`__D
("asoc: möÑ©ê%d maxÑ©ê%d\n", 
pcm_hw
->
øã_mö
,Öcm_hw->
øã_max
);

166 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
)

167 
˝u_dai
->
∂ayback
.
a˘ive
 = 
codec_dai
->playback.active = 1;

169 
˝u_dai
->
ˇ±uª
.
a˘ive
 = 
codec_dai
->capture.active = 1;

171 
˝u_dai
->
a˘ive
 = 
codec_dai
->active = 1;

172 
˝u_dai
->
ru¡ime
 = 
sub°ªam
->runtime;

173 
socdev
->
codec
->
a˘ive
++;

174 
	`muãx_u∆ock
(&
pcm_muãx
);

177 
machöe_îr
:

178 i‡(
machöe
->
›s
 && machöe->›s->
shutdown
)

179 
machöe
->
›s
->
	`shutdown
(
sub°ªam
);

181 
codec_dai_îr
:

182 i‡(
∂©f‹m
->
pcm_›s
->
˛o£
)

183 
∂©f‹m
->
pcm_›s
->
	`˛o£
(
sub°ªam
);

185 
∂©f‹m_îr
:

186 i‡(
˝u_dai
->
›s
.
shutdown
)

187 
˝u_dai
->
›s
.
	`shutdown
(
sub°ªam
);

188 
out
:

189 
	`muãx_u∆ock
(&
pcm_muãx
);

190  
ªt
;

191 
	}
}

198 
	$˛o£_dñayed_w‹k
(
w‹k_°ru˘
 *
w‹k
)

200 
¢d_soc_devi˚
 *
socdev
 =

201 
	`c⁄èöî_of
(
w‹k
, 
¢d_soc_devi˚
, 
dñayed_w‹k
.work);

202 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

203 
¢d_soc_codec_dai
 *
codec_dai
;

204 
i
;

206 
	`__D
("\n");

208 
	`muãx_lock
(&
pcm_muãx
);

209 
i
 = 0; i < 
codec
->
num_dai
; i++) {

210 
codec_dai
 = &
codec
->
dai
[
i
];

212 
	`__D
("pop wq checking: %s status: %s waiting: %s\n",

213 
codec_dai
->
∂ayback
.
°ªam_«me
,

214 
codec_dai
->
∂ayback
.
a˘ive
 ? "active" : "inactive",

215 
codec_dai
->
p›_waô
 ? "yes" : "no");

218 i‡(
codec_dai
->
p›_waô
 == 1) {

219 
codec_dai
->
p›_waô
 = 0;

220 
	`¢d_soc_d≠m_°ªam_evít
(
codec
, 
codec_dai
->
∂ayback
.
°ªam_«me
,

221 
SND_SOC_DAPM_STREAM_STOP
);

224 i‡(
codec
->
a˘ive
 == 0) {

225 
	`__D
("p› wq D3 %†%s\n", 
codec
->
«me
, 
codec_dai
->
∂ayback
.
°ªam_«me
);

226 i‡(
codec
->
d≠m_evít
)

227 
codec
->
	`d≠m_evít
(codec, 
SNDRV_CTL_POWER_D3hŸ
);

231 
	`muãx_u∆ock
(&
pcm_muãx
);

232 
	}
}

239 
	$soc_codec_˛o£
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

241 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

242 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

243 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

244 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

245 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

246 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

247 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

249 
	`__D
("\n");

251 
	`muãx_lock
(&
pcm_muãx
);

253 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
)

254 
˝u_dai
->
∂ayback
.
a˘ive
 = 
codec_dai
->playback.active = 0;

256 
˝u_dai
->
ˇ±uª
.
a˘ive
 = 
codec_dai
->capture.active = 0;

258 i‡(
codec_dai
->
∂ayback
.
a˘ive
 =0 && codec_dai->
ˇ±uª
.active == 0) {

259 
˝u_dai
->
a˘ive
 = 
codec_dai
->active = 0;

261 
codec
->
a˘ive
--;

263 i‡(
˝u_dai
->
›s
.
shutdown
)

264 
˝u_dai
->
›s
.
	`shutdown
(
sub°ªam
);

266 i‡(
codec_dai
->
›s
.
shutdown
)

267 
codec_dai
->
›s
.
	`shutdown
(
sub°ªam
);

269 i‡(
machöe
->
›s
 && machöe->›s->
shutdown
)

270 
machöe
->
›s
->
	`shutdown
(
sub°ªam
);

272 i‡(
∂©f‹m
->
pcm_›s
->
˛o£
)

273 
∂©f‹m
->
pcm_›s
->
	`˛o£
(
sub°ªam
);

275 
˝u_dai
->
ru¡ime
 = 
NULL
;

277 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
) {

279 
codec_dai
->
p›_waô
 = 1;

280 
	`scheduÀ_dñayed_w‹k
(&
socdev
->
dñayed_w‹k
,

281 
	`m£cs_to_jiffõs
(
pmdown_time
));

284 
	`¢d_soc_d≠m_°ªam_evít
(
codec
,

285 
codec_dai
->
ˇ±uª
.
°ªam_«me
, 
SND_SOC_DAPM_STREAM_STOP
);

287 i‡(
codec
->
a˘ive
 =0 && 
codec_dai
->
p›_waô
 == 0){

288 i‡(
codec
->
d≠m_evít
)

289 
codec
->
	`d≠m_evít
(codec, 
SNDRV_CTL_POWER_D3hŸ
);

293 
	`muãx_u∆ock
(&
pcm_muãx
);

295 
	}
}

302 
	$soc_pcm_¥ï¨e
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

304 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

305 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

306 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

307 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

308 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

309 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

310 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

311 
ªt
 = 0;

313 
	`__D
("\n");

315 
	`muãx_lock
(&
pcm_muãx
);

317 i‡(
machöe
->
›s
 && machöe->›s->
¥ï¨e
) {

318 i‡((
ªt
 = 
machöe
->
›s
->
	`¥ï¨e
(
sub°ªam
)) < 0) {

319 
	`__E
("asoc: machineÖrepareÉrror\n");

320 
out
;

324 i‡(
∂©f‹m
->
pcm_›s
->
¥ï¨e
) {

325 i‡((
ªt
 = 
∂©f‹m
->
pcm_›s
->
	`¥ï¨e
(
sub°ªam
)) < 0) {

326 
	`__E
("asoc:ÖlatformÖrepareÉrror\n");

327 
out
;

331 i‡(
codec_dai
->
›s
.
¥ï¨e
) {

332 i‡((
ªt
 = 
codec_dai
->
›s
.
	`¥ï¨e
(
sub°ªam
)) < 0) {

333 
	`__E
("asoc: codec DAIÖrepareÉrror\n");

334 
out
;

338 i‡(
˝u_dai
->
›s
.
¥ï¨e
) {

339 i‡((
ªt
 = 
˝u_dai
->
›s
.
	`¥ï¨e
(
sub°ªam
)) < 0) {

340 
	`__E
("asoc: cpu DAIÖrepareÉrror\n");

341 
out
;

347 i‡(
codec_dai
->
p›_waô
) {

349 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_CAPTURE
)

350 
	`¢d_soc_d≠m_°ªam_evít
(
socdev
->
codec
,

351 
codec_dai
->
ˇ±uª
.
°ªam_«me
,

352 
SND_SOC_DAPM_STREAM_START
);

354 
codec_dai
->
p›_waô
 = 0;

355 
	`ˇn˚l_dñayed_w‹k
(&
socdev
->
dñayed_w‹k
);

356 i‡(
codec_dai
->
dai_›s
.
digôÆ_muã
)

357 
codec_dai
->
dai_›s
.
	`digôÆ_muã
(codec_dai, 0);

361 i‡(
codec
->
d≠m_°©e
 !
SNDRV_CTL_POWER_D0
) {

363 i‡(
codec
->
d≠m_evít
)

364 
codec
->
	`d≠m_evít
(codec, 
SNDRV_CTL_POWER_D1
);

366 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
)

367 
	`¢d_soc_d≠m_°ªam_evít
(
codec
,

368 
codec_dai
->
∂ayback
.
°ªam_«me
,

369 
SND_SOC_DAPM_STREAM_START
);

371 
	`¢d_soc_d≠m_°ªam_evít
(
codec
,

372 
codec_dai
->
ˇ±uª
.
°ªam_«me
,

373 
SND_SOC_DAPM_STREAM_START
);

375 i‡(
codec
->
d≠m_evít
)

376 
codec
->
	`d≠m_evít
(codec, 
SNDRV_CTL_POWER_D0
);

377 i‡(
codec_dai
->
dai_›s
.
digôÆ_muã
)

378 
codec_dai
->
dai_›s
.
	`digôÆ_muã
(codec_dai, 0);

382 i‡(
sub°ªam
->
°ªam
 =
SNDRV_PCM_STREAM_PLAYBACK
)

383 
	`¢d_soc_d≠m_°ªam_evít
(
codec
,

384 
codec_dai
->
∂ayback
.
°ªam_«me
,

385 
SND_SOC_DAPM_STREAM_START
);

387 
	`¢d_soc_d≠m_°ªam_evít
(
codec
,

388 
codec_dai
->
ˇ±uª
.
°ªam_«me
,

389 
SND_SOC_DAPM_STREAM_START
);

390 i‡(
codec_dai
->
dai_›s
.
digôÆ_muã
)

391 
codec_dai
->
dai_›s
.
	`digôÆ_muã
(codec_dai, 0);

395 
out
:

396 
	`muãx_u∆ock
(&
pcm_muãx
);

397  
ªt
;

398 
	}
}

405 
	$soc_pcm_hw_∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

406 
¢d_pcm_hw_∑øms
 *
∑øms
)

408 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

409 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

410 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

411 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

412 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

413 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

414 
ªt
 = 0;

416 
	`__D
("\n");

418 
	`muãx_lock
(&
pcm_muãx
);

420 i‡(
machöe
->
›s
 && machöe->›s->
hw_∑øms
) {

421 i‡((
ªt
 = 
machöe
->
›s
->
	`hw_∑øms
(
sub°ªam
, 
∑øms
)) < 0) {

422 
	`__E
("asoc: machine hw_params failed\n");

423 
out
;

427 i‡(
codec_dai
->
›s
.
hw_∑øms
) {

428 i‡((
ªt
 = 
codec_dai
->
›s
.
	`hw_∑øms
(
sub°ªam
, 
∑øms
)) < 0) {

429 
	`__E
("asoc: c™'à£àcode¯%†hwÖ¨ams\n", 
codec_dai
->
«me
);

430 
codec_îr
;

434 i‡(
˝u_dai
->
›s
.
hw_∑øms
) {

435 i‡((
ªt
 = 
˝u_dai
->
›s
.
	`hw_∑øms
(
sub°ªam
, 
∑øms
)) < 0) {

436 
	`__E
("asoc: c™'à£àöãrÁ˚ %†hwÖ¨ams\n", 
˝u_dai
->
«me
);

437 
öãrÁ˚_îr
;

441 i‡(
∂©f‹m
->
pcm_›s
->
hw_∑øms
) {

442 i‡((
ªt
 = 
∂©f‹m
->
pcm_›s
->
	`hw_∑øms
(
sub°ªam
, 
∑øms
)) < 0) {

443 
	`__E
("asoc: c™'à£à∂©f‹m %†hwÖ¨ams\n", 
∂©f‹m
->
«me
);

444 
∂©f‹m_îr
;

448 
∂©f‹m_îr
:

449 i‡(
˝u_dai
->
›s
.
hw_‰ì
)

450 
˝u_dai
->
›s
.
	`hw_‰ì
(
sub°ªam
);

452 
öãrÁ˚_îr
:

453 i‡(
codec_dai
->
›s
.
hw_‰ì
)

454 
codec_dai
->
›s
.
	`hw_‰ì
(
sub°ªam
);

456 
codec_îr
:

457 if(
machöe
->
›s
 && machöe->›s->
hw_‰ì
)

458 
machöe
->
›s
->
	`hw_‰ì
(
sub°ªam
);

460 
out
:

461 
	`muãx_u∆ock
(&
pcm_muãx
);

462  
ªt
;

463 
	}
}

468 
	$soc_pcm_hw_‰ì
(
¢d_pcm_sub°ªam
 *
sub°ªam
)

470 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

471 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

472 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

473 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

474 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

475 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

476 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

478 
	`__D
("\n");

480 
	`muãx_lock
(&
pcm_muãx
);

483 i‡(!
codec
->
a˘ive
 && 
codec_dai
->
dai_›s
.
digôÆ_muã
)

484 
codec_dai
->
dai_›s
.
	`digôÆ_muã
(codec_dai, 1);

487 i‡(
machöe
->
›s
 && machöe->›s->
hw_‰ì
)

488 
machöe
->
›s
->
	`hw_‰ì
(
sub°ªam
);

491 i‡(
∂©f‹m
->
pcm_›s
->
hw_‰ì
)

492 
∂©f‹m
->
pcm_›s
->
	`hw_‰ì
(
sub°ªam
);

495 i‡(
codec_dai
->
›s
.
hw_‰ì
)

496 
codec_dai
->
›s
.
	`hw_‰ì
(
sub°ªam
);

498 i‡(
˝u_dai
->
›s
.
hw_‰ì
)

499 
˝u_dai
->
›s
.
	`hw_‰ì
(
sub°ªam
);

501 
	`muãx_u∆ock
(&
pcm_muãx
);

503 
	}
}

505 
	$soc_pcm_åiggî
(
¢d_pcm_sub°ªam
 *
sub°ªam
, 
cmd
)

507 
¢d_soc_pcm_ru¡ime
 *
πd
 = 
sub°ªam
->
¥iv©e_d©a
;

508 
¢d_soc_devi˚
 *
socdev
 = 
πd
->socdev;

509 
¢d_soc_dai_lök
 *
machöe
 = 
πd
->
dai
;

510 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

511 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->cpu_dai;

512 
¢d_soc_codec_dai
 *
codec_dai
 = 
machöe
->codec_dai;

513 
ªt
;

515 
	`__D
("\n");

517 i‡(
codec_dai
->
›s
.
åiggî
) {

518 i‡((
ªt
 = 
codec_dai
->
›s
.
	`åiggî
(
sub°ªam
, 
cmd
)) < 0)

519  
ªt
;

522 i‡(
∂©f‹m
->
pcm_›s
->
åiggî
) {

523 i‡((
ªt
 = 
∂©f‹m
->
pcm_›s
->
	`åiggî
(
sub°ªam
, 
cmd
)) < 0)

524  
ªt
;

527 i‡(
˝u_dai
->
›s
.
åiggî
) {

528 i‡((
ªt
 = 
˝u_dai
->
›s
.
	`åiggî
(
sub°ªam
, 
cmd
)) < 0)

529  
ªt
;

532 
	}
}

535 
¢d_pcm_›s
 
	gsoc_pcm_›s
 = {

536 .
›í
 = 
soc_pcm_›í
,

537 .
	g˛o£
 = 
soc_codec_˛o£
,

538 .
	ghw_∑øms
 = 
soc_pcm_hw_∑øms
,

539 .
	ghw_‰ì
 = 
soc_pcm_hw_‰ì
,

540 .
	g¥ï¨e
 = 
soc_pcm_¥ï¨e
,

541 .
	gåiggî
 = 
soc_pcm_åiggî
,

545 
	$soc_√w_pcm
(
¢d_soc_devi˚
 *
socdev
,

546 
¢d_soc_dai_lök
 *
dai_lök
, 
num
)

548 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

549 
¢d_soc_codec_dai
 *
codec_dai
 = 
dai_lök
->codec_dai;

550 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
dai_lök
->cpu_dai;

551 
¢d_soc_pcm_ru¡ime
 *
πd
;

552 
¢d_pcm
 *
pcm
;

553 
√w_«me
[64];

554 
ªt
 = 0, 
∂ayback
 = 0, 
ˇ±uª
 = 0;

556 
	`__D
("\n");

558 i‡((
πd
 = 
	`kzÆloc
((
¢d_soc_pcm_ru¡ime
), 
GFP_KERNEL
)Ë=
NULL
)

559  -
ENOMEM
;

561 
πd
->
dai
 = 
dai_lök
;

562 
πd
->
socdev
 = socdev;

563 
codec_dai
->
codec
 = 
socdev
->codec;

566 
	`•rötf
(
√w_«me
, "%†%s-%s-%d",
dai_lök
->
°ªam_«me
, 
codec_dai
->
«me
, 
	`gë_dai_«me
(
˝u_dai
->
ty≥
), 
num
);

568 i‡(
codec_dai
->
∂ayback
.
ch™√ls_mö
)

569 
∂ayback
 = 1;

570 i‡(
codec_dai
->
ˇ±uª
.
ch™√ls_mö
)

571 
ˇ±uª
 = 1;

573 i‡((
ªt
 = 
	`¢d_pcm_√w
(
codec
->
ˇrd
, 
√w_«me
, codec->
pcm_devs
++, 
∂ayback
, 
ˇ±uª
, &
pcm
)) < 0) {

574 
	`__E
("asoc: c™'à¸óãÖcm f‹ code¯%s\n", 
codec
->
«me
);

575 
	`k‰ì
(
πd
);

576  
ªt
;

579 
pcm
->
¥iv©e_d©a
 = 
πd
;

580 
soc_pcm_›s
.
mm≠
 = 
socdev
->
∂©f‹m
->
pcm_›s
->mmap;

581 
soc_pcm_›s
.
poöãr
 = 
socdev
->
∂©f‹m
->
pcm_›s
->pointer;

582 
soc_pcm_›s
.
io˘l
 = 
socdev
->
∂©f‹m
->
pcm_›s
->ioctl;

583 
soc_pcm_›s
.
c›y
 = 
socdev
->
∂©f‹m
->
pcm_›s
->copy;

584 
soc_pcm_›s
.
sûí˚
 = 
socdev
->
∂©f‹m
->
pcm_›s
->silence;

585 
soc_pcm_›s
.
ack
 = 
socdev
->
∂©f‹m
->
pcm_›s
->ack;

586 
soc_pcm_›s
.
∑ge
 = 
socdev
->
∂©f‹m
->
pcm_›s
->page;

588 i‡(
∂ayback
)

589 
	`¢d_pcm_£t_›s
(
pcm
, 
SNDRV_PCM_STREAM_PLAYBACK
, &
soc_pcm_›s
);

591 i‡(
ˇ±uª
)

592 
	`¢d_pcm_£t_›s
(
pcm
, 
SNDRV_PCM_STREAM_CAPTURE
, &
soc_pcm_›s
);

594 i‡((
ªt
 = 
socdev
->
∂©f‹m
->
	`pcm_√w
(
codec
->
ˇrd
, 
codec_dai
, 
pcm
)) < 0) {

595 
	`__E
("asoc:ÖlatformÖcm constructor failed\n");

596 
	`k‰ì
(
πd
);

597  
ªt
;

600 
pcm
->
¥iv©e_‰ì
 = 
socdev
->
∂©f‹m
->
pcm_‰ì
;

601 
	`__I
("asoc: %†<-> %†m≠pög ok\n", 
codec_dai
->
«me
, 
˝u_dai
->name);

602  
ªt
;

603 
	}
}

606 
ssize_t
 
	$codec_ªg_show
(
devi˚
 *
dev
,

607 
devi˚_©åibuã
 *
©å
, *
buf
)

609 
¢d_soc_devi˚
 *
devd©a
 = 
	`dev_gë_drvd©a
(
dev
);

610 
¢d_soc_codec
 *
codec
 = 
devd©a
->codec;

611 
i
, 
°ï
 = 1, 
cou¡
 = 0;

613 
	`__D
("\n");

615 i‡(!
codec
->
ªg_ˇche_size
)

618 i‡(
codec
->
ªg_ˇche_°ï
)

619 
°ï
 = 
codec
->
ªg_ˇche_°ï
;

621 
cou¡
 +
	`•rötf
(
buf
, "%†ªgi°îs\n", 
codec
->
«me
);

622 
i
 = 0; i < 
codec
->
ªg_ˇche_size
; i +
°ï
)

623 
cou¡
 +
	`•rötf
(
buf
 + cou¡, "%2x: %4x\n", 
i
, 
codec
->
	`ªad
(codec, i));

625  
cou¡
;

626 
	}
}

628 
DEVICE_ATTR
(
codec_ªg
, 0444, 
codec_ªg_show
, 
NULL
);

638 
	$¢d_soc_√w_ac97_codec
(
¢d_soc_codec
 *
codec
,

639 
¢d_ac97_bus_›s
 *
›s
, 
num
)

641 
	`__D
("\n");

643 
	`muãx_lock
(&
codec
->
muãx
);

645 i‡((
codec
->
ac97
 = 
	`kzÆloc
((
¢d_ac97
), 
GFP_KERNEL
)Ë=
NULL
)

646 
îr1
;

648 i‡((
codec
->
ac97
->
bus
 = 
	`kzÆloc
((
¢d_ac97_bus
), 
GFP_KERNEL
)Ë=
NULL
)

649 
îr2
;

651 
codec
->
ac97
->
bus
->
›s
 = ops;

652 
codec
->
ac97
->
num
 =Çum;

653 
	`muãx_u∆ock
(&
codec
->
muãx
);

656 
îr2
:

657 
	`k‰ì
(
codec
->
ac97
);

658 
codec
->
ac97
 = 
NULL
;

660 
îr1
:

661 
	`muãx_u∆ock
(&
codec
->
muãx
);

662  -
ENOMEM
;

663 
	}
}

664 
EXPORT_SYMBOL_GPL
(
¢d_soc_√w_ac97_codec
);

672 
	$¢d_soc_‰ì_ac97_codec
(
¢d_soc_codec
 *
codec
)

674 
	`__D
("\n");

676 
	`muãx_lock
(&
codec
->
muãx
);

677 
	`k‰ì
(
codec
->
ac97
->
bus
);

678 
	`k‰ì
(
codec
->
ac97
);

679 
codec
->
ac97
 = 
NULL
;

680 
	`muãx_u∆ock
(&
codec
->
muãx
);

681 
	}
}

682 
EXPORT_SYMBOL_GPL
(
¢d_soc_‰ì_ac97_codec
);

695 
	$¢d_soc_upd©e_bôs
(
¢d_soc_codec
 *
codec
, 
ªg
,

696 
mask
, 
vÆue
)

698 
ch™ge
;

699 
ﬁd
, 
√w
;

701 
	`__D
("\n");

703 
	`muãx_lock
(&
io_muãx
);

704 
ﬁd
 = 
	`¢d_soc_ªad
(
codec
, 
ªg
);

705 
√w
 = (
ﬁd
 & ~
mask
Ë| 
vÆue
;

706 
ch™ge
 = 
ﬁd
 !
√w
;

707 i‡(
ch™ge
)

708 
	`¢d_soc_wrôe
(
codec
, 
ªg
, 
√w
);

710 
	`muãx_u∆ock
(&
io_muãx
);

711  
ch™ge
;

712 
	}
}

713 
EXPORT_SYMBOL_GPL
(
¢d_soc_upd©e_bôs
);

727 
	$¢d_soc_ã°_bôs
(
¢d_soc_codec
 *
codec
, 
ªg
,

728 
mask
, 
vÆue
)

730 
ch™ge
;

731 
ﬁd
, 
√w
;

733 
	`__D
("\n");

735 
	`muãx_lock
(&
io_muãx
);

736 
ﬁd
 = 
	`¢d_soc_ªad
(
codec
, 
ªg
);

737 
√w
 = (
ﬁd
 & ~
mask
Ë| 
vÆue
;

738 
ch™ge
 = 
ﬁd
 !
√w
;

739 
	`muãx_u∆ock
(&
io_muãx
);

741  
ch™ge
;

742 
	}
}

743 
EXPORT_SYMBOL_GPL
(
¢d_soc_ã°_bôs
);

753 
	$¢d_soc_√w_pcms
(
¢d_soc_devi˚
 *
socdev
, 
idx
, c⁄° *
xid
)

755 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

756 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

757 
ªt
 = 0, 
i
;

759 
	`__D
("\n");

761 
	`muãx_lock
(&
codec
->
muãx
);

764 i‡((
codec
->
ˇrd
 = 
	`¢d_ˇrd_√w
(
idx
, 
xid
, codec->
ow√r
, 0)Ë=
NULL
) {

765 
	`__E
("asoc: can't create sound card for codec %s\n",

766 
codec
->
«me
);

767 
	`muãx_u∆ock
(&
codec
->
muãx
);

768  -
ENODEV
;

771 
codec
->
ˇrd
->
dev
 = 
socdev
->dev;

772 
codec
->
ˇrd
->
¥iv©e_d©a
 = codec;

773 
	`¢¥ötf
(
codec
->
ˇrd
->
drivî
, (codec->ˇrd->drivî), "%s", codec->
«me
);

776 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

777 i‡((
ªt
 = 
	`soc_√w_pcm
(
socdev
, &
machöe
->
dai_lök
[
i
], i)) < 0) {

778 
	`__E
("asoc: c™'à¸óãÖcm %s\n", 
machöe
->
dai_lök
[
i
].
°ªam_«me
);

779 
	`muãx_u∆ock
(&
codec
->
muãx
);

780  
ªt
;

784 
	`muãx_u∆ock
(&
codec
->
muãx
);

785  
ªt
;

786 
	}
}

787 
EXPORT_SYMBOL_GPL
(
¢d_soc_√w_pcms
);

798 
	$¢d_soc_ªgi°î_ˇrd
(
¢d_soc_devi˚
 *
socdev
)

800 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

801 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

802 
ªt
 = 0, 
i
, 
ac97
 = 0, 
îr
 = 0;

804 
	`__D
("\n");

806 
	`muãx_lock
(&
codec
->
muãx
);

807 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

808 i‡(
socdev
->
machöe
->
dai_lök
[
i
].
öô
) {

809 i‡((
îr
 = 
socdev
->
machöe
->
dai_lök
[
i
].
	`öô
(
codec
)) < 0) {

810 
	`__E
("asoc: failedÅo init %s\n",

811 
socdev
->
machöe
->
dai_lök
[
i
].
°ªam_«me
);

815 i‡(
socdev
->
machöe
->
dai_lök
[
i
].
codec_dai
->
ty≥
 =
SND_SOC_DAI_AC97_BUS
)

816 
ac97
 = 1;

818 
	`¢¥ötf
(
codec
->
ˇrd
->
sh‹äame
, (codec->ˇrd->sh‹äame), "%s", 
machöe
->
«me
);

819 
	`¢¥ötf
(
codec
->
ˇrd
->
l⁄g«me
, (codec->ˇrd->l⁄g«me), "%†(%s)", 
machöe
->
«me
, codec->name);

821 i‡((
ªt
 = 
	`¢d_ˇrd_ªgi°î
(
codec
->
ˇrd
)) < 0) {

822 
	`__E
("asoc: faûedÅÿªgi°î soundˇrd f‹ code¯%s\n", 
codec
->
«me
);

823 
out
;

826 i‡((
îr
 = 
	`¢d_soc_d≠m_sys_add
(
socdev
->
dev
)) < 0)

827 
	`__E
("asoc: failedÅoádd dapm sysfsÉntries\n");

829 i‡((
îr
 = 
	`devi˚_¸óã_fûe
(
socdev
->
dev
, &
dev_©å_codec_ªg
)) < 0)

830 
	`__E
("asoc: failedÅoádd codec sysfsÉntries\n");

832 
out
:

833 
	`muãx_u∆ock
(&
codec
->
muãx
);

834  
ªt
;

835 
	}
}

836 
EXPORT_SYMBOL_GPL
(
¢d_soc_ªgi°î_ˇrd
);

845 
	$¢d_soc_‰ì_pcms
(
¢d_soc_devi˚
 *
socdev
)

847 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

849 
	`__D
("\n");

851 
	`muãx_lock
(&
codec
->
muãx
);

853 i‡(
codec
->
ˇrd
)

854 
	`¢d_ˇrd_‰ì
(
codec
->
ˇrd
);

855 
	`devi˚_ªmove_fûe
(
socdev
->
dev
, &
dev_©å_codec_ªg
);

856 
	`muãx_u∆ock
(&
codec
->
muãx
);

857 
	}
}

858 
EXPORT_SYMBOL_GPL
(
¢d_soc_‰ì_pcms
);

868 
	$¢d_soc_£t_ru¡ime_hw∑øms
(
¢d_pcm_sub°ªam
 *
sub°ªam
,

869 c⁄° 
¢d_pcm_h¨dw¨e
 *
hw
)

871 
¢d_pcm_h¨dw¨e
 *
pcm_hw
 = &
sub°ªam
->
ru¡ime
->
hw
;

873 
	`__D
("\n");

875 
pcm_hw
->
öfo
 = 
hw
->info;

876 
pcm_hw
->
f‹m©s
 = 
hw
->formats;

877 
pcm_hw
->
≥riod_byãs_mö
 = 
hw
->period_bytes_min;

878 
pcm_hw
->
≥riod_byãs_max
 = 
hw
->period_bytes_max;

879 
pcm_hw
->
≥riods_mö
 = 
hw
->periods_min;

880 
pcm_hw
->
≥riods_max
 = 
hw
->periods_max;

881 
pcm_hw
->
buf„r_byãs_max
 = 
hw
->buffer_bytes_max;

882 
pcm_hw
->
fifo_size
 = 
hw
->fifo_size;

885 
	}
}

886 
EXPORT_SYMBOL_GPL
(
¢d_soc_£t_ru¡ime_hw∑øms
);

898 
¢d_kc⁄åﬁ
 *
	$¢d_soc_˙ew
(c⁄° 
¢d_kc⁄åﬁ_√w
 *
_ãm∂©e
, *
d©a
, *
l⁄g_«me
)

900 
¢d_kc⁄åﬁ_√w
 
ãm∂©e
;

902 
	`__D
("\n");

904 
	`mem˝y
(&
ãm∂©e
, 
_ãm∂©e
, (template));

905 i‡(
l⁄g_«me
)

906 
ãm∂©e
.
«me
 = 
l⁄g_«me
;

907 
ãm∂©e
.
ac˚ss
 = 
SNDRV_CTL_ELEM_ACCESS_READWRITE
;

908 
ãm∂©e
.
ödex
 = 0;

910  
	`¢d_˘l_√w1
(&
ãm∂©e
, 
d©a
);

911 
	}
}

912 
EXPORT_SYMBOL_GPL
(
¢d_soc_˙ew
);

924 
	$¢d_soc_öfo_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

925 
¢d_˘l_ñem_öfo
 *
uöfo
)

927 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

929 
	`__D
("\n");

931 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_ENUMERATED
;

932 
uöfo
->
cou¡
 = 
e
->
shi·_l
 =e->
shi·_r
 ? 1 : 2;

933 
uöfo
->
vÆue
.
íumî©ed
.
ôems
 = 
e
->
mask
;

935 i‡(
uöfo
->
vÆue
.
íumî©ed
.
ôem
 > 
e
->
mask
 - 1)

936 
uöfo
->
vÆue
.
íumî©ed
.
ôem
 = 
e
->
mask
 - 1;

938 
	`¢¥ötf
(
uöfo
->
vÆue
.
íumî©ed
.
«me
, (uinfo->value.enumerated.name),

939 "%s", 
e
->
ãxts
[
uöfo
->
vÆue
.
íumî©ed
.
ôem
]);

941 
	}
}

942 
EXPORT_SYMBOL_GPL
(
¢d_soc_öfo_íum_doubÀ
);

953 
	$¢d_soc_gë_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

954 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

956 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

957 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

958 
vÆ
, 
bômask
;

960 
	`__D
("\n");

962 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

964 
vÆ
 = 
	`¢d_soc_ªad
(
codec
, 
e
->
ªg
);

965 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] = (
vÆ
 >> 
e
->
shi·_l
Ë& (
bômask
 - 1);

967 i‡(
e
->
shi·_l
 !e->
shi·_r
)

968 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] = (
vÆ
 >> 
e
->
shi·_r
Ë& (
bômask
 - 1);

971 
	}
}

972 
EXPORT_SYMBOL_GPL
(
¢d_soc_gë_íum_doubÀ
);

983 
	$¢d_soc_put_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

984 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

986 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

987 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

988 
vÆ
;

989 
mask
, 
bômask
;

991 
	`__D
("\n");

993 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

995 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] > 
e
->
mask
 - 1)

996  -
EINVAL
;

997 
vÆ
 = 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] << 
e
->
shi·_l
;

998 
mask
 = (
bômask
 - 1Ë<< 
e
->
shi·_l
;

999 i‡(
e
->
shi·_l
 !e->
shi·_r
) {

1000 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] > 
e
->
mask
 - 1)

1001  -
EINVAL
;

1002 
vÆ
 |
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] << 
e
->
shi·_r
;

1003 
mask
 |(
bômask
 - 1Ë<< 
e
->
shi·_r
;

1006  
	`¢d_soc_upd©e_bôs
(
codec
, 
e
->
ªg
, 
mask
, 
vÆ
);

1007 
	}
}

1008 
EXPORT_SYMBOL_GPL
(
¢d_soc_put_íum_doubÀ
);

1020 
	$¢d_soc_öfo_íum_ext
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1021 
¢d_˘l_ñem_öfo
 *
uöfo
)

1023 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

1025 
	`__D
("\n");

1027 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_ENUMERATED
;

1028 
uöfo
->
cou¡
 = 1;

1029 
uöfo
->
vÆue
.
íumî©ed
.
ôems
 = 
e
->
mask
;

1031 i‡(
uöfo
->
vÆue
.
íumî©ed
.
ôem
 > 
e
->
mask
 - 1)

1032 
uöfo
->
vÆue
.
íumî©ed
.
ôem
 = 
e
->
mask
 - 1;

1034 
	`¢¥ötf
(
uöfo
->
vÆue
.
íumî©ed
.
«me
, (uinfo->value.enumerated.name),

1035 "%s", 
e
->
ãxts
[
uöfo
->
vÆue
.
íumî©ed
.
ôem
]);

1037 
	}
}

1038 
EXPORT_SYMBOL_GPL
(
¢d_soc_öfo_íum_ext
);

1049 
	$¢d_soc_öfo_vﬁsw_ext
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1050 
¢d_˘l_ñem_öfo
 *
uöfo
)

1052 
	`__D
("\n");

1054 
uöfo
->
cou¡
 = 1;

1055 
uöfo
->
vÆue
.
öãgî
.
mö
 = 0;

1056 
uöfo
->
vÆue
.
öãgî
.
max
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
;

1058 i‡(
uöfo
->
vÆue
.
öãgî
.
max
 == 1)

1059 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_BOOLEAN
;

1061 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_INTEGER
;

1064 
	}
}

1065 
EXPORT_SYMBOL_GPL
(
¢d_soc_öfo_vﬁsw_ext
);

1076 
	$¢d_soc_öfo_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1077 
¢d_˘l_ñem_öfo
 *
uöfo
)

1079 
vÆ
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
;

1081 
	`__D
("\n");

1083 i‡(((
vÆ
 >> 8) & 0x0f) == ((val >> 12) & 0x0f))

1084 
uöfo
->
cou¡
 = 1;

1086 
uöfo
->
cou¡
 = 2;

1088 
uöfo
->
vÆue
.
öãgî
.
mö
 = 0;

1089 
uöfo
->
vÆue
.
öãgî
.
max
 = (
vÆ
 >> 16) & 0xff;

1091 i‡(
uöfo
->
vÆue
.
öãgî
.
max
 == 1)

1092 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_BOOLEAN
;

1094 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_INTEGER
;

1097 
	}
}

1098 
EXPORT_SYMBOL_GPL
(
¢d_soc_öfo_vﬁsw
);

1109 
	$¢d_soc_gë_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1110 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1112 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1114 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1115 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1116 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1117 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1118 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1120 
	`__D
("\n");

1122 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1123 (
	`¢d_soc_ªad
(
codec
, 
ªg
Ë>> 
shi·
Ë& 
mask
;

1124 i‡(
shi·
 !
rshi·
)

1125 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1126 (
	`¢d_soc_ªad
(
codec
, 
ªg
Ë>> 
rshi·
Ë& 
mask
;

1127 i‡(
övît
) {

1128 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1129 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

1130 i‡(
shi·
 !
rshi·
)

1131 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1132 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1];

1136 
	}
}

1137 
EXPORT_SYMBOL_GPL
(
¢d_soc_gë_vﬁsw
);

1148 
	$¢d_soc_put_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1149 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1151 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1152 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1153 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1154 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1155 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1156 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1157 
îr
;

1158 
vÆ
, 
vÆ2
, 
vÆ_mask
;

1160 
	`__D
("\n");

1162 
vÆ
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] & 
mask
);

1163 i‡(
övît
)

1164 
vÆ
 = 
mask
 - val;

1165 
vÆ_mask
 = 
mask
 << 
shi·
;

1166 
vÆ
 = vÆ << 
shi·
;

1167 i‡(
shi·
 !
rshi·
) {

1168 
vÆ2
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[1] & 
mask
);

1169 i‡(
övît
)

1170 
vÆ2
 = 
mask
 - val2;

1171 
vÆ_mask
 |
mask
 << 
rshi·
;

1172 
vÆ
 |
vÆ2
 << 
rshi·
;

1174 
îr
 = 
	`¢d_soc_upd©e_bôs
(
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
);

1175  
îr
;

1176 
	}
}

1177 
EXPORT_SYMBOL_GPL
(
¢d_soc_put_vﬁsw
);

1189 
	$¢d_soc_öfo_vﬁsw_2r
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1190 
¢d_˘l_ñem_öfo
 *
uöfo
)

1192 
	`__D
("\n");

1194 
uöfo
->
cou¡
 = 2;

1195 
uöfo
->
vÆue
.
öãgî
.
mö
 = 0;

1196 
uöfo
->
vÆue
.
öãgî
.
max
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0xff;

1198 i‡(
uöfo
->
vÆue
.
öãgî
.
max
 == 1)

1199 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_BOOLEAN
;

1201 
uöfo
->
ty≥
 = 
SNDRV_CTL_ELEM_TYPE_INTEGER
;

1204 
	}
}

1205 
EXPORT_SYMBOL_GPL
(
¢d_soc_öfo_vﬁsw_2r
);

1216 
	$¢d_soc_gë_vﬁsw_2r
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1217 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1219 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1220 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1221 
ªg2
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0xff;

1222 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1223 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0xff;

1224 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 20) & 0x01;

1226 
	`__D
("\n");

1228 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1229 (
	`¢d_soc_ªad
(
codec
, 
ªg
Ë>> 
shi·
Ë& 
mask
;

1230 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1231 (
	`¢d_soc_ªad
(
codec
, 
ªg2
Ë>> 
shi·
Ë& 
mask
;

1232 i‡(
övît
) {

1233 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1234 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

1235 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1236 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1];

1240 
	}
}

1241 
EXPORT_SYMBOL_GPL
(
¢d_soc_gë_vﬁsw_2r
);

1252 
	$¢d_soc_put_vﬁsw_2r
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1253 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1255 
¢d_soc_codec
 *
codec
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1256 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1257 
ªg2
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0xff;

1258 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1259 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0xff;

1260 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 20) & 0x01;

1261 
îr
;

1262 
vÆ
, 
vÆ2
, 
vÆ_mask
;

1264 
	`__D
("\n");

1266 
vÆ_mask
 = 
mask
 << 
shi·
;

1267 
vÆ
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] & 
mask
);

1268 
vÆ2
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[1] & 
mask
);

1270 i‡(
övît
) {

1271 
vÆ
 = 
mask
 - val;

1272 
vÆ2
 = 
mask
 - val2;

1275 
vÆ
 = vÆ << 
shi·
;

1276 
vÆ2
 = vÆ2 << 
shi·
;

1278 i‡((
îr
 = 
	`¢d_soc_upd©e_bôs
(
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
)) < 0)

1279  
îr
;

1281 
îr
 = 
	`¢d_soc_upd©e_bôs
(
codec
, 
ªg2
, 
vÆ_mask
, 
vÆ2
);

1282  
îr
;

1283 
	}
}

1284 
EXPORT_SYMBOL_GPL
(
¢d_soc_put_vﬁsw_2r
);

1286 #ifde‡
CONFIG_PM


1288 
	$soc_su•íd
(
∂©f‹m_devi˚
 *
pdev
, 
pm_mesßge_t
 
°©e
)

1290 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1291 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

1292 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

1293 
¢d_soc_codec_devi˚
 *
codec_dev
 = 
socdev
->codec_dev;

1294 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1295 *
°ªam
 = 
NULL
;

1296 
i
;

1298 
	`__D
("\n");

1301 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1302 
¢d_soc_codec_dai
 *
dai
 = 
machöe
->
dai_lök
[
i
].
codec_dai
;

1303 i‡(
dai
->
dai_›s
.
digôÆ_muã
 && dai->
∂ayback
.
a˘ive
)

1304 
dai
->
dai_›s
.
	`digôÆ_muã
(dai, 1);

1307 i‡(
machöe
->
su•íd_¥e
)

1308 
machöe
->
	`su•íd_¥e
(
pdev
, 
°©e
);

1310 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1311 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1312 i‡(
˝u_dai
->
su•íd
 && cpu_dai->
ty≥
 !
SND_SOC_DAI_AC97
)

1313 
˝u_dai
->
	`su•íd
(
pdev
, cpu_dai);

1314 i‡(
∂©f‹m
->
su•íd
)

1315 
∂©f‹m
->
	`su•íd
(
pdev
, 
˝u_dai
);

1319 
	`run_dñayed_w‹k
(&
socdev
->
dñayed_w‹k
);

1320 
codec
->
su•íd_d≠m_°©e
 = codec->
d≠m_°©e
;

1322 
i
 = 0; i < 
codec
->
num_dai
; i++) {

1323 i‡((
°ªam
 = 
codec
->
dai
[
i
].
∂ayback
.
°ªam_«me
)!
NULL
)

1324 
	`¢d_soc_d≠m_°ªam_evít
(
codec
, 
°ªam
, 
SND_SOC_DAPM_STREAM_SUSPEND
);

1325 i‡((
°ªam
 = 
codec
->
dai
[
i
].
ˇ±uª
.
°ªam_«me
)!
NULL
)

1326 
	`¢d_soc_d≠m_°ªam_evít
(
codec
, 
°ªam
, 
SND_SOC_DAPM_STREAM_SUSPEND
);

1329 i‡(
codec_dev
->
su•íd
)

1330 
codec_dev
->
	`su•íd
(
pdev
, 
°©e
);

1332 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1333 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1334 i‡(
˝u_dai
->
su•íd
 && cpu_dai->
ty≥
 =
SND_SOC_DAI_AC97
)

1335 
˝u_dai
->
	`su•íd
(
pdev
, cpu_dai);

1338 i‡(
machöe
->
su•íd_po°
)

1339 
machöe
->
	`su•íd_po°
(
pdev
, 
°©e
);

1342 
	}
}

1345 
	$soc_ªsume
(
∂©f‹m_devi˚
 *
pdev
)

1347 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1348 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

1349 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

1350 
¢d_soc_codec_devi˚
 *
codec_dev
 = 
socdev
->codec_dev;

1351 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1352 *
°ªam
 = 
NULL
;

1353 
i
;

1355 
	`__D
("\n");

1357 if(
machöe
->
ªsume_¥e
Ëmachöe->
	`ªsume_¥e
(
pdev
);

1359 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1360 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1361 i‡(
˝u_dai
->
ªsume
 && cpu_dai->
ty≥
 =
SND_SOC_DAI_AC97
)

1362 
˝u_dai
->
	`ªsume
(
pdev
, cpu_dai);

1365 if(
codec_dev
->
ªsume
Ëcodec_dev->
	`ªsume
(
pdev
);

1367 
i
 = 0; i < 
codec
->
num_dai
; i++) {

1368 if((
°ªam
 = 
codec
->
dai
[
i
].
∂ayback
.
°ªam_«me
)!
NULL
)

1369 
	`¢d_soc_d≠m_°ªam_evít
(
codec
, 
°ªam
, 
SND_SOC_DAPM_STREAM_RESUME
);

1370 i‡((
°ªam
 = 
codec
->
dai
[
i
].
ˇ±uª
.
°ªam_«me
)!
NULL
)

1371 
	`¢d_soc_d≠m_°ªam_evít
(
codec
, 
°ªam
, 
SND_SOC_DAPM_STREAM_RESUME
);

1375 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1376 
¢d_soc_codec_dai
 *
dai
 = 
machöe
->
dai_lök
[
i
].
codec_dai
;

1377 i‡(
dai
->
dai_›s
.
digôÆ_muã
 && dai->
∂ayback
.
a˘ive
)

1378 
dai
->
dai_›s
.
	`digôÆ_muã
(dai, 0);

1381 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1382 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1383 i‡(
˝u_dai
->
ªsume
 && cpu_dai->
ty≥
 !
SND_SOC_DAI_AC97
)

1384 
˝u_dai
->
	`ªsume
(
pdev
, cpu_dai);

1385 i‡(
∂©f‹m
->
ªsume
)

1386 
∂©f‹m
->
	`ªsume
(
pdev
, 
˝u_dai
);

1389 i‡(
machöe
->
ªsume_po°
)

1390 
machöe
->
	`ªsume_po°
(
pdev
);

1393 
	}
}

1396 
	#soc_su•íd
 
NULL


	)

1397 
	#soc_ªsume
 
NULL


	)

1401 
	$soc_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

1403 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1404 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

1405 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

1406 
¢d_soc_codec_devi˚
 *
codec_dev
 = 
socdev
->codec_dev;

1408 
ªt
 = 0, 
i
;

1410 
	`__D
("\n");

1412 if(
machöe
->
¥obe
 && (
ªt
 = machöe->
	`¥obe
(
pdev
)) < 0) {

1413  
ªt
;

1416 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1417 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1418 if(
˝u_dai
->
¥obe
 && (
ªt
 = cpu_dai->
	`¥obe
(
pdev
)) < 0) {

1419 
˝u_dai_îr
;

1423 if(
codec_dev
->
¥obe
 && (
ªt
 = codec_dev->
	`¥obe
(
pdev
)) < 0) {

1424 
˝u_dai_îr
;

1427 if(
∂©f‹m
->
¥obe
 && (
ªt
 =Öœtf‹m->
	`¥obe
(
pdev
)) < 0) {

1428 
∂©f‹m_îr
;

1432 
	`INIT_DELAYED_WORK
(&
socdev
->
dñayed_w‹k
, 
˛o£_dñayed_w‹k
);

1435 
∂©f‹m_îr
:

1436 if(
codec_dev
->
ªmove
Ëcodec_dev->
	`ªmove
(
pdev
);

1438 
˝u_dai_îr
:

1439 
i
--; i >= 0; i--) {

1440 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1441 if(
˝u_dai
->
ªmove
Ë˝u_dai->
	`ªmove
(
pdev
);

1444 if(
machöe
->
ªmove
Ëmachöe->
	`ªmove
(
pdev
);

1446  
ªt
;

1447 
	}
}

1450 
	$soc_ªmove
(
∂©f‹m_devi˚
 *
pdev
)

1452 
¢d_soc_devi˚
 *
socdev
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

1453 
¢d_soc_machöe
 *
machöe
 = 
socdev
->machine;

1454 
¢d_soc_∂©f‹m
 *
∂©f‹m
 = 
socdev
->platform;

1455 
¢d_soc_codec_devi˚
 *
codec_dev
 = 
socdev
->codec_dev;

1456 
i
;

1458 
	`__D
("\n");

1460 
	`run_dñayed_w‹k
(&
socdev
->
dñayed_w‹k
);

1462 i‡(
∂©f‹m
->
ªmove
)

1463 
∂©f‹m
->
	`ªmove
(
pdev
);

1465 i‡(
codec_dev
->
ªmove
)

1466 
codec_dev
->
	`ªmove
(
pdev
);

1468 
i
 = 0; i < 
machöe
->
num_löks
; i++) {

1469 
¢d_soc_˝u_dai
 *
˝u_dai
 = 
machöe
->
dai_lök
[
i
].cpu_dai;

1470 i‡(
˝u_dai
->
ªmove
)

1471 
˝u_dai
->
	`ªmove
(
pdev
);

1474 i‡(
machöe
->
ªmove
)

1475 
machöe
->
	`ªmove
(
pdev
);

1478 
	}
}

1481 
∂©f‹m_drivî
 
	gsoc_drivî
 = {

1482 .
drivî
 = {

1483 .
«me
 = "soc-audio",

1485 .
	g¥obe
 = 
soc_¥obe
,

1486 .
	gªmove
 = 
soc_ªmove
,

1487 .
	gsu•íd
 = 
soc_su•íd
,

1488 .
	gªsume
 = 
soc_ªsume
,

1491 
__devöô
 
	$¢d_soc_öô
()

1493 
	`__D
("\n");

1495 
	`__I
("ASoC vîsi⁄ %s\n", 
SND_SOC_VERSION
);

1496  
	`∂©f‹m_drivî_ªgi°î
(&
soc_drivî
);

1497 
	}
}

1499 
	$¢d_soc_exô
()

1501 
	`__D
("\n");

1503 
	`∂©f‹m_drivî_uƒegi°î
(&
soc_drivî
);

1504 
	}
}

1506 
moduÀ_öô
(
¢d_soc_öô
);

1507 
moduÀ_exô
(
¢d_soc_exô
);

1510 
MODULE_AUTHOR
("Liam Girdwood,Üiam.girdwood@wolfsonmicro.com, www.wolfsonmicro.com");

1511 
MODULE_DESCRIPTION
("ALSA SoC Core");

1512 
MODULE_LICENSE
("GPL");

	@soc-dapm.c

1 
	#LOG_TAG
 "soc-d≠m.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

42 
	~<löux/moduÀ.h
>

43 
	~<löux/moduÀ∑øm.h
>

44 
	~<löux/öô.h
>

45 
	~<löux/dñay.h
>

46 
	~<löux/pm.h
>

47 
	~<löux/bô›s.h
>

48 
	~<löux/∂©f‹m_devi˚.h
>

49 
	~<löux/jiffõs.h
>

50 
	~<sound/drivî.h
>

51 
	~<sound/c‹e.h
>

52 
	~<sound/pcm.h
>

53 
	~<sound/pcm_∑øms.h
>

54 
	~<sound/soc-d≠m.h
>

55 
	~<sound/öôvÆ.h
>

58 
	#DAPM_DEBUG
 0

	)

59 #i‡
DAPM_DEBUG


60 
	#dump_d≠m
(
codec
, 
a˘i⁄
Ë
	`dbg_dump_d≠m
(codec,á˘i⁄)

	)

61 
	#dbg
(
f‹m©
, 
¨g
...Ë
	`¥ötk
(f‹m©, ##árg)

	)

63 
	#dump_d≠m
(
codec
, 
a˘i⁄
)

	)

64 
	#dbg
(
f‹m©
, 
¨g
...)

	)

67 
	#POP_DEBUG
 0

	)

68 #i‡
POP_DEBUG


69 
	#POP_TIME
 500

	)

70 
	#p›_waô
(
time
Ë
	`scheduÀ_timeout_unöãºu±ibÀ
(
	`m£cs_to_jiffõs
—ime))

	)

71 
	#p›_dbg
(
f‹m©
, 
¨g
...Ë
	`¥ötk
(f‹m©, ##árg); 
	`p›_waô
(
POP_TIME
)

	)

73 
	#p›_dbg
(
f‹m©
, 
¨g
...)

	)

74 
	#p›_waô
(
time
)

	)

78 
	gd≠m_up_£q
[] = {

79 
¢d_soc_d≠m_¥e
, 
¢d_soc_d≠m_micbüs
, 
¢d_soc_d≠m_mic
,

80 
¢d_soc_d≠m_mux
, 
¢d_soc_d≠m_dac
, 
¢d_soc_d≠m_mixî
, 
¢d_soc_d≠m_pga
,

81 
¢d_soc_d≠m_adc
, 
¢d_soc_d≠m_hp
, 
¢d_soc_d≠m_•k
, 
¢d_soc_d≠m_po°


83 
	gd≠m_down_£q
[] = {

84 
¢d_soc_d≠m_¥e
, 
¢d_soc_d≠m_adc
, 
¢d_soc_d≠m_hp
, 
¢d_soc_d≠m_•k
,

85 
¢d_soc_d≠m_pga
, 
¢d_soc_d≠m_mixî
, 
¢d_soc_d≠m_dac
, 
¢d_soc_d≠m_mic
,

86 
¢d_soc_d≠m_micbüs
, 
¢d_soc_d≠m_mux
, 
¢d_soc_d≠m_po°


89 
	gd≠m_°©us
 = 1;

90 
moduÀ_∑øm
(
d≠m_°©us
, , 0);

91 
MODULE_PARM_DESC
(
d≠m_°©us
, "enable DPM sysfsÉntries");

94 
ölöe
 
¢d_soc_d≠m_widgë
 *
	$d≠m_˙ew_widgë
(

95 c⁄° 
¢d_soc_d≠m_widgë
 *
_widgë
)

97 
	`__D
("\n");

99  
	`kmemdup
(
_widgë
, (*_widgë), 
GFP_KERNEL
);

100 
	}
}

103 
	$d≠m_£t_∑th_°©us
(
¢d_soc_d≠m_widgë
 *
w
,

104 
¢d_soc_d≠m_∑th
 *
p
, 
i
)

106 
	`__D
("\n");

108 
w
->
id
) {

109 
¢d_soc_d≠m_swôch
:

110 
¢d_soc_d≠m_mixî
: {

111 
vÆ
;

112 
ªg
 = 
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 & 0xff;

113 
shi·
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 8) & 0x0f;

114 
mask
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 16) & 0xff;

115 
övît
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 24) & 0x01;

117 
vÆ
 = 
	`¢d_soc_ªad
(
w
->
codec
, 
ªg
);

118 
vÆ
 = (vÆ >> 
shi·
Ë& 
mask
;

120 i‡((
övît
 && !
vÆ
) || (!invert && val))

121 
p
->
c⁄√˘
 = 1;

123 
p
->
c⁄√˘
 = 0;

126 
¢d_soc_d≠m_mux
: {

127 
soc_íum
 *
e
 = (soc_íum *)
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
;

128 
vÆ
, 
ôem
, 
bômask
;

130 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

132 
vÆ
 = 
	`¢d_soc_ªad
(
w
->
codec
, 
e
->
ªg
);

133 
ôem
 = (
vÆ
 >> 
e
->
shi·_l
Ë& (
bômask
 - 1);

135 
p
->
c⁄√˘
 = 0;

136 
i
 = 0; i < 
e
->
mask
; i++) {

137 i‡(!(
	`°rcmp
(
p
->
«me
, 
e
->
ãxts
[
i
])Ë&& 
ôem
 == i)

138 
p
->
c⁄√˘
 = 1;

143 
¢d_soc_d≠m_pga
:

144 
¢d_soc_d≠m_ouçut
:

145 
¢d_soc_d≠m_adc
:

146 
¢d_soc_d≠m_öput
:

147 
¢d_soc_d≠m_dac
:

148 
¢d_soc_d≠m_micbüs
:

149 
¢d_soc_d≠m_vmid
:

150 
p
->
c⁄√˘
 = 1;

153 
¢d_soc_d≠m_hp
:

154 
¢d_soc_d≠m_mic
:

155 
¢d_soc_d≠m_•k
:

156 
¢d_soc_d≠m_löe
:

157 
¢d_soc_d≠m_¥e
:

158 
¢d_soc_d≠m_po°
:

159 
p
->
c⁄√˘
 = 0;

162 
	}
}

165 
	$d≠m_c⁄√˘_mux
(
¢d_soc_codec
 *
codec
,

166 
¢d_soc_d≠m_widgë
 *
§c
, ¢d_soc_d≠m_widgë *
de°
,

167 
¢d_soc_d≠m_∑th
 *
∑th
, c⁄° *
c⁄åﬁ_«me
,

168 c⁄° 
¢d_kc⁄åﬁ_√w
 *
kc⁄åﬁ
)

170 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

171 
i
;

173 
	`__D
("\n");

175 
i
 = 0; i < 
e
->
mask
; i++) {

176 i‡(!(
	`°rcmp
(
c⁄åﬁ_«me
, 
e
->
ãxts
[
i
]))) {

177 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

178 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

179 
	`li°_add
(&
∑th
->
li°_sök
, &
de°
->
sour˚s
);

180 
	`__D
("de°->sour˚†«mê%s\n", 
de°
->
«me
);

181 
	`li°_add
(&
∑th
->
li°_sour˚
, &
§c
->
söks
);

182 
	`__D
("§c->sök†«mê%s\n", 
§c
->
«me
);

183 
∑th
->
«me
 = (*)
e
->
ãxts
[
i
];

184 
	`d≠m_£t_∑th_°©us
(
de°
, 
∑th
, 0);

189  -
ENODEV
;

190 
	}
}

193 
	$d≠m_c⁄√˘_mixî
(
¢d_soc_codec
 *
codec
,

194 
¢d_soc_d≠m_widgë
 *
§c
, ¢d_soc_d≠m_widgë *
de°
,

195 
¢d_soc_d≠m_∑th
 *
∑th
, c⁄° *
c⁄åﬁ_«me
)

197 
i
;

199 
	`__D
("\n");

202 
i
 = 0; i < 
de°
->
num_kc⁄åﬁs
; i++) {

203 i‡(!
	`°rcmp
(
c⁄åﬁ_«me
, 
de°
->
kc⁄åﬁs
[
i
].
«me
)) {

204 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

205 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

206 
	`li°_add
(&
∑th
->
li°_sök
, &
de°
->
sour˚s
);

207 
	`__D
("de°->sour˚†«mê%s\n", 
de°
->
«me
);

208 
	`li°_add
(&
∑th
->
li°_sour˚
, &
§c
->
söks
);

209 
	`__D
("§c->sök†«mê%s\n", 
§c
->
«me
);

210 
∑th
->
«me
 = 
de°
->
kc⁄åﬁs
[
i
].name;

211 
	`d≠m_£t_∑th_°©us
(
de°
, 
∑th
, 
i
);

215  -
ENODEV
;

216 
	}
}

219 
	$d≠m_upd©e_bôs
(
¢d_soc_d≠m_widgë
 *
widgë
)

221 
ch™ge
, 
powî
;

222 
ﬁd
,
√w
;

223 
¢d_soc_codec
 *
codec
 = 
widgë
->codec;

225 
	`__D
("\n");

228 i‡(
widgë
->
ªg
 < 0 || widgë->
id
 =
¢d_soc_d≠m_öput
 ||

229 
widgë
->
id
 =
¢d_soc_d≠m_ouçut
 ||

230 
widgë
->
id
 =
¢d_soc_d≠m_hp
 ||

231 
widgë
->
id
 =
¢d_soc_d≠m_mic
 ||

232 
widgë
->
id
 =
¢d_soc_d≠m_löe
 ||

233 
widgë
->
id
 =
¢d_soc_d≠m_•k
)

236 
powî
 = 
widgë
->power;

237 i‡(
widgë
->
övît
)

238 
powî
 = (power ? 0:1);

240 
ﬁd
 = 
	`¢d_soc_ªad
(
codec
, 
widgë
->
ªg
);

241 
√w
 = (
ﬁd
 & ~(0x1 << 
widgë
->
shi·
)Ë| (
powî
 << widget->shift);

243 
ch™ge
 = 
ﬁd
 !
√w
;

244 i‡(
ch™ge
) {

245 
	`p›_dbg
("p›Åe° %†: %†ö %d ms\n", 
widgë
->
«me
,

246 
widgë
->
powî
 ? "⁄" : "off", 
POP_TIME
);

247 
	`¢d_soc_wrôe
(
codec
, 
widgë
->
ªg
, 
√w
);

248 
	`p›_waô
(
POP_TIME
);

251 
	`__D
("ªg old %xÇew %x ch™gê%d\n", 
ﬁd
, 
√w
, 
ch™ge
);

252  
ch™ge
;

253 
	}
}

257 
	$d≠m_£t_pga
(
¢d_soc_d≠m_widgë
 *
widgë
, 
powî
)

259 c⁄° 
¢d_kc⁄åﬁ_√w
 *
k
 = 
widgë
->
kc⁄åﬁs
;

261 
	`__D
("\n");

263 i‡(
widgë
->
muãd
 && !
powî
)

265 i‡(!
widgë
->
muãd
 && 
powî
)

268 i‡(
widgë
->
num_kc⁄åﬁs
 && 
k
) {

269 
ªg
 = 
k
->
¥iv©e_vÆue
 & 0xff;

270 
shi·
 = (
k
->
¥iv©e_vÆue
 >> 8) & 0x0f;

271 
mask
 = (
k
->
¥iv©e_vÆue
 >> 16) & 0xff;

272 
övît
 = (
k
->
¥iv©e_vÆue
 >> 24) & 0x01;

274 i‡(
powî
) {

275 
i
;

277 i‡(
övît
) {

278 
i
 = 
mask
; i > 
widgë
->
ßved_vÆue
; i--)

279 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

281 
i
 = 0; i < 
widgë
->
ßved_vÆue
; i++)

282 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

284 
widgë
->
muãd
 = 0;

287 
vÆ
 = 
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
);

288 
i
 = 
widgë
->
ßved_vÆue
 = (
vÆ
 >> 
shi·
Ë& 
mask
;

289 i‡(
övît
) {

290 ; 
i
 < 
mask
; i++)

291 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

293 ; 
i
 > 0; i--)

294 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

296 
widgë
->
muãd
 = 1;

300 
	}
}

303 
	$d≠m_√w_mixî
(
¢d_soc_codec
 *
codec
,

304 
¢d_soc_d≠m_widgë
 *
w
)

306 
i
, 
ªt
 = 0;

307 
«me
[32];

308 
¢d_soc_d≠m_∑th
 *
∑th
;

310 
	`__D
("\n");

313 
i
 = 0; i < 
w
->
num_kc⁄åﬁs
; i++) {

316 
	`li°_f‹_óch_íåy
(
∑th
, &
w
->
sour˚s
, 
li°_sök
) {

319 i‡(
∑th
->
«me
 !(*)
w
->
kc⁄åﬁs
[
i
].name)

323 
	`¢¥ötf
(
«me
, 32, "%†%s", 
w
->«me, w->
kc⁄åﬁs
[
i
].name);

324 
∑th
->
l⁄g_«me
 = 
	`k°rdup
 (
«me
, 
GFP_KERNEL
);

325 i‡(
∑th
->
l⁄g_«me
 =
NULL
)

326  -
ENOMEM
;

328 
∑th
->
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[
i
], w,

329 
∑th
->
l⁄g_«me
);

330 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
∑th
->
kc⁄åﬁ
)) < 0) {

331 
	`__E
("asoc: failedÅoádd dapm kcontrol %s\n",

332 
∑th
->
l⁄g_«me
);

333 
	`k‰ì
(
∑th
->
l⁄g_«me
);

334 
∑th
->
l⁄g_«me
 = 
NULL
;

335  
ªt
;

339  
ªt
;

340 
	}
}

344 
ölöe
 
	$d≠m_˛ór_wÆk
(
¢d_soc_codec
 *
codec
)

346 
¢d_soc_d≠m_∑th
 *
p
;

348 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

350 
	`li°_f‹_óch_íåy
(
p
, &
codec
->
d≠m_∑ths
, 
li°
)

351 
p
->
wÆked
 = 0;

352 
	}
}

358 
	$is_c⁄√˘ed_ouçut_ï
(
¢d_soc_d≠m_widgë
 *
widgë
)

360 
¢d_soc_d≠m_∑th
 *
∑th
;

361 
c⁄
 = 0;

363 
	`__D
("\n");

365 i‡(
widgë
->
id
 =
¢d_soc_d≠m_adc
 && widgë->
a˘ive
) {

366 
	`__D
("id =¢d_soc_d≠m_ad¯>>>Çamê%s\n", 
widgë
->
«me
);

370 i‡(
widgë
->
c⁄√˘ed
) {

372 i‡(
widgë
->
id
 =
¢d_soc_d≠m_ouçut
 && !widgë->
ext
) {

373 
	`__D
("id =¢d_soc_d≠m_ouçuà>>>Çamê%s\n", 
widgë
->
«me
);

378 i‡(
widgë
->
id
 =
¢d_soc_d≠m_hp
 || widgë->id =
¢d_soc_d≠m_•k
 || widgë->id =
¢d_soc_d≠m_löe
) {

379 
	`__D
("id == snd_soc_dapm_hp || id == snd_soc_dapm_spk || id == snd_soc_dapm_line >>> id=%d,Çame = %s\n",

380 ()
widgë
->
id
, widgë->
«me
);

385 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
söks
, 
li°_sour˚
) {

386 i‡(
∑th
->
wÆked
)

389 i‡(
∑th
->
sök
 &&Ö©h->
c⁄√˘
) {

390 
∑th
->
wÆked
 = 1;

391 
c⁄
 +
	`is_c⁄√˘ed_ouçut_ï
(
∑th
->
sök
);

395  
c⁄
;

396 
	}
}

402 
	$is_c⁄√˘ed_öput_ï
(
¢d_soc_d≠m_widgë
 *
widgë
)

404 
¢d_soc_d≠m_∑th
 *
∑th
;

405 
c⁄
 = 0;

407 
	`__D
("\n");

410 i‡(
widgë
->
id
 =
¢d_soc_d≠m_dac
 && widgë->
a˘ive
) {

411 
	`__D
("id =¢d_soc_d≠m_da¯>>>Çamê%s\n", 
widgë
->
«me
);

415 i‡(
widgë
->
c⁄√˘ed
) {

417 i‡(
widgë
->
id
 =
¢d_soc_d≠m_öput
 && !widgë->
ext
) {

418 
	`__D
("id =¢d_soc_d≠m_öpuà>>>Çamê%s\n", 
widgë
->
«me
);

423 i‡(
widgë
->
id
 =
¢d_soc_d≠m_vmid
) {

424 
	`__D
("id =¢d_soc_d≠m_vmid >>>Çamê%s\n", 
widgë
->
«me
);

429 i‡(
widgë
->
id
 =
¢d_soc_d≠m_mic
 || widgë->id =
¢d_soc_d≠m_löe
) {

430 
	`__D
("id =¢d_soc_d≠m_mi¯|| widgë->id =¢d_soc_d≠m_löê>>>Çamê%s\n", 
widgë
->
«me
);

435 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
sour˚s
, 
li°_sök
) {

436 i‡(
∑th
->
wÆked
)

439 i‡(
∑th
->
sour˚
 &&Ö©h->
c⁄√˘
) {

440 
∑th
->
wÆked
 = 1;

441 
c⁄
 +
	`is_c⁄√˘ed_öput_ï
(
∑th
->
sour˚
);

445  
c⁄
;

446 
	}
}

457 
	$d≠m_powî_widgës
(
¢d_soc_codec
 *
codec
, 
evít
)

459 
¢d_soc_d≠m_widgë
 *
w
;

460 
ö
, 
out
, 
i
, 
c
 = 1, *
£q
 = 
NULL
, 
ªt
 = 0, 
powî_ch™ge
, 
powî
;

462 
	`__D
("\n");

465 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

466 
c
 = 
	`ARRAY_SIZE
(
d≠m_up_£q
);

467 
£q
 = 
d≠m_up_£q
;

468 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

469 
c
 = 
	`ARRAY_SIZE
(
d≠m_down_£q
);

470 
£q
 = 
d≠m_down_£q
;

473 
i
 = 0; i < 
c
; i++) {

474 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

477 i‡(
£q
 && seq[
i
] && 
w
->
id
 != seq[i]) {

478 
	`__D
("i=%d, seq[i]=%d\n", 
i
, 
£q
[i]);

483 i‡(
w
->
id
 =
¢d_soc_d≠m_vmid
) {

484 
	`__D
(">>>>>>>>vmid>>>>w->«mê%s\n", 
w
->
«me
);

489 i‡(
w
->
id
 =
¢d_soc_d≠m_adc
 && w->
a˘ive
) {

490 
	`__D
(">>>>>>>>adc>>>>w->«mê%s\n", 
w
->
«me
);

491 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

492 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

493 
w
->
powî
 = (
ö
 != 0) ? 1 : 0;

494 
	`d≠m_upd©e_bôs
(
w
);

499 i‡(
w
->
id
 =
¢d_soc_d≠m_dac
 && w->
a˘ive
) {

500 
	`__D
(">>>>>>>>dac>>>>w->«mê%s\n", 
w
->
«me
);

501 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

502 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

503 
w
->
powî
 = (
out
 != 0) ? 1 : 0;

504 
	`d≠m_upd©e_bôs
(
w
);

509 i‡(
w
->
id
 =
¢d_soc_d≠m_pga
) {

510 
⁄
;

511 
	`__D
(">>>>>>>>pga>>>>w->«mê%s\n", 
w
->
«me
);

512 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

513 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

514 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

515 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

516 
w
->
powî
 = 
⁄
 = (
out
 !0 && 
ö
 != 0) ? 1 : 0;

518 i‡(!
⁄
)

519 
	`d≠m_£t_pga
(
w
, 
⁄
);

520 
	`d≠m_upd©e_bôs
(
w
);

522 i‡(
⁄
)

523 
	`d≠m_£t_pga
(
w
, 
⁄
);

529 i‡(
w
->
id
 =
¢d_soc_d≠m_¥e
) {

530 
	`__D
(">>>>>>>>¥e>>>>w->«mê%s\n", 
w
->
«me
);

531 i‡(!
w
->
evít
)

534 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

535 i‡((
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMU
)) < 0)

536  
ªt
;

537 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

538 i‡((
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMD
)) < 0)

539  
ªt
;

544 i‡(
w
->
id
 =
¢d_soc_d≠m_po°
) {

545 
	`__D
(">>>>>>>>po°>>>>w->«mê%s\n", 
w
->
«me
);

546 i‡(!
w
->
evít
)

549 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

550 i‡((
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMU
))< 0)

551  
ªt
;

552 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

553 i‡((
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMD
))< 0)

554  
ªt
;

560 
	`__D
(">>>>>>>>>>Ÿhî>>>>>w->«mê%s\n", 
w
->
«me
);

561 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

562 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

563 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

564 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

565 
powî
 = (
out
 !0 && 
ö
 != 0) ? 1 : 0;

566 
powî_ch™ge
 = (
w
->
powî
 ==Öower) ? 0: 1;

567 
w
->
powî
 =Öower;

570 i‡(
powî_ch™ge
) {

571 i‡(
w
->
evít
) {

572 
	`__D
("power %sÉvent for %s flags %x\n",

573 
w
->
powî
 ? "⁄" : "off", w->
«me
, w->
evít_Êags
);

574 i‡(
powî
) {

576 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_PMU
) {

577 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMU
);

578 i‡(
ªt
 < 0)

579  
ªt
;

581 
	`d≠m_upd©e_bôs
(
w
);

582 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_POST_PMU
){

583 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMU
);

584 i‡(
ªt
 < 0)

585  
ªt
;

589 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_PMD
) {

590 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMD
);

591 i‡(
ªt
 < 0)

592  
ªt
;

594 
	`d≠m_upd©e_bôs
(
w
);

595 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_POST_PMD
) {

596 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMD
);

597 i‡(
ªt
 < 0)

598  
ªt
;

603 
	`d≠m_upd©e_bôs
(
w
);

608  
ªt
;

609 
	}
}

611 #i‡
DAPM_DEBUG


612 
	$dbg_dump_d≠m
(
¢d_soc_codec
* 
codec
, c⁄° *
a˘i⁄
)

614 
	`__D
("\n");

616 
¢d_soc_d≠m_widgë
 *
w
;

617 
¢d_soc_d≠m_∑th
 *
p
 = 
NULL
;

618 
ö
, 
out
;

620 
	`__D
("DAPM %†%s\n", 
codec
->
«me
, 
a˘i⁄
);

622 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

625 
w
->
id
) {

626 
¢d_soc_d≠m_¥e
:

627 
¢d_soc_d≠m_po°
:

628 
¢d_soc_d≠m_vmid
:

630 
¢d_soc_d≠m_mux
:

631 
¢d_soc_d≠m_ouçut
:

632 
¢d_soc_d≠m_öput
:

633 
¢d_soc_d≠m_swôch
:

634 
¢d_soc_d≠m_hp
:

635 
¢d_soc_d≠m_mic
:

636 
¢d_soc_d≠m_•k
:

637 
¢d_soc_d≠m_löe
:

638 
¢d_soc_d≠m_micbüs
:

639 
¢d_soc_d≠m_dac
:

640 
¢d_soc_d≠m_adc
:

641 
¢d_soc_d≠m_pga
:

642 
¢d_soc_d≠m_mixî
:

643 i‡(
w
->
«me
) {

644 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

645 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

646 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

647 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

648 
	`__D
("%s: %† i¿%d ouà%d\n", 
w
->
«me
, w->
powî
 ? "On":"Off",
ö
, 
out
);

650 
	`li°_f‹_óch_íåy
(
p
, &
w
->
sour˚s
, 
li°_sök
) {

651 i‡(
p
->
c⁄√˘
)

652 
	`__D
(" i¿ %†%s\n", 
p
->
«me
 ?Ö->«mê: "°©ic",Ö->
sour˚
->name);

654 
	`li°_f‹_óch_íåy
(
p
, &
w
->
söks
, 
li°_sour˚
) {

655 i‡(
p
->
c⁄√˘
)

656 
	`__D
(" ouà%†%s\n", 
p
->
«me
 ?Ö->«mê: "°©ic",Ö->
sök
->name);

662 
	}
}

666 
	$d≠m_mux_upd©e_powî
(
¢d_soc_d≠m_widgë
 *
widgë
,

667 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
, 
mask
,

668 
vÆ
, 
soc_íum
* 
e
)

670 
¢d_soc_d≠m_∑th
 *
∑th
;

671 
found
 = 0;

673 
	`__D
("\n");

675 i‡(
widgë
->
id
 !
¢d_soc_d≠m_mux
)

676  -
ENODEV
;

678 i‡(
	`¢d_soc_ã°_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
) != 0)

682 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
codec
->
d≠m_∑ths
, 
li°
) {

683 i‡(
∑th
->
kc⁄åﬁ
 != kcontrol)

686 i‡(
∑th
->
«me
 =
NULL
 || 
e
->
ãxts
[
vÆ
] == NULL)

689 
found
 = 1;

691 i‡(!(
	`°rcmp
(
∑th
->
«me
, 
e
->
ãxts
[
vÆ
])))

692 
∑th
->
c⁄√˘
 = 1;

694 
∑th
->
c⁄√˘
 = 0;

697 i‡(
found
)

698 
	`d≠m_powî_widgës
(
widgë
->
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

701 
	}
}

704 
	$d≠m_mixî_upd©e_powî
(
¢d_soc_d≠m_widgë
 *
widgë
,

705 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
, 
ªg
,

706 
vÆ_mask
, 
vÆ
, 
övît
)

708 
¢d_soc_d≠m_∑th
 *
∑th
;

709 
found
 = 0;

711 
	`__D
("\n");

713 i‡(
widgë
->
id
 !
¢d_soc_d≠m_mixî
)

714  -
ENODEV
;

716 i‡(!
	`¢d_soc_ã°_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
))

720 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
codec
->
d≠m_∑ths
, 
li°
) {

721 i‡(
∑th
->
kc⁄åﬁ
 != kcontrol)

725 
found
 = 1;

726 i‡(
vÆ
)

728 
∑th
->
c⁄√˘
 = 
övît
 ? 0:1;

731 
∑th
->
c⁄√˘
 = 
övît
 ? 1:0;

735 i‡(
found
)

736 
	`d≠m_powî_widgës
(
widgë
->
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

739 
	}
}

742 
ssize_t
 
	$d≠m_widgë_show
(
devi˚
 *
dev
,

743 
devi˚_©åibuã
 *
©å
, *
buf
)

745 
¢d_soc_devi˚
 *
devd©a
 = 
	`dev_gë_drvd©a
(
dev
);

746 
¢d_soc_codec
 *
codec
 = 
devd©a
->codec;

747 
¢d_soc_d≠m_widgë
 *
w
;

748 
cou¡
 = 0;

749 *
°©e
 = "not set";

751 
	`__D
("\n");

753 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

756 
w
->
id
) {

757 
¢d_soc_d≠m_hp
:

758 
¢d_soc_d≠m_mic
:

759 
¢d_soc_d≠m_•k
:

760 
¢d_soc_d≠m_löe
:

761 
¢d_soc_d≠m_micbüs
:

762 
¢d_soc_d≠m_dac
:

763 
¢d_soc_d≠m_adc
:

764 
¢d_soc_d≠m_pga
:

765 
¢d_soc_d≠m_mixî
:

766 i‡(
w
->
«me
)

767 
cou¡
 +
	`•rötf
(
buf
 + count, "%s: %s\n",

768 
w
->
«me
, w->
powî
 ? "On":"Off");

775 
codec
->
d≠m_°©e
){

776 
SNDRV_CTL_POWER_D0
:

777 
°©e
 = "D0";

779 
SNDRV_CTL_POWER_D1
:

780 
°©e
 = "D1";

782 
SNDRV_CTL_POWER_D2
:

783 
°©e
 = "D2";

785 
SNDRV_CTL_POWER_D3hŸ
:

786 
°©e
 = "D3hot";

788 
SNDRV_CTL_POWER_D3cﬁd
:

789 
°©e
 = "D3cold";

792 
cou¡
 +
	`•rötf
(
buf
 + cou¡, "PM Sèã: %s\n", 
°©e
);

794  
cou¡
;

795 
	}
}

797 
DEVICE_ATTR
(
d≠m_widgë
, 0444, 
d≠m_widgë_show
, 
NULL
);

799 
	$¢d_soc_d≠m_sys_add
(
devi˚
 *
dev
)

801 
ªt
 = 0;

803 
	`__D
("\n");

805 i‡(
d≠m_°©us
)

806 
ªt
 = 
	`devi˚_¸óã_fûe
(
dev
, &
dev_©å_d≠m_widgë
);

808  
ªt
;

809 
	}
}

811 
	$¢d_soc_d≠m_sys_ªmove
(
devi˚
 *
dev
)

813 
	`__D
("\n");

815 i‡(
d≠m_°©us
)

816 
	`devi˚_ªmove_fûe
(
dev
, &
dev_©å_d≠m_widgë
);

817 
	}
}

820 
	$d≠m_‰ì_widgës
(
¢d_soc_codec
 *
codec
)

822 
¢d_soc_d≠m_widgë
 *
w
, *
√xt_w
;

823 
¢d_soc_d≠m_∑th
 *
p
, *
√xt_p
;

825 
	`__D
("\n");

827 
	`li°_f‹_óch_íåy_ß„
(
w
, 
√xt_w
, &
codec
->
d≠m_widgës
, 
li°
) {

828 
	`li°_dñ
(&
w
->
li°
);

829 
	`k‰ì
(
w
);

832 
	`li°_f‹_óch_íåy_ß„
(
p
, 
√xt_p
, &
codec
->
d≠m_∑ths
, 
li°
) {

833 
	`li°_dñ
(&
p
->
li°
);

834 
	`k‰ì
(
p
->
l⁄g_«me
);

835 
	`k‰ì
(
p
);

837 
	}
}

848 
	$¢d_soc_d≠m_sync_ídpoöts
(
¢d_soc_codec
 *
codec
)

850 
	`__D
("\n");

852  
	`d≠m_powî_widgës
(
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

853 
	}
}

854 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_sync_ídpoöts
);

869 
	$¢d_soc_d≠m_c⁄√˘_öput
(
¢d_soc_codec
 *
codec
, c⁄° *
sök
,

870 c⁄° * 
c⁄åﬁ
, c⁄° *
sour˚
)

872 
¢d_soc_d≠m_∑th
 *
∑th
;

873 
¢d_soc_d≠m_widgë
 *
wsour˚
 = 
NULL
, *
wsök
 = NULL, *
w
;

874 
ªt
 = 0;

876 
	`__D
("\n");

879 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

881 i‡(!
wsök
 && !(
	`°rcmp
(
w
->
«me
, 
sök
))) {

882 
	`__D
("°rcmp(w->«me, sökË>>>> %s\n", 
w
->
«me
);

883 
wsök
 = 
w
;

886 i‡(!
wsour˚
 && !(
	`°rcmp
(
w
->
«me
, 
sour˚
))) {

887 
	`__D
("°rcmp(w->«me, sour˚Ë>>>> %s\n", 
w
->
«me
);

888 
wsour˚
 = 
w
;

892 i‡(
wsour˚
 =
NULL
 || 
wsök
 == NULL)

893  -
ENODEV
;

895 
∑th
 = 
	`kzÆloc
((
¢d_soc_d≠m_∑th
), 
GFP_KERNEL
);

896 i‡(!
∑th
)

897  -
ENOMEM
;

899 
∑th
->
sour˚
 = 
wsour˚
;

900 
∑th
->
sök
 = 
wsök
;

901 
	`INIT_LIST_HEAD
(&
∑th
->
li°
);

902 
	`INIT_LIST_HEAD
(&
∑th
->
li°_sour˚
);

903 
	`INIT_LIST_HEAD
(&
∑th
->
li°_sök
);

906 i‡(
wsök
->
id
 =
¢d_soc_d≠m_öput
) {

907 i‡(
wsour˚
->
id
 =
¢d_soc_d≠m_micbüs
 ||

908 
wsour˚
->
id
 =
¢d_soc_d≠m_mic
 ||

909 
wsök
->
id
 =
¢d_soc_d≠m_löe
 ||

910 
wsök
->
id
 =
¢d_soc_d≠m_ouçut
)

911 
wsök
->
ext
 = 1;

913 i‡(
wsour˚
->
id
 =
¢d_soc_d≠m_ouçut
) {

914 i‡(
wsök
->
id
 =
¢d_soc_d≠m_•k
 ||

915 
wsök
->
id
 =
¢d_soc_d≠m_hp
 ||

916 
wsök
->
id
 =
¢d_soc_d≠m_löe
 ||

917 
wsök
->
id
 =
¢d_soc_d≠m_öput
)

918 
wsour˚
->
ext
 = 1;

922 i‡(
c⁄åﬁ
 =
NULL
) {

923 
	`__D
("connect staticÖaths\n");

924 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

925 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

926 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

927 
	`__D
("wsök->sour˚†«mê%s\n", 
wsök
->
«me
);

928 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

929 
	`__D
("wsour˚->sök†«mê%s\n", 
wsour˚
->
«me
);

930 
∑th
->
c⁄√˘
 = 1;

935 
wsök
->
id
) {

936 
¢d_soc_d≠m_adc
:

937 
¢d_soc_d≠m_dac
:

938 
¢d_soc_d≠m_pga
:

939 
¢d_soc_d≠m_öput
:

940 
¢d_soc_d≠m_ouçut
:

941 
¢d_soc_d≠m_micbüs
:

942 
¢d_soc_d≠m_vmid
:

943 
¢d_soc_d≠m_¥e
:

944 
¢d_soc_d≠m_po°
:

945 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

946 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

947 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

948 
	`__D
("wsök->sour˚†«mê%s\n", 
wsök
->
«me
);

949 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

950 
	`__D
("wsour˚->sök†«mê%s\n", 
wsour˚
->
«me
);

951 
∑th
->
c⁄√˘
 = 1;

953 
¢d_soc_d≠m_mux
:

954 
ªt
 = 
	`d≠m_c⁄√˘_mux
(
codec
, 
wsour˚
, 
wsök
, 
∑th
, 
c⁄åﬁ
,

955 &
wsök
->
kc⁄åﬁs
[0]);

956 i‡(
ªt
 != 0)

957 
îr
;

959 
¢d_soc_d≠m_swôch
:

960 
¢d_soc_d≠m_mixî
:

961 
ªt
 = 
	`d≠m_c⁄√˘_mixî
(
codec
, 
wsour˚
, 
wsök
, 
∑th
, 
c⁄åﬁ
);

962 i‡(
ªt
 != 0)

963 
îr
;

965 
¢d_soc_d≠m_hp
:

966 
¢d_soc_d≠m_mic
:

967 
¢d_soc_d≠m_löe
:

968 
¢d_soc_d≠m_•k
:

969 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

970 
	`__D
("codec->«mê%s\n", 
codec
->
«me
);

971 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

972 
	`__D
("wsök->sour˚†«mê%s\n", 
wsök
->
«me
);

973 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

974 
	`__D
("wsour˚->sök†«mê%s\n", 
wsour˚
->
«me
);

975 
∑th
->
c⁄√˘
 = 0;

980 
îr
:

981 
	`__E
("asoc:Çÿd≠m m©ch f‹ %†--> %†--> %s\n", 
sour˚
,

982 
c⁄åﬁ
, 
sök
);

983 
	`k‰ì
(
∑th
);

984  
ªt
;

985 
	}
}

986 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_c⁄√˘_öput
);

1001 
	$¢d_soc_d≠m_add_rouãs
(
¢d_soc_codec
 *
codec
,

1002 c⁄° 
¢d_soc_d≠m_rouã
 *
rouã
, 
num
)

1004 
i
, 
ªt
;

1006 
	`__D
("\n");

1008 
i
 = 0; i < 
num
; i++) {

1009 i‡((
ªt
 = 
	`¢d_soc_d≠m_c⁄√˘_öput
(
codec
, 
rouã
->
sök
,

1010 
rouã
->
c⁄åﬁ
,Ñouã->
sour˚
)) < 0) {

1011 
	`__E
("FaûedÅÿaddÑouã %s->%s\n", 
rouã
->
sour˚
,Ñouã->
sök
);

1012  
ªt
;

1014 
rouã
++;

1018 
	}
}

1019 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_add_rouãs
);

1029 
	$¢d_soc_d≠m_√w_widgës
(
¢d_soc_codec
 *
codec
)

1031 
¢d_soc_d≠m_widgë
 *
w
;

1032 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
;

1033 
¢d_soc_d≠m_∑th
 *
∑th
 = 
NULL
;

1035 
ªt
 = 0;

1037 
	`__D
("\n");

1039 
	`muãx_lock
(&
codec
->
muãx
);

1040 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
)

1042 i‡(
w
->
√w
) {

1043 
	`__D
("w->new != 0\n");

1047 
w
->
id
) {

1048 
¢d_soc_d≠m_swôch
:

1049 
	`__D
("<<<<<<<<switch\n");

1050 
	`d≠m_√w_mixî
(
codec
, 
w
);

1052 
¢d_soc_d≠m_mixî
:

1053 
	`__D
("<<<<<<<<mixer\n");

1054 
	`d≠m_√w_mixî
(
codec
, 
w
);

1057 
¢d_soc_d≠m_mux
:

1058 
	`__D
("<<<<<<<<mux\n");

1060 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1061 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1064 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1065 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1066 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1070 
	`li°_f‹_óch_íåy
(
∑th
, &
w
->
sour˚s
, 
li°_sök
) {

1071 
∑th
->
kc⁄åﬁ
 = kcontrol;

1076 
¢d_soc_d≠m_adc
:

1077 
	`__D
("<<<<<<<<adc\n");

1078 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1079 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1082 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1083 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1084 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1089 
¢d_soc_d≠m_dac
:

1090 
	`__D
("<<<<<<<<dac\n");

1091 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1092 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1095 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1096 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1097 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1102 
¢d_soc_d≠m_pga
:

1103 
	`__D
("<<<<<<<<pga\n");

1105 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1106 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1109 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1110 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1111 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1117 
¢d_soc_d≠m_öput
:

1118 
	`__D
("<<<<<<<<input\n");

1120 
¢d_soc_d≠m_ouçut
:

1121 
	`__D
("<<<<<<<<output\n");

1123 
¢d_soc_d≠m_micbüs
:

1124 
	`__D
("<<<<<<<<micbias\n");

1126 
¢d_soc_d≠m_•k
:

1127 
	`__D
("<<<<<<<<spk\n");

1129 
¢d_soc_d≠m_hp
:

1130 
	`__D
("<<<<<<<<hp\n");

1132 
¢d_soc_d≠m_mic
:

1133 
	`__D
("<<<<<<<<mic\n");

1135 
¢d_soc_d≠m_löe
:

1136 
	`__D
("<<<<<<<<line\n");

1138 
¢d_soc_d≠m_vmid
:

1139 
	`__D
("<<<<<<<<vmid\n");

1141 
¢d_soc_d≠m_¥e
:

1142 
	`__D
("<<<<<<<<pre\n");

1144 
¢d_soc_d≠m_po°
:

1145 
	`__D
("<<<<<<<<post\n");

1149 
w
->
√w
 = 1;

1150 
	`__D
("w->new = 1\n");

1153 
	`d≠m_powî_widgës
(
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

1154 
	`muãx_u∆ock
(&
codec
->
muãx
);

1156 
	}
}

1157 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_widgës
);

1168 
	$¢d_soc_d≠m_gë_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1169 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1171 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1172 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1173 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1174 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1175 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1176 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1178 
	`__D
("\n");

1181 i‡(
widgë
->
id
 =
¢d_soc_d≠m_pga
 && !widgë->
powî
) {

1182 
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] = 
widgë
->
ßved_vÆue
;

1186 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1187 (
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
Ë>> 
shi·
Ë& 
mask
;

1188 i‡(
shi·
 !
rshi·
)

1189 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1190 (
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
Ë>> 
rshi·
Ë& 
mask
;

1191 i‡(
övît
) {

1192 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1193 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

1194 i‡(
shi·
 !
rshi·
)

1195 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1196 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1];

1200 
	}
}

1201 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_gë_vﬁsw
);

1212 
	$¢d_soc_d≠m_put_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1213 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1215 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1216 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1217 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1218 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1219 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1220 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1221 
vÆ
, 
vÆ2
, 
vÆ_mask
;

1222 
ªt
;

1224 
	`__D
("\n");

1226 
vÆ
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] & 
mask
);

1228 i‡(
övît
)

1229 
vÆ
 = 
mask
 - val;

1230 
vÆ_mask
 = 
mask
 << 
shi·
;

1231 
vÆ
 = vÆ << 
shi·
;

1232 i‡(
shi·
 !
rshi·
) {

1233 
vÆ2
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[1] & 
mask
);

1234 i‡(
övît
)

1235 
vÆ2
 = 
mask
 - val2;

1236 
vÆ_mask
 |
mask
 << 
rshi·
;

1237 
vÆ
 |
vÆ2
 << 
rshi·
;

1240 
	`muãx_lock
(&
widgë
->
codec
->
muãx
);

1242 
widgë
->
vÆue
 = 
vÆ
;

1245 i‡(
widgë
->
id
 =
¢d_soc_d≠m_pga
 && !widgë->
powî
) {

1246 
widgë
->
ßved_vÆue
 = 
vÆ
;

1247 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1251 
	`d≠m_mixî_upd©e_powî
(
widgë
, 
kc⁄åﬁ
, 
ªg
, 
vÆ_mask
, 
vÆ
, 
övît
);

1252 i‡(
widgë
->
evít
) {

1253 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_REG
) {

1254 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_PRE_REG
);

1255 i‡(
ªt
 < 0)

1256 
out
;

1259 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
);

1261 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_POST_REG
)

1262 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_POST_REG
);

1264 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
);

1266 
out
:

1267 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1268  
ªt
;

1269 
	}
}

1270 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_put_vﬁsw
);

1281 
	$¢d_soc_d≠m_gë_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1282 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1284 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1285 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

1286 
vÆ
, 
bômask
;

1288 
	`__D
("\n");

1290 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

1292 
vÆ
 = 
	`¢d_soc_ªad
(
widgë
->
codec
, 
e
->
ªg
);

1293 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] = (
vÆ
 >> 
e
->
shi·_l
Ë& (
bômask
 - 1);

1294 i‡(
e
->
shi·_l
 !e->
shi·_r
)

1295 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] =

1296 (
vÆ
 >> 
e
->
shi·_r
Ë& (
bômask
 - 1);

1299 
	}
}

1300 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_gë_íum_doubÀ
);

1311 
	$¢d_soc_d≠m_put_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1312 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1314 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1315 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

1316 
vÆ
, 
mux
;

1317 
mask
, 
bômask
;

1318 
ªt
 = 0;

1320 
	`__D
("\n");

1322 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

1324 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] > 
e
->
mask
 - 1)

1325  -
EINVAL
;

1326 
mux
 = 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0];

1327 
vÆ
 = 
mux
 << 
e
->
shi·_l
;

1328 
mask
 = (
bômask
 - 1Ë<< 
e
->
shi·_l
;

1329 i‡(
e
->
shi·_l
 !e->
shi·_r
) {

1330 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] > 
e
->
mask
 - 1)

1331  -
EINVAL
;

1332 
vÆ
 |
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] << 
e
->
shi·_r
;

1333 
mask
 |(
bômask
 - 1Ë<< 
e
->
shi·_r
;

1336 
	`muãx_lock
(&
widgë
->
codec
->
muãx
);

1337 
widgë
->
vÆue
 = 
vÆ
;

1338 
	`d≠m_mux_upd©e_powî
(
widgë
, 
kc⁄åﬁ
, 
mask
, 
mux
, 
e
);

1339 i‡(
widgë
->
evít
) {

1340 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_REG
) {

1341 i‡((
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_PRE_REG
))< 0)

1342 
out
;

1345 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
);

1347 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_POST_REG
)

1348 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_POST_REG
);

1350 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
);

1352 
out
:

1353 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1354  
ªt
;

1355 
	}
}

1356 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_put_íum_doubÀ
);

1367 
	$¢d_soc_d≠m_√w_c⁄åﬁ
(
¢d_soc_codec
 *
codec
,

1368 c⁄° 
¢d_soc_d≠m_widgë
 *
widgë
)

1370 
¢d_soc_d≠m_widgë
 *
w
;

1372 
	`__D
("\n");

1374 i‡((
w
 = 
	`d≠m_˙ew_widgë
(
widgë
)Ë=
NULL
)

1375  -
ENOMEM
;

1377 
w
->
codec
 = codec;

1378 
	`INIT_LIST_HEAD
(&
w
->
sour˚s
);

1379 
	`INIT_LIST_HEAD
(&
w
->
söks
);

1380 
	`INIT_LIST_HEAD
(&
w
->
li°
);

1381 
	`li°_add
(&
w
->
li°
, &
codec
->
d≠m_widgës
);

1384 
w
->
c⁄√˘ed
 = 1;

1386 
	}
}

1387 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_c⁄åﬁ
);

1399 
	$¢d_soc_d≠m_√w_c⁄åﬁs
(
¢d_soc_codec
 *
codec
,

1400 c⁄° 
¢d_soc_d≠m_widgë
 *
widgë
,

1401 
num
)

1403 
i
, 
ªt
;

1405 
	`__D
("\n");

1407 
i
 = 0; i < 
num
; i++) {

1408 i‡((
ªt
 = 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, 
widgë
)) < 0)

1409  
ªt
;

1410 
widgë
++;

1413 
	}
}

1414 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_c⁄åﬁs
);

1428 
	$¢d_soc_d≠m_°ªam_evít
(
¢d_soc_codec
 *
codec
,

1429 *
°ªam
, 
evít
)

1431 
¢d_soc_d≠m_widgë
 *
w
;

1433 
	`__D
("\n");

1435 i‡(
°ªam
 =
NULL
)

1438 
	`muãx_lock
(&
codec
->
muãx
);

1440 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
)

1442 i‡(!
w
->
¢ame
)

1445 
	`__D
("widget %s\n %s stream %sÉvent %d\n",

1446 
w
->
«me
, w->
¢ame
, 
°ªam
, 
evít
);

1448 i‡(
	`°r°r
(
w
->
¢ame
, 
°ªam
)) {

1449 
evít
) {

1450 
SND_SOC_DAPM_STREAM_START
:

1451 
w
->
a˘ive
 = 1;

1453 
SND_SOC_DAPM_STREAM_STOP
:

1454 
w
->
a˘ive
 = 0;

1456 
SND_SOC_DAPM_STREAM_SUSPEND
:

1457 i‡(
w
->
a˘ive
)

1458 
w
->
su•íd
 = 1;

1459 
w
->
a˘ive
 = 0;

1461 
SND_SOC_DAPM_STREAM_RESUME
:

1462 i‡(
w
->
su•íd
) {

1463 
w
->
a˘ive
 = 1;

1464 
w
->
su•íd
 = 0;

1467 
SND_SOC_DAPM_STREAM_PAUSE_PUSH
:

1469 
SND_SOC_DAPM_STREAM_PAUSE_RELEASE
:

1474 
	`muãx_u∆ock
(&
codec
->
muãx
);

1476 
	`d≠m_powî_widgës
(
codec
, 
evít
);

1477 
	`dump_d≠m
(
codec
, 
__FUNCTION__
);

1479 
	}
}

1480 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_°ªam_evít
);

1492 
	$¢d_soc_d≠m_£t_ídpoöt
(
¢d_soc_codec
 *
codec
,

1493 *
ídpoöt
, 
°©us
)

1495 
¢d_soc_d≠m_widgë
 *
w
;

1497 
	`__D
("ídpoöà%s\n", 
ídpoöt
);

1499 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

1500 i‡(!
	`°rcmp
(
w
->
«me
, 
ídpoöt
)) {

1501 
w
->
c⁄√˘ed
 = 
°©us
;

1506 
	}
}

1507 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_£t_ídpoöt
);

1515 
	$¢d_soc_d≠m_‰ì
(
¢d_soc_devi˚
 *
socdev
)

1517 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1519 
	`__D
("\n");

1521 
	`¢d_soc_d≠m_sys_ªmove
(
socdev
->
dev
);

1522 
	`d≠m_‰ì_widgës
(
codec
);

1523 
	}
}

1524 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_‰ì
);

1527 
MODULE_AUTHOR
("Liam Girdwood,Üiam.girdwood@wolfsonmicro.com, www.wolfsonmicro.com");

1528 
MODULE_DESCRIPTION
("Dynamic Audio Power Management core for ALSA SoC");

1529 
MODULE_LICENSE
("GPL");

	@soc-dapm_bak.c

1 
	#LOG_TAG
 "soc-d≠m.c"

	)

2 
	~"oßl.h
"

3 
	~"s3c.h
"

42 
	~<löux/moduÀ.h
>

43 
	~<löux/moduÀ∑øm.h
>

44 
	~<löux/öô.h
>

45 
	~<löux/dñay.h
>

46 
	~<löux/pm.h
>

47 
	~<löux/bô›s.h
>

48 
	~<löux/∂©f‹m_devi˚.h
>

49 
	~<löux/jiffõs.h
>

50 
	~<sound/drivî.h
>

51 
	~<sound/c‹e.h
>

52 
	~<sound/pcm.h
>

53 
	~<sound/pcm_∑øms.h
>

54 
	~<sound/soc-d≠m.h
>

55 
	~<sound/öôvÆ.h
>

58 
	#DAPM_DEBUG
 0

	)

59 #i‡
DAPM_DEBUG


60 
	#dump_d≠m
(
codec
, 
a˘i⁄
Ë
	`dbg_dump_d≠m
(codec,á˘i⁄)

	)

61 
	#dbg
(
f‹m©
, 
¨g
...Ë
	`¥ötk
(f‹m©, ##árg)

	)

63 
	#dump_d≠m
(
codec
, 
a˘i⁄
)

	)

64 
	#dbg
(
f‹m©
, 
¨g
...)

	)

67 
	#POP_DEBUG
 0

	)

68 #i‡
POP_DEBUG


69 
	#POP_TIME
 500

	)

70 
	#p›_waô
(
time
Ë
	`scheduÀ_timeout_unöãºu±ibÀ
(
	`m£cs_to_jiffõs
—ime))

	)

71 
	#p›_dbg
(
f‹m©
, 
¨g
...Ë
	`¥ötk
(f‹m©, ##árg); 
	`p›_waô
(
POP_TIME
)

	)

73 
	#p›_dbg
(
f‹m©
, 
¨g
...)

	)

74 
	#p›_waô
(
time
)

	)

78 
	gd≠m_up_£q
[] = {

79 
¢d_soc_d≠m_¥e
, 
¢d_soc_d≠m_micbüs
, 
¢d_soc_d≠m_mic
,

80 
¢d_soc_d≠m_mux
, 
¢d_soc_d≠m_dac
, 
¢d_soc_d≠m_mixî
, 
¢d_soc_d≠m_pga
,

81 
¢d_soc_d≠m_adc
, 
¢d_soc_d≠m_hp
, 
¢d_soc_d≠m_•k
, 
¢d_soc_d≠m_po°


83 
	gd≠m_down_£q
[] = {

84 
¢d_soc_d≠m_¥e
, 
¢d_soc_d≠m_adc
, 
¢d_soc_d≠m_hp
, 
¢d_soc_d≠m_•k
,

85 
¢d_soc_d≠m_pga
, 
¢d_soc_d≠m_mixî
, 
¢d_soc_d≠m_dac
, 
¢d_soc_d≠m_mic
,

86 
¢d_soc_d≠m_micbüs
, 
¢d_soc_d≠m_mux
, 
¢d_soc_d≠m_po°


89 
	gd≠m_°©us
 = 1;

90 
moduÀ_∑øm
(
d≠m_°©us
, , 0);

91 
MODULE_PARM_DESC
(
d≠m_°©us
, "enable DPM sysfsÉntries");

94 
ölöe
 
¢d_soc_d≠m_widgë
 *
	$d≠m_˙ew_widgë
(

95 c⁄° 
¢d_soc_d≠m_widgë
 *
_widgë
)

97 
	`__D
("\n");

99  
	`kmemdup
(
_widgë
, (*_widgë), 
GFP_KERNEL
);

100 
	}
}

103 
	$d≠m_£t_∑th_°©us
(
¢d_soc_d≠m_widgë
 *
w
,

104 
¢d_soc_d≠m_∑th
 *
p
, 
i
)

106 
	`__D
("\n");

108 
w
->
id
) {

109 
¢d_soc_d≠m_swôch
:

110 
¢d_soc_d≠m_mixî
: {

111 
vÆ
;

112 
ªg
 = 
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 & 0xff;

113 
shi·
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 8) & 0x0f;

114 
mask
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 16) & 0xff;

115 
övît
 = (
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
 >> 24) & 0x01;

117 
vÆ
 = 
	`¢d_soc_ªad
(
w
->
codec
, 
ªg
);

118 
vÆ
 = (vÆ >> 
shi·
Ë& 
mask
;

120 i‡((
övît
 && !
vÆ
) || (!invert && val))

121 
p
->
c⁄√˘
 = 1;

123 
p
->
c⁄√˘
 = 0;

126 
¢d_soc_d≠m_mux
: {

127 
soc_íum
 *
e
 = (soc_íum *)
w
->
kc⁄åﬁs
[
i
].
¥iv©e_vÆue
;

128 
vÆ
, 
ôem
, 
bômask
;

130 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

132 
vÆ
 = 
	`¢d_soc_ªad
(
w
->
codec
, 
e
->
ªg
);

133 
ôem
 = (
vÆ
 >> 
e
->
shi·_l
Ë& (
bômask
 - 1);

135 
p
->
c⁄√˘
 = 0;

136 
i
 = 0; i < 
e
->
mask
; i++) {

137 i‡(!(
	`°rcmp
(
p
->
«me
, 
e
->
ãxts
[
i
])Ë&& 
ôem
 == i)

138 
p
->
c⁄√˘
 = 1;

143 
¢d_soc_d≠m_pga
:

144 
¢d_soc_d≠m_ouçut
:

145 
¢d_soc_d≠m_adc
:

146 
¢d_soc_d≠m_öput
:

147 
¢d_soc_d≠m_dac
:

148 
¢d_soc_d≠m_micbüs
:

149 
¢d_soc_d≠m_vmid
:

150 
p
->
c⁄√˘
 = 1;

153 
¢d_soc_d≠m_hp
:

154 
¢d_soc_d≠m_mic
:

155 
¢d_soc_d≠m_•k
:

156 
¢d_soc_d≠m_löe
:

157 
¢d_soc_d≠m_¥e
:

158 
¢d_soc_d≠m_po°
:

159 
p
->
c⁄√˘
 = 0;

162 
	}
}

165 
	$d≠m_c⁄√˘_mux
(
¢d_soc_codec
 *
codec
,

166 
¢d_soc_d≠m_widgë
 *
§c
, ¢d_soc_d≠m_widgë *
de°
,

167 
¢d_soc_d≠m_∑th
 *
∑th
, c⁄° *
c⁄åﬁ_«me
,

168 c⁄° 
¢d_kc⁄åﬁ_√w
 *
kc⁄åﬁ
)

170 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

171 
i
;

173 
	`__D
("\n");

175 
i
 = 0; i < 
e
->
mask
; i++) {

176 i‡(!(
	`°rcmp
(
c⁄åﬁ_«me
, 
e
->
ãxts
[
i
]))) {

177 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

178 
	`li°_add
(&
∑th
->
li°_sök
, &
de°
->
sour˚s
);

179 
	`li°_add
(&
∑th
->
li°_sour˚
, &
§c
->
söks
);

180 
∑th
->
«me
 = (*)
e
->
ãxts
[
i
];

181 
	`d≠m_£t_∑th_°©us
(
de°
, 
∑th
, 0);

186  -
ENODEV
;

187 
	}
}

190 
	$d≠m_c⁄√˘_mixî
(
¢d_soc_codec
 *
codec
,

191 
¢d_soc_d≠m_widgë
 *
§c
, ¢d_soc_d≠m_widgë *
de°
,

192 
¢d_soc_d≠m_∑th
 *
∑th
, c⁄° *
c⁄åﬁ_«me
)

194 
i
;

196 
	`__D
("\n");

199 
i
 = 0; i < 
de°
->
num_kc⁄åﬁs
; i++) {

200 i‡(!
	`°rcmp
(
c⁄åﬁ_«me
, 
de°
->
kc⁄åﬁs
[
i
].
«me
)) {

201 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

202 
	`li°_add
(&
∑th
->
li°_sök
, &
de°
->
sour˚s
);

203 
	`li°_add
(&
∑th
->
li°_sour˚
, &
§c
->
söks
);

204 
∑th
->
«me
 = 
de°
->
kc⁄åﬁs
[
i
].name;

205 
	`d≠m_£t_∑th_°©us
(
de°
, 
∑th
, 
i
);

209  -
ENODEV
;

210 
	}
}

213 
	$d≠m_upd©e_bôs
(
¢d_soc_d≠m_widgë
 *
widgë
)

215 
ch™ge
, 
powî
;

216 
ﬁd
,
√w
;

217 
¢d_soc_codec
 *
codec
 = 
widgë
->codec;

219 
	`__D
("\n");

222 i‡(
widgë
->
ªg
 < 0 || widgë->
id
 =
¢d_soc_d≠m_öput
 ||

223 
widgë
->
id
 =
¢d_soc_d≠m_ouçut
 ||

224 
widgë
->
id
 =
¢d_soc_d≠m_hp
 ||

225 
widgë
->
id
 =
¢d_soc_d≠m_mic
 ||

226 
widgë
->
id
 =
¢d_soc_d≠m_löe
 ||

227 
widgë
->
id
 =
¢d_soc_d≠m_•k
)

230 
powî
 = 
widgë
->power;

231 i‡(
widgë
->
övît
)

232 
powî
 = (power ? 0:1);

234 
ﬁd
 = 
	`¢d_soc_ªad
(
codec
, 
widgë
->
ªg
);

235 
√w
 = (
ﬁd
 & ~(0x1 << 
widgë
->
shi·
)Ë| (
powî
 << widget->shift);

237 
ch™ge
 = 
ﬁd
 !
√w
;

238 i‡(
ch™ge
) {

239 
	`p›_dbg
("p›Åe° %†: %†ö %d ms\n", 
widgë
->
«me
,

240 
widgë
->
powî
 ? "⁄" : "off", 
POP_TIME
);

241 
	`¢d_soc_wrôe
(
codec
, 
widgë
->
ªg
, 
√w
);

242 
	`p›_waô
(
POP_TIME
);

244 
	`__D
("ªg old %xÇew %x ch™gê%d\n", 
ﬁd
, 
√w
, 
ch™ge
);

245  
ch™ge
;

246 
	}
}

250 
	$d≠m_£t_pga
(
¢d_soc_d≠m_widgë
 *
widgë
, 
powî
)

252 c⁄° 
¢d_kc⁄åﬁ_√w
 *
k
 = 
widgë
->
kc⁄åﬁs
;

254 
	`__D
("\n");

256 i‡(
widgë
->
muãd
 && !
powî
)

258 i‡(!
widgë
->
muãd
 && 
powî
)

261 i‡(
widgë
->
num_kc⁄åﬁs
 && 
k
) {

262 
ªg
 = 
k
->
¥iv©e_vÆue
 & 0xff;

263 
shi·
 = (
k
->
¥iv©e_vÆue
 >> 8) & 0x0f;

264 
mask
 = (
k
->
¥iv©e_vÆue
 >> 16) & 0xff;

265 
övît
 = (
k
->
¥iv©e_vÆue
 >> 24) & 0x01;

267 i‡(
powî
) {

268 
i
;

270 i‡(
övît
) {

271 
i
 = 
mask
; i > 
widgë
->
ßved_vÆue
; i--)

272 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

274 
i
 = 0; i < 
widgë
->
ßved_vÆue
; i++)

275 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

277 
widgë
->
muãd
 = 0;

280 
vÆ
 = 
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
);

281 
i
 = 
widgë
->
ßved_vÆue
 = (
vÆ
 >> 
shi·
Ë& 
mask
;

282 i‡(
övît
) {

283 ; 
i
 < 
mask
; i++)

284 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

286 ; 
i
 > 0; i--)

287 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
mask
, 
i
);

289 
widgë
->
muãd
 = 1;

293 
	}
}

296 
	$d≠m_√w_mixî
(
¢d_soc_codec
 *
codec
,

297 
¢d_soc_d≠m_widgë
 *
w
)

299 
i
, 
ªt
 = 0;

300 
«me
[32];

301 
¢d_soc_d≠m_∑th
 *
∑th
;

303 
	`__D
("\n");

306 
i
 = 0; i < 
w
->
num_kc⁄åﬁs
; i++) {

309 
	`li°_f‹_óch_íåy
(
∑th
, &
w
->
sour˚s
, 
li°_sök
) {

312 i‡(
∑th
->
«me
 !(*)
w
->
kc⁄åﬁs
[
i
].name)

316 
	`¢¥ötf
(
«me
, 32, "%†%s", 
w
->«me, w->
kc⁄åﬁs
[
i
].name);

317 
∑th
->
l⁄g_«me
 = 
	`k°rdup
 (
«me
, 
GFP_KERNEL
);

318 i‡(
∑th
->
l⁄g_«me
 =
NULL
)

319  -
ENOMEM
;

321 
∑th
->
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[
i
], w,

322 
∑th
->
l⁄g_«me
);

323 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
∑th
->
kc⁄åﬁ
)) < 0) {

324 
	`__E
("asoc: failedÅoádd dapm kcontrol %s\n",

325 
∑th
->
l⁄g_«me
);

326 
	`k‰ì
(
∑th
->
l⁄g_«me
);

327 
∑th
->
l⁄g_«me
 = 
NULL
;

328  
ªt
;

332  
ªt
;

333 
	}
}

337 
ölöe
 
	$d≠m_˛ór_wÆk
(
¢d_soc_codec
 *
codec
)

339 
¢d_soc_d≠m_∑th
 *
p
;

341 
	`__D
("\n");

343 
	`li°_f‹_óch_íåy
(
p
, &
codec
->
d≠m_∑ths
, 
li°
)

344 
p
->
wÆked
 = 0;

345 
	}
}

351 
	$is_c⁄√˘ed_ouçut_ï
(
¢d_soc_d≠m_widgë
 *
widgë
)

353 
¢d_soc_d≠m_∑th
 *
∑th
;

354 
c⁄
 = 0;

356 
	`__D
("\n");

358 i‡(
widgë
->
id
 =
¢d_soc_d≠m_adc
 && widgë->
a˘ive
)

361 i‡(
widgë
->
c⁄√˘ed
) {

363 i‡(
widgë
->
id
 =
¢d_soc_d≠m_ouçut
 && !widgë->
ext
)

367 i‡(
widgë
->
id
 =
¢d_soc_d≠m_hp
 || widgë->id =
¢d_soc_d≠m_•k
 || widgë->id =
¢d_soc_d≠m_löe
)

371 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
söks
, 
li°_sour˚
) {

372 i‡(
∑th
->
wÆked
)

375 i‡(
∑th
->
sök
 &&Ö©h->
c⁄√˘
) {

376 
∑th
->
wÆked
 = 1;

377 
c⁄
 +
	`is_c⁄√˘ed_ouçut_ï
(
∑th
->
sök
);

381  
c⁄
;

382 
	}
}

388 
	$is_c⁄√˘ed_öput_ï
(
¢d_soc_d≠m_widgë
 *
widgë
)

390 
¢d_soc_d≠m_∑th
 *
∑th
;

391 
c⁄
 = 0;

393 
	`__D
("\n");

396 i‡(
widgë
->
id
 =
¢d_soc_d≠m_dac
 && widgë->
a˘ive
)

399 i‡(
widgë
->
c⁄√˘ed
) {

401 i‡(
widgë
->
id
 =
¢d_soc_d≠m_öput
 && !widgë->
ext
)

405 i‡(
widgë
->
id
 =
¢d_soc_d≠m_vmid
)

409 i‡(
widgë
->
id
 =
¢d_soc_d≠m_mic
 || widgë->id =
¢d_soc_d≠m_löe
)

413 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
sour˚s
, 
li°_sök
) {

414 i‡(
∑th
->
wÆked
)

417 i‡(
∑th
->
sour˚
 &&Ö©h->
c⁄√˘
) {

418 
∑th
->
wÆked
 = 1;

419 
c⁄
 +
	`is_c⁄√˘ed_öput_ï
(
∑th
->
sour˚
);

423  
c⁄
;

424 
	}
}

435 
	$d≠m_powî_widgës
(
¢d_soc_codec
 *
codec
, 
evít
)

437 
¢d_soc_d≠m_widgë
 *
w
;

438 
ö
, 
out
, 
i
, 
c
 = 1, *
£q
 = 
NULL
, 
ªt
 = 0, 
powî_ch™ge
, 
powî
;

440 
	`__D
("\n");

443 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

444 
c
 = 
	`ARRAY_SIZE
(
d≠m_up_£q
);

445 
£q
 = 
d≠m_up_£q
;

446 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

447 
c
 = 
	`ARRAY_SIZE
(
d≠m_down_£q
);

448 
£q
 = 
d≠m_down_£q
;

451 
i
 = 0; i < 
c
; i++) {

452 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

455 i‡(
£q
 && seq[
i
] && 
w
->
id
 != seq[i])

459 i‡(
w
->
id
 =
¢d_soc_d≠m_vmid
)

463 i‡(
w
->
id
 =
¢d_soc_d≠m_adc
 && w->
a˘ive
) {

464 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

465 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

466 
w
->
powî
 = (
ö
 != 0) ? 1 : 0;

467 
	`d≠m_upd©e_bôs
(
w
);

472 i‡(
w
->
id
 =
¢d_soc_d≠m_dac
 && w->
a˘ive
) {

473 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

474 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

475 
w
->
powî
 = (
out
 != 0) ? 1 : 0;

476 
	`d≠m_upd©e_bôs
(
w
);

481 i‡(
w
->
id
 =
¢d_soc_d≠m_pga
) {

482 
⁄
;

483 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

484 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

485 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

486 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

487 
w
->
powî
 = 
⁄
 = (
out
 !0 && 
ö
 != 0) ? 1 : 0;

489 i‡(!
⁄
)

490 
	`d≠m_£t_pga
(
w
, 
⁄
);

491 
	`d≠m_upd©e_bôs
(
w
);

492 i‡(
⁄
)

493 
	`d≠m_£t_pga
(
w
, 
⁄
);

499 i‡(
w
->
id
 =
¢d_soc_d≠m_¥e
) {

500 i‡(!
w
->
evít
)

503 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

504 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMU
);

505 i‡(
ªt
 < 0)

506  
ªt
;

507 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

508 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMD
);

509 i‡(
ªt
 < 0)

510  
ªt
;

514 i‡(
w
->
id
 =
¢d_soc_d≠m_po°
) {

515 i‡(!
w
->
evít
)

518 i‡(
evít
 =
SND_SOC_DAPM_STREAM_START
) {

519 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMU
);

520 i‡(
ªt
 < 0)

521  
ªt
;

522 } i‡(
evít
 =
SND_SOC_DAPM_STREAM_STOP
) {

523 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMD
);

524 i‡(
ªt
 < 0)

525  
ªt
;

531 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

532 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

533 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

534 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

535 
powî
 = (
out
 !0 && 
ö
 != 0) ? 1 : 0;

536 
powî_ch™ge
 = (
w
->
powî
 ==Öower) ? 0: 1;

537 
w
->
powî
 =Öower;

540 i‡(
powî_ch™ge
) {

541 i‡(
w
->
evít
) {

542 
	`__D
("power %sÉvent for %s flags %x\n",

543 
w
->
powî
 ? "⁄" : "off", w->
«me
, w->
evít_Êags
);

544 i‡(
powî
) {

546 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_PMU
) {

547 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMU
);

548 i‡(
ªt
 < 0)

549  
ªt
;

551 
	`d≠m_upd©e_bôs
(
w
);

552 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_POST_PMU
){

553 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMU
);

554 i‡(
ªt
 < 0)

555  
ªt
;

559 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_PMD
) {

560 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_PRE_PMD
);

561 i‡(
ªt
 < 0)

562  
ªt
;

564 
	`d≠m_upd©e_bôs
(
w
);

565 i‡(
w
->
evít_Êags
 & 
SND_SOC_DAPM_POST_PMD
) {

566 
ªt
 = 
w
->
	`evít
(w, 
SND_SOC_DAPM_POST_PMD
);

567 i‡(
ªt
 < 0)

568  
ªt
;

573 
	`d≠m_upd©e_bôs
(
w
);

578  
ªt
;

579 
	}
}

581 #i‡
DAPM_DEBUG


582 
	$dbg_dump_d≠m
(
¢d_soc_codec
* 
codec
, c⁄° *
a˘i⁄
)

584 
	`__D
("\n");

586 
¢d_soc_d≠m_widgë
 *
w
;

587 
¢d_soc_d≠m_∑th
 *
p
 = 
NULL
;

588 
ö
, 
out
;

590 
	`__D
("DAPM %†%s\n", 
codec
->
«me
, 
a˘i⁄
);

592 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

595 
w
->
id
) {

596 
¢d_soc_d≠m_¥e
:

597 
¢d_soc_d≠m_po°
:

598 
¢d_soc_d≠m_vmid
:

600 
¢d_soc_d≠m_mux
:

601 
¢d_soc_d≠m_ouçut
:

602 
¢d_soc_d≠m_öput
:

603 
¢d_soc_d≠m_swôch
:

604 
¢d_soc_d≠m_hp
:

605 
¢d_soc_d≠m_mic
:

606 
¢d_soc_d≠m_•k
:

607 
¢d_soc_d≠m_löe
:

608 
¢d_soc_d≠m_micbüs
:

609 
¢d_soc_d≠m_dac
:

610 
¢d_soc_d≠m_adc
:

611 
¢d_soc_d≠m_pga
:

612 
¢d_soc_d≠m_mixî
:

613 i‡(
w
->
«me
) {

614 
ö
 = 
	`is_c⁄√˘ed_öput_ï
(
w
);

615 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

616 
out
 = 
	`is_c⁄√˘ed_ouçut_ï
(
w
);

617 
	`d≠m_˛ór_wÆk
(
w
->
codec
);

618 
	`__D
("%s: %† i¿%d ouà%d\n", 
w
->
«me
, w->
powî
 ? "On":"Off",
ö
, 
out
);

620 
	`li°_f‹_óch_íåy
(
p
, &
w
->
sour˚s
, 
li°_sök
) {

621 i‡(
p
->
c⁄√˘
)

622 
	`__D
(" i¿ %†%s\n", 
p
->
«me
 ?Ö->«mê: "°©ic",Ö->
sour˚
->name);

624 
	`li°_f‹_óch_íåy
(
p
, &
w
->
söks
, 
li°_sour˚
) {

625 i‡(
p
->
c⁄√˘
)

626 
	`__D
(" ouà%†%s\n", 
p
->
«me
 ?Ö->«mê: "°©ic",Ö->
sök
->name);

632 
	}
}

636 
	$d≠m_mux_upd©e_powî
(
¢d_soc_d≠m_widgë
 *
widgë
,

637 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
, 
mask
,

638 
vÆ
, 
soc_íum
* 
e
)

640 
¢d_soc_d≠m_∑th
 *
∑th
;

641 
found
 = 0;

643 
	`__D
("\n");

645 i‡(
widgë
->
id
 !
¢d_soc_d≠m_mux
)

646  -
ENODEV
;

648 i‡(
	`¢d_soc_ã°_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
) != 0)

652 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
codec
->
d≠m_∑ths
, 
li°
) {

653 i‡(
∑th
->
kc⁄åﬁ
 != kcontrol)

656 i‡(
∑th
->
«me
 =
NULL
 || 
e
->
ãxts
[
vÆ
] == NULL)

659 
found
 = 1;

661 i‡(!(
	`°rcmp
(
∑th
->
«me
, 
e
->
ãxts
[
vÆ
])))

662 
∑th
->
c⁄√˘
 = 1;

664 
∑th
->
c⁄√˘
 = 0;

667 i‡(
found
)

668 
	`d≠m_powî_widgës
(
widgë
->
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

671 
	}
}

674 
	$d≠m_mixî_upd©e_powî
(
¢d_soc_d≠m_widgë
 *
widgë
,

675 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
, 
ªg
,

676 
vÆ_mask
, 
vÆ
, 
övît
)

678 
¢d_soc_d≠m_∑th
 *
∑th
;

679 
found
 = 0;

681 
	`__D
("\n");

683 i‡(
widgë
->
id
 !
¢d_soc_d≠m_mixî
)

684  -
ENODEV
;

686 i‡(!
	`¢d_soc_ã°_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
))

690 
	`li°_f‹_óch_íåy
(
∑th
, &
widgë
->
codec
->
d≠m_∑ths
, 
li°
) {

691 i‡(
∑th
->
kc⁄åﬁ
 != kcontrol)

695 
found
 = 1;

696 i‡(
vÆ
)

698 
∑th
->
c⁄√˘
 = 
övît
 ? 0:1;

701 
∑th
->
c⁄√˘
 = 
övît
 ? 1:0;

705 i‡(
found
)

706 
	`d≠m_powî_widgës
(
widgë
->
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

709 
	}
}

712 
ssize_t
 
	$d≠m_widgë_show
(
devi˚
 *
dev
,

713 
devi˚_©åibuã
 *
©å
, *
buf
)

715 
¢d_soc_devi˚
 *
devd©a
 = 
	`dev_gë_drvd©a
(
dev
);

716 
¢d_soc_codec
 *
codec
 = 
devd©a
->codec;

717 
¢d_soc_d≠m_widgë
 *
w
;

718 
cou¡
 = 0;

719 *
°©e
 = "not set";

721 
	`__D
("\n");

723 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

726 
w
->
id
) {

727 
¢d_soc_d≠m_hp
:

728 
¢d_soc_d≠m_mic
:

729 
¢d_soc_d≠m_•k
:

730 
¢d_soc_d≠m_löe
:

731 
¢d_soc_d≠m_micbüs
:

732 
¢d_soc_d≠m_dac
:

733 
¢d_soc_d≠m_adc
:

734 
¢d_soc_d≠m_pga
:

735 
¢d_soc_d≠m_mixî
:

736 i‡(
w
->
«me
)

737 
cou¡
 +
	`•rötf
(
buf
 + count, "%s: %s\n",

738 
w
->
«me
, w->
powî
 ? "On":"Off");

745 
codec
->
d≠m_°©e
){

746 
SNDRV_CTL_POWER_D0
:

747 
°©e
 = "D0";

749 
SNDRV_CTL_POWER_D1
:

750 
°©e
 = "D1";

752 
SNDRV_CTL_POWER_D2
:

753 
°©e
 = "D2";

755 
SNDRV_CTL_POWER_D3hŸ
:

756 
°©e
 = "D3hot";

758 
SNDRV_CTL_POWER_D3cﬁd
:

759 
°©e
 = "D3cold";

762 
cou¡
 +
	`•rötf
(
buf
 + cou¡, "PM Sèã: %s\n", 
°©e
);

764  
cou¡
;

765 
	}
}

767 
DEVICE_ATTR
(
d≠m_widgë
, 0444, 
d≠m_widgë_show
, 
NULL
);

769 
	$¢d_soc_d≠m_sys_add
(
devi˚
 *
dev
)

771 
ªt
 = 0;

773 
	`__D
("\n");

775 i‡(
d≠m_°©us
)

776 
ªt
 = 
	`devi˚_¸óã_fûe
(
dev
, &
dev_©å_d≠m_widgë
);

778  
ªt
;

779 
	}
}

781 
	$¢d_soc_d≠m_sys_ªmove
(
devi˚
 *
dev
)

783 
	`__D
("\n");

785 i‡(
d≠m_°©us
)

786 
	`devi˚_ªmove_fûe
(
dev
, &
dev_©å_d≠m_widgë
);

787 
	}
}

790 
	$d≠m_‰ì_widgës
(
¢d_soc_codec
 *
codec
)

792 
¢d_soc_d≠m_widgë
 *
w
, *
√xt_w
;

793 
¢d_soc_d≠m_∑th
 *
p
, *
√xt_p
;

795 
	`__D
("\n");

797 
	`li°_f‹_óch_íåy_ß„
(
w
, 
√xt_w
, &
codec
->
d≠m_widgës
, 
li°
) {

798 
	`li°_dñ
(&
w
->
li°
);

799 
	`k‰ì
(
w
);

802 
	`li°_f‹_óch_íåy_ß„
(
p
, 
√xt_p
, &
codec
->
d≠m_∑ths
, 
li°
) {

803 
	`li°_dñ
(&
p
->
li°
);

804 
	`k‰ì
(
p
->
l⁄g_«me
);

805 
	`k‰ì
(
p
);

807 
	}
}

818 
	$¢d_soc_d≠m_sync_ídpoöts
(
¢d_soc_codec
 *
codec
)

820 
	`__D
("\n");

822  
	`d≠m_powî_widgës
(
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

823 
	}
}

824 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_sync_ídpoöts
);

839 
	$¢d_soc_d≠m_c⁄√˘_öput
(
¢d_soc_codec
 *
codec
, c⁄° *
sök
,

840 c⁄° * 
c⁄åﬁ
, c⁄° *
sour˚
)

842 
¢d_soc_d≠m_∑th
 *
∑th
;

843 
¢d_soc_d≠m_widgë
 *
wsour˚
 = 
NULL
, *
wsök
 = NULL, *
w
;

844 
ªt
 = 0;

846 
	`__D
("\n");

849 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

851 i‡(!
wsök
 && !(
	`°rcmp
(
w
->
«me
, 
sök
))) {

852 
wsök
 = 
w
;

855 i‡(!
wsour˚
 && !(
	`°rcmp
(
w
->
«me
, 
sour˚
))) {

856 
wsour˚
 = 
w
;

860 i‡(
wsour˚
 =
NULL
 || 
wsök
 == NULL)

861  -
ENODEV
;

863 
∑th
 = 
	`kzÆloc
((
¢d_soc_d≠m_∑th
), 
GFP_KERNEL
);

864 i‡(!
∑th
)

865  -
ENOMEM
;

867 
∑th
->
sour˚
 = 
wsour˚
;

868 
∑th
->
sök
 = 
wsök
;

869 
	`INIT_LIST_HEAD
(&
∑th
->
li°
);

870 
	`INIT_LIST_HEAD
(&
∑th
->
li°_sour˚
);

871 
	`INIT_LIST_HEAD
(&
∑th
->
li°_sök
);

874 i‡(
wsök
->
id
 =
¢d_soc_d≠m_öput
) {

875 i‡(
wsour˚
->
id
 =
¢d_soc_d≠m_micbüs
 ||

876 
wsour˚
->
id
 =
¢d_soc_d≠m_mic
 ||

877 
wsök
->
id
 =
¢d_soc_d≠m_löe
 ||

878 
wsök
->
id
 =
¢d_soc_d≠m_ouçut
)

879 
wsök
->
ext
 = 1;

881 i‡(
wsour˚
->
id
 =
¢d_soc_d≠m_ouçut
) {

882 i‡(
wsök
->
id
 =
¢d_soc_d≠m_•k
 ||

883 
wsök
->
id
 =
¢d_soc_d≠m_hp
 ||

884 
wsök
->
id
 =
¢d_soc_d≠m_löe
 ||

885 
wsök
->
id
 =
¢d_soc_d≠m_öput
)

886 
wsour˚
->
ext
 = 1;

890 i‡(
c⁄åﬁ
 =
NULL
) {

891 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

892 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

893 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

894 
∑th
->
c⁄√˘
 = 1;

899 
wsök
->
id
) {

900 
¢d_soc_d≠m_adc
:

901 
¢d_soc_d≠m_dac
:

902 
¢d_soc_d≠m_pga
:

903 
¢d_soc_d≠m_öput
:

904 
¢d_soc_d≠m_ouçut
:

905 
¢d_soc_d≠m_micbüs
:

906 
¢d_soc_d≠m_vmid
:

907 
¢d_soc_d≠m_¥e
:

908 
¢d_soc_d≠m_po°
:

909 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

910 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

911 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

912 
∑th
->
c⁄√˘
 = 1;

914 
¢d_soc_d≠m_mux
:

915 
ªt
 = 
	`d≠m_c⁄√˘_mux
(
codec
, 
wsour˚
, 
wsök
, 
∑th
, 
c⁄åﬁ
,

916 &
wsök
->
kc⁄åﬁs
[0]);

917 i‡(
ªt
 != 0)

918 
îr
;

920 
¢d_soc_d≠m_swôch
:

921 
¢d_soc_d≠m_mixî
:

922 
ªt
 = 
	`d≠m_c⁄√˘_mixî
(
codec
, 
wsour˚
, 
wsök
, 
∑th
, 
c⁄åﬁ
);

923 i‡(
ªt
 != 0)

924 
îr
;

926 
¢d_soc_d≠m_hp
:

927 
¢d_soc_d≠m_mic
:

928 
¢d_soc_d≠m_löe
:

929 
¢d_soc_d≠m_•k
:

930 
	`li°_add
(&
∑th
->
li°
, &
codec
->
d≠m_∑ths
);

931 
	`li°_add
(&
∑th
->
li°_sök
, &
wsök
->
sour˚s
);

932 
	`li°_add
(&
∑th
->
li°_sour˚
, &
wsour˚
->
söks
);

933 
∑th
->
c⁄√˘
 = 0;

938 
îr
:

939 
	`__E
("asoc:Çÿd≠m m©ch f‹ %†--> %†--> %s\n", 
sour˚
,

940 
c⁄åﬁ
, 
sök
);

941 
	`k‰ì
(
∑th
);

942  
ªt
;

943 
	}
}

944 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_c⁄√˘_öput
);

959 
	$¢d_soc_d≠m_add_rouãs
(
¢d_soc_codec
 *
codec
,

960 c⁄° 
¢d_soc_d≠m_rouã
 *
rouã
, 
num
)

962 
i
, 
ªt
;

964 
	`__D
("\n");

966 
i
 = 0; i < 
num
; i++) {

967 i‡((
ªt
 = 
	`¢d_soc_d≠m_c⁄√˘_öput
(
codec
, 
rouã
->
sök
,

968 
rouã
->
c⁄åﬁ
,Ñouã->
sour˚
)) < 0) {

969 
	`__E
("FaûedÅÿaddÑouã %s->%s\n", 
rouã
->
sour˚
,Ñouã->
sök
);

970  
ªt
;

972 
rouã
++;

976 
	}
}

977 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_add_rouãs
);

987 
	$¢d_soc_d≠m_√w_widgës
(
¢d_soc_codec
 *
codec
)

989 
¢d_soc_d≠m_widgë
 *
w
;

990 
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
;

991 
¢d_soc_d≠m_∑th
 *
∑th
 = 
NULL
;

993 
ªt
 = 0;

995 
	`__D
("\n");

997 
	`muãx_lock
(&
codec
->
muãx
);

998 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
)

1000 i‡(
w
->
√w
)

1003 
w
->
id
) {

1004 
¢d_soc_d≠m_swôch
:

1005 
¢d_soc_d≠m_mixî
:

1006 
	`d≠m_√w_mixî
(
codec
, 
w
);

1009 
¢d_soc_d≠m_mux
:

1011 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1012 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1015 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1016 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1017 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1021 
	`li°_f‹_óch_íåy
(
∑th
, &
w
->
sour˚s
, 
li°_sök
) {

1022 
∑th
->
kc⁄åﬁ
 = kcontrol;

1027 
¢d_soc_d≠m_adc
:

1028 
¢d_soc_d≠m_dac
:

1029 
¢d_soc_d≠m_pga
:

1031 i‡(
w
->
num_kc⁄åﬁs
 == 0) {

1032 
	`__E
("asoc: mux %†ha†nÿc⁄åﬁs\n", 
w
->
«me
);

1035 
kc⁄åﬁ
 = 
	`¢d_soc_˙ew
(&
w
->
kc⁄åﬁs
[0], w, w->
«me
);

1036 i‡((
ªt
 = 
	`¢d_˘l_add
(
codec
->
ˇrd
, 
kc⁄åﬁ
)) < 0) {

1037 
	`__E
("asoc: faûedÅÿadd kc⁄åﬁ %s\n", 
w
->
«me
);

1043 
¢d_soc_d≠m_öput
:

1044 
¢d_soc_d≠m_ouçut
:

1045 
¢d_soc_d≠m_micbüs
:

1046 
¢d_soc_d≠m_•k
:

1047 
¢d_soc_d≠m_hp
:

1048 
¢d_soc_d≠m_mic
:

1049 
¢d_soc_d≠m_löe
:

1050 
¢d_soc_d≠m_vmid
:

1051 
¢d_soc_d≠m_¥e
:

1052 
¢d_soc_d≠m_po°
:

1055 
w
->
√w
 = 1;

1058 
	`d≠m_powî_widgës
(
codec
, 
SND_SOC_DAPM_STREAM_NOP
);

1059 
	`muãx_u∆ock
(&
codec
->
muãx
);

1061 
	}
}

1062 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_widgës
);

1073 
	$¢d_soc_d≠m_gë_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1074 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1076 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1077 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1078 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1079 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1080 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1081 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1083 
	`__D
("\n");

1086 i‡(
widgë
->
id
 =
¢d_soc_d≠m_pga
 && !widgë->
powî
) {

1087 
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] = 
widgë
->
ßved_vÆue
;

1091 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1092 (
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
Ë>> 
shi·
Ë& 
mask
;

1093 i‡(
shi·
 !
rshi·
)

1094 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1095 (
	`¢d_soc_ªad
(
widgë
->
codec
, 
ªg
Ë>> 
rshi·
Ë& 
mask
;

1096 i‡(
övît
) {

1097 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0] =

1098 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[0];

1099 i‡(
shi·
 !
rshi·
)

1100 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1] =

1101 
mask
 - 
uc⁄åﬁ
->
vÆue
.
öãgî
.value[1];

1105 
	}
}

1106 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_gë_vﬁsw
);

1117 
	$¢d_soc_d≠m_put_vﬁsw
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1118 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1120 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1121 
ªg
 = 
kc⁄åﬁ
->
¥iv©e_vÆue
 & 0xff;

1122 
shi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 8) & 0x0f;

1123 
rshi·
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 12) & 0x0f;

1124 
mask
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 16) & 0xff;

1125 
övît
 = (
kc⁄åﬁ
->
¥iv©e_vÆue
 >> 24) & 0x01;

1126 
vÆ
, 
vÆ2
, 
vÆ_mask
;

1127 
ªt
;

1129 
	`__D
("\n");

1131 
vÆ
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[0] & 
mask
);

1133 i‡(
övît
)

1134 
vÆ
 = 
mask
 - val;

1135 
vÆ_mask
 = 
mask
 << 
shi·
;

1136 
vÆ
 = vÆ << 
shi·
;

1137 i‡(
shi·
 !
rshi·
) {

1138 
vÆ2
 = (
uc⁄åﬁ
->
vÆue
.
öãgî
.vÆue[1] & 
mask
);

1139 i‡(
övît
)

1140 
vÆ2
 = 
mask
 - val2;

1141 
vÆ_mask
 |
mask
 << 
rshi·
;

1142 
vÆ
 |
vÆ2
 << 
rshi·
;

1145 
	`muãx_lock
(&
widgë
->
codec
->
muãx
);

1147 
widgë
->
vÆue
 = 
vÆ
;

1150 i‡(
widgë
->
id
 =
¢d_soc_d≠m_pga
 && !widgë->
powî
) {

1151 
widgë
->
ßved_vÆue
 = 
vÆ
;

1152 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1156 
	`d≠m_mixî_upd©e_powî
(
widgë
, 
kc⁄åﬁ
, 
ªg
, 
vÆ_mask
, 
vÆ
, 
övît
);

1157 i‡(
widgë
->
evít
) {

1158 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_REG
) {

1159 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_PRE_REG
);

1160 i‡(
ªt
 < 0)

1161 
out
;

1164 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
);

1166 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_POST_REG
)

1167 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_POST_REG
);

1169 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
ªg
, 
vÆ_mask
, 
vÆ
);

1171 
out
:

1172 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1173  
ªt
;

1174 
	}
}

1175 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_put_vﬁsw
);

1186 
	$¢d_soc_d≠m_gë_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1187 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1189 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1190 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

1191 
vÆ
, 
bômask
;

1193 
	`__D
("\n");

1195 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

1197 
vÆ
 = 
	`¢d_soc_ªad
(
widgë
->
codec
, 
e
->
ªg
);

1198 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] = (
vÆ
 >> 
e
->
shi·_l
Ë& (
bômask
 - 1);

1199 i‡(
e
->
shi·_l
 !e->
shi·_r
)

1200 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] =

1201 (
vÆ
 >> 
e
->
shi·_r
Ë& (
bômask
 - 1);

1204 
	}
}

1205 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_gë_íum_doubÀ
);

1216 
	$¢d_soc_d≠m_put_íum_doubÀ
(
¢d_kc⁄åﬁ
 *
kc⁄åﬁ
,

1217 
¢d_˘l_ñem_vÆue
 *
uc⁄åﬁ
)

1219 
¢d_soc_d≠m_widgë
 *
widgë
 = 
	`¢d_kc⁄åﬁ_chù
(
kc⁄åﬁ
);

1220 
soc_íum
 *
e
 = (soc_íum *)
kc⁄åﬁ
->
¥iv©e_vÆue
;

1221 
vÆ
, 
mux
;

1222 
mask
, 
bômask
;

1223 
ªt
 = 0;

1225 
	`__D
("\n");

1227 
bômask
 = 1; bômask < 
e
->
mask
; bitmask <<= 1)

1229 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0] > 
e
->
mask
 - 1)

1230  -
EINVAL
;

1231 
mux
 = 
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[0];

1232 
vÆ
 = 
mux
 << 
e
->
shi·_l
;

1233 
mask
 = (
bômask
 - 1Ë<< 
e
->
shi·_l
;

1234 i‡(
e
->
shi·_l
 !e->
shi·_r
) {

1235 i‡(
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] > 
e
->
mask
 - 1)

1236  -
EINVAL
;

1237 
vÆ
 |
uc⁄åﬁ
->
vÆue
.
íumî©ed
.
ôem
[1] << 
e
->
shi·_r
;

1238 
mask
 |(
bômask
 - 1Ë<< 
e
->
shi·_r
;

1241 
	`muãx_lock
(&
widgë
->
codec
->
muãx
);

1242 
widgë
->
vÆue
 = 
vÆ
;

1243 
	`d≠m_mux_upd©e_powî
(
widgë
, 
kc⁄åﬁ
, 
mask
, 
mux
, 
e
);

1244 i‡(
widgë
->
evít
) {

1245 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_PRE_REG
) {

1246 i‡((
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_PRE_REG
))< 0)

1247 
out
;

1250 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
);

1252 i‡(
widgë
->
evít_Êags
 & 
SND_SOC_DAPM_POST_REG
)

1253 
ªt
 = 
widgë
->
	`evít
(widgë, 
SND_SOC_DAPM_POST_REG
);

1255 
ªt
 = 
	`¢d_soc_upd©e_bôs
(
widgë
->
codec
, 
e
->
ªg
, 
mask
, 
vÆ
);

1257 
out
:

1258 
	`muãx_u∆ock
(&
widgë
->
codec
->
muãx
);

1259  
ªt
;

1260 
	}
}

1261 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_put_íum_doubÀ
);

1272 
	$¢d_soc_d≠m_√w_c⁄åﬁ
(
¢d_soc_codec
 *
codec
,

1273 c⁄° 
¢d_soc_d≠m_widgë
 *
widgë
)

1275 
¢d_soc_d≠m_widgë
 *
w
;

1277 
	`__D
("\n");

1279 i‡((
w
 = 
	`d≠m_˙ew_widgë
(
widgë
)Ë=
NULL
)

1280  -
ENOMEM
;

1282 
w
->
codec
 = codec;

1283 
	`INIT_LIST_HEAD
(&
w
->
sour˚s
);

1284 
	`INIT_LIST_HEAD
(&
w
->
söks
);

1285 
	`INIT_LIST_HEAD
(&
w
->
li°
);

1286 
	`li°_add
(&
w
->
li°
, &
codec
->
d≠m_widgës
);

1289 
w
->
c⁄√˘ed
 = 1;

1291 
	}
}

1292 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_c⁄åﬁ
);

1304 
	$¢d_soc_d≠m_√w_c⁄åﬁs
(
¢d_soc_codec
 *
codec
,

1305 c⁄° 
¢d_soc_d≠m_widgë
 *
widgë
,

1306 
num
)

1308 
i
, 
ªt
;

1310 
	`__D
("\n");

1312 
i
 = 0; i < 
num
; i++) {

1313 i‡((
ªt
 = 
	`¢d_soc_d≠m_√w_c⁄åﬁ
(
codec
, 
widgë
)) < 0)

1314  
ªt
;

1315 
widgë
++;

1318 
	}
}

1319 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_√w_c⁄åﬁs
);

1333 
	$¢d_soc_d≠m_°ªam_evít
(
¢d_soc_codec
 *
codec
,

1334 *
°ªam
, 
evít
)

1336 
¢d_soc_d≠m_widgë
 *
w
;

1338 
	`__D
("\n");

1340 i‡(
°ªam
 =
NULL
)

1343 
	`muãx_lock
(&
codec
->
muãx
);

1345 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
)

1347 i‡(!
w
->
¢ame
)

1350 
	`__D
("widget %s\n %s stream %sÉvent %d\n",

1351 
w
->
«me
, w->
¢ame
, 
°ªam
, 
evít
);

1353 i‡(
	`°r°r
(
w
->
¢ame
, 
°ªam
)) {

1354 
evít
) {

1355 
SND_SOC_DAPM_STREAM_START
:

1356 
w
->
a˘ive
 = 1;

1358 
SND_SOC_DAPM_STREAM_STOP
:

1359 
w
->
a˘ive
 = 0;

1361 
SND_SOC_DAPM_STREAM_SUSPEND
:

1362 i‡(
w
->
a˘ive
)

1363 
w
->
su•íd
 = 1;

1364 
w
->
a˘ive
 = 0;

1366 
SND_SOC_DAPM_STREAM_RESUME
:

1367 i‡(
w
->
su•íd
) {

1368 
w
->
a˘ive
 = 1;

1369 
w
->
su•íd
 = 0;

1372 
SND_SOC_DAPM_STREAM_PAUSE_PUSH
:

1374 
SND_SOC_DAPM_STREAM_PAUSE_RELEASE
:

1379 
	`muãx_u∆ock
(&
codec
->
muãx
);

1381 
	`d≠m_powî_widgës
(
codec
, 
evít
);

1382 
	`dump_d≠m
(
codec
, 
__FUNCTION__
);

1384 
	}
}

1385 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_°ªam_evít
);

1397 
	$¢d_soc_d≠m_£t_ídpoöt
(
¢d_soc_codec
 *
codec
,

1398 *
ídpoöt
, 
°©us
)

1400 
¢d_soc_d≠m_widgë
 *
w
;

1402 
	`__D
("\n");

1404 
	`li°_f‹_óch_íåy
(
w
, &
codec
->
d≠m_widgës
, 
li°
) {

1405 i‡(!
	`°rcmp
(
w
->
«me
, 
ídpoöt
)) {

1406 
w
->
c⁄√˘ed
 = 
°©us
;

1411 
	}
}

1412 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_£t_ídpoöt
);

1420 
	$¢d_soc_d≠m_‰ì
(
¢d_soc_devi˚
 *
socdev
)

1422 
¢d_soc_codec
 *
codec
 = 
socdev
->codec;

1424 
	`__D
("\n");

1426 
	`¢d_soc_d≠m_sys_ªmove
(
socdev
->
dev
);

1427 
	`d≠m_‰ì_widgës
(
codec
);

1428 
	}
}

1429 
EXPORT_SYMBOL_GPL
(
¢d_soc_d≠m_‰ì
);

1432 
MODULE_AUTHOR
("Liam Girdwood,Üiam.girdwood@wolfsonmicro.com, www.wolfsonmicro.com");

1433 
MODULE_DESCRIPTION
("Dynamic Audio Power Management core for ALSA SoC");

1434 
MODULE_LICENSE
("GPL");

	@/usr/include/linux/i2c.h

26 #i‚de‡
_LINUX_I2C_H


27 
	#_LINUX_I2C_H


	)

29 
	~<löux/ty≥s.h
>

67 
	si2c_msg
 {

68 
__u16
 
	maddr
;

69 
__u16
 
	mÊags
;

70 
	#I2C_M_TEN
 0x0010

	)

71 
	#I2C_M_RD
 0x0001

	)

72 
	#I2C_M_NOSTART
 0x4000

	)

73 
	#I2C_M_REV_DIR_ADDR
 0x2000

	)

74 
	#I2C_M_IGNORE_NAK
 0x1000

	)

75 
	#I2C_M_NO_RD_ACK
 0x0800

	)

76 
	#I2C_M_RECV_LEN
 0x0400

	)

77 
__u16
 
	mÀn
;

78 
__u8
 *
	mbuf
;

83 
	#I2C_FUNC_I2C
 0x00000001

	)

84 
	#I2C_FUNC_10BIT_ADDR
 0x00000002

	)

85 
	#I2C_FUNC_PROTOCOL_MANGLING
 0x00000004

	)

86 
	#I2C_FUNC_SMBUS_PEC
 0x00000008

	)

87 
	#I2C_FUNC_SMBUS_BLOCK_PROC_CALL
 0x00008000

	)

88 
	#I2C_FUNC_SMBUS_QUICK
 0x00010000

	)

89 
	#I2C_FUNC_SMBUS_READ_BYTE
 0x00020000

	)

90 
	#I2C_FUNC_SMBUS_WRITE_BYTE
 0x00040000

	)

91 
	#I2C_FUNC_SMBUS_READ_BYTE_DATA
 0x00080000

	)

92 
	#I2C_FUNC_SMBUS_WRITE_BYTE_DATA
 0x00100000

	)

93 
	#I2C_FUNC_SMBUS_READ_WORD_DATA
 0x00200000

	)

94 
	#I2C_FUNC_SMBUS_WRITE_WORD_DATA
 0x00400000

	)

95 
	#I2C_FUNC_SMBUS_PROC_CALL
 0x00800000

	)

96 
	#I2C_FUNC_SMBUS_READ_BLOCK_DATA
 0x01000000

	)

97 
	#I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 0x02000000

	)

98 
	#I2C_FUNC_SMBUS_READ_I2C_BLOCK
 0x04000000

	)

99 
	#I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
 0x08000000

	)

100 
	#I2C_FUNC_SMBUS_READ_I2C_BLOCK_2
 0x10000000

	)

101 
	#I2C_FUNC_SMBUS_WRITE_I2C_BLOCK_2
 0x20000000

	)

103 
	#I2C_FUNC_SMBUS_BYTE
 (
I2C_FUNC_SMBUS_READ_BYTE
 | \

104 
I2C_FUNC_SMBUS_WRITE_BYTE
)

	)

105 
	#I2C_FUNC_SMBUS_BYTE_DATA
 (
I2C_FUNC_SMBUS_READ_BYTE_DATA
 | \

106 
I2C_FUNC_SMBUS_WRITE_BYTE_DATA
)

	)

107 
	#I2C_FUNC_SMBUS_WORD_DATA
 (
I2C_FUNC_SMBUS_READ_WORD_DATA
 | \

108 
I2C_FUNC_SMBUS_WRITE_WORD_DATA
)

	)

109 
	#I2C_FUNC_SMBUS_BLOCK_DATA
 (
I2C_FUNC_SMBUS_READ_BLOCK_DATA
 | \

110 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
)

	)

111 
	#I2C_FUNC_SMBUS_I2C_BLOCK
 (
I2C_FUNC_SMBUS_READ_I2C_BLOCK
 | \

112 
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK
)

	)

113 
	#I2C_FUNC_SMBUS_I2C_BLOCK_2
 (
I2C_FUNC_SMBUS_READ_I2C_BLOCK_2
 | \

114 
I2C_FUNC_SMBUS_WRITE_I2C_BLOCK_2
)

	)

116 
	#I2C_FUNC_SMBUS_EMUL
 (
I2C_FUNC_SMBUS_QUICK
 | \

117 
I2C_FUNC_SMBUS_BYTE
 | \

118 
I2C_FUNC_SMBUS_BYTE_DATA
 | \

119 
I2C_FUNC_SMBUS_WORD_DATA
 | \

120 
I2C_FUNC_SMBUS_PROC_CALL
 | \

121 
I2C_FUNC_SMBUS_WRITE_BLOCK_DATA
 | \

122 
I2C_FUNC_SMBUS_I2C_BLOCK
 | \

123 
I2C_FUNC_SMBUS_PEC
)

	)

128 
	#I2C_SMBUS_BLOCK_MAX
 32

	)

129 
	ui2c_smbus_d©a
 {

130 
__u8
 
	mbyã
;

131 
__u16
 
	mw‹d
;

132 
__u8
 
	mblock
[
I2C_SMBUS_BLOCK_MAX
 + 2];

137 
	#I2C_SMBUS_READ
 1

	)

138 
	#I2C_SMBUS_WRITE
 0

	)

142 
	#I2C_SMBUS_QUICK
 0

	)

143 
	#I2C_SMBUS_BYTE
 1

	)

144 
	#I2C_SMBUS_BYTE_DATA
 2

	)

145 
	#I2C_SMBUS_WORD_DATA
 3

	)

146 
	#I2C_SMBUS_PROC_CALL
 4

	)

147 
	#I2C_SMBUS_BLOCK_DATA
 5

	)

148 
	#I2C_SMBUS_I2C_BLOCK_BROKEN
 6

	)

149 
	#I2C_SMBUS_BLOCK_PROC_CALL
 7

	)

150 
	#I2C_SMBUS_I2C_BLOCK_DATA
 8

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

5 
	~<löux/posix_ty≥s.h
>

6 
	~<asm/ty≥s.h
>

8 #i‚de‡
__KERNEL_STRICT_NAMES


10 
__u32
 
	t__kî√l_dev_t
;

12 
__kî√l_fd_£t
 
	tfd_£t
;

13 
__kî√l_dev_t
 
	tdev_t
;

14 
__kî√l_öo_t
 
	töo_t
;

15 
__kî√l_mode_t
 
	tmode_t
;

16 
__kî√l_∆ök_t
 
	t∆ök_t
;

17 
__kî√l_off_t
 
	toff_t
;

18 
__kî√l_pid_t
 
	tpid_t
;

19 
__kî√l_daddr_t
 
	tdaddr_t
;

20 
__kî√l_key_t
 
	tkey_t
;

21 
__kî√l_su£c⁄ds_t
 
	tsu£c⁄ds_t
;

22 
__kî√l_timî_t
 
	ttimî_t
;

23 
__kî√l_˛ockid_t
 
	t˛ockid_t
;

24 
__kî√l_mqd_t
 
	tmqd_t
;

26 
__kî√l_uid_t
 
	tuid_t
;

27 
__kî√l_gid_t
 
	tgid_t
;

29 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

30 
__kî√l_loff_t
 
	tloff_t
;

37 #i‚de‡
_SIZE_T


38 
	#_SIZE_T


	)

39 
__kî√l_size_t
 
	tsize_t
;

42 #i‚de‡
_SSIZE_T


43 
	#_SSIZE_T


	)

44 
__kî√l_ssize_t
 
	tssize_t
;

47 #i‚de‡
_PTRDIFF_T


48 
	#_PTRDIFF_T


	)

49 
__kî√l_±rdiff_t
 
	t±rdiff_t
;

52 #i‚de‡
_TIME_T


53 
	#_TIME_T


	)

54 
__kî√l_time_t
 
	ttime_t
;

57 #i‚de‡
_CLOCK_T


58 
	#_CLOCK_T


	)

59 
__kî√l_˛ock_t
 
	t˛ock_t
;

62 #i‚de‡
_CADDR_T


63 
	#_CADDR_T


	)

64 
__kî√l_ˇddr_t
 
	tˇddr_t
;

68 
	tu_ch¨
;

69 
	tu_sh‹t
;

70 
	tu_öt
;

71 
	tu_l⁄g
;

74 
	tunch¨
;

75 
	tush‹t
;

76 
	tuöt
;

77 
	tul⁄g
;

79 #i‚de‡
__BIT_TYPES_DEFINED__


80 
	#__BIT_TYPES_DEFINED__


	)

82 
__u8
 
	tu_öt8_t
;

83 
__s8
 
	töt8_t
;

84 
__u16
 
	tu_öt16_t
;

85 
__s16
 
	töt16_t
;

86 
__u32
 
	tu_öt32_t
;

87 
__s32
 
	töt32_t
;

91 
__u8
 
	tuöt8_t
;

92 
__u16
 
	tuöt16_t
;

93 
__u32
 
	tuöt32_t
;

95 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

96 
__u64
 
	tuöt64_t
;

97 
__u64
 
	tu_öt64_t
;

98 
__s64
 
	töt64_t
;

102 
	#Æig√d_u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

103 
	#Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

104 
	#Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

112 #ifde‡
CONFIG_LBD


113 
u64
 
	t£˘‹_t
;

115 
	t£˘‹_t
;

121 #ifde‡
CONFIG_LSF


122 
u64
 
	tblk˙t_t
;

124 
	tblk˙t_t
;

131 #i‚de‡
pgoff_t


132 
	#pgoff_t
 

	)

142 #ifde‡
__CHECKER__


143 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

145 
	#__bôwi£__


	)

147 #ifde‡
__CHECK_ENDIAN__


148 
	#__bôwi£
 
__bôwi£__


	)

150 
	#__bôwi£


	)

153 
__u16
 
	t__bôwi£
 
	t__À16
;

154 
__u16
 
	t__bôwi£
 
	t__be16
;

155 
__u32
 
	t__bôwi£
 
	t__À32
;

156 
__u32
 
	t__bôwi£
 
	t__be32
;

157 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

158 
__u64
 
	t__bôwi£
 
	t__À64
;

159 
__u64
 
	t__bôwi£
 
	t__be64
;

161 
__u16
 
	t__bôwi£
 
	t__sum16
;

162 
__u32
 
	t__bôwi£
 
	t__wsum
;

165 
	su°©
 {

166 
__kî√l_daddr_t
 
	mf_t‰ì
;

167 
__kî√l_öo_t
 
	mf_töode
;

168 
	mf_‚ame
[6];

169 
	mf_Âack
[6];

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 #i‚de‡
__ASSEMBLY__


6 
	tumode_t
;

13 
__sig√d__
 
	t__s8
;

14 
	t__u8
;

16 
__sig√d__
 
	t__s16
;

17 
	t__u16
;

19 
__sig√d__
 
	t__s32
;

20 
	t__u32
;

22 #ifde‡
__i386__


23 #ifde‡
__GNUC__


24 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

25 
__exãnsi⁄__
 
	t__u64
;

28 
__sig√d__
 
	t__s64
;

29 
	t__u64
;

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

5 #unde‡
NULL


6 #i‡
deföed
(
__˝lu•lus
)

7 
	#NULL
 0

	)

9 
	#NULL
 ((*)0)

	)

	@
1
.
1
/usr/include
21
432
codecs/tlv320aic23.c
codecs/tlv320aic23_28.h
codecs/wm8987.c
codecs/wm8987.h
s3c-i2s.h
s3c-pcm.c
s3c-pcm.h
s3c64xx/s3c6410-i2s-v32.c
s3c64xx/smdk6410_tlv320aic23.c
s3c64xx/smdk6410_wm8987.c
s3c_snd.mod.c
s3c_tlv320aic23.mod.c
soc-core.c
soc-dapm.c
soc-dapm_bak.c
/usr/include/linux/i2c.h
/usr/include/linux/types.h
/usr/include/asm/types.h
/usr/include/linux/posix_types.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
